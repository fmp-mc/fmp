=====================================================================
                          SH4Aプロセッサ依存部
                                  Last Modified: 2010 Feb 17 19:47:49
=====================================================================

○概要

SH4A依存部は，SH4Aをコアとして用いているマルチコアプロセッサをサポート
している．チップ毎に割込み関連のレジスタや扱える例外や割込みの数が異な
る．そのため，チップ毎に異なる部分はチップ毎のファイルに分けることによ
り対応する．

○サポートチップ

SH4A依存部で現状，サポートしているチップは次の通りである．また，参考実
装として，ルネサスプロトタイプ1のチップ用のコードも含む．

  ・SH7786

○制限事項

SH7786については，割込み要求ライン毎のマスククリアレジスタの設定情報
(MSKCLR_INFO_TBL_DATA)と，割込み要求ライン毎の優先度設定レジスタの設定
情報(IPR_INFO_TBL_DATA)の設定内容については，カーネルが用いるリソース
の設定しかなされていないため，他のリソース（周辺デバイス）を用いる際に
は，記述を追加すること．

○コンパイラ

カーネルはGCCを用いてコンパイルする．動作確認したバージョンは以下の通
りである．

 ・GCC 4.1
 ・GCC 4.3.2

○CPU例外ハンドラ番号

CPU例外ハンドラ番号としては，例外事象レジスタに設定する例外コードを用
いる．

○カーネルの使用リソース

カーネルは以下のリソースを使用する．

  ・タイマ
     コア毎にタイマを使用する．カーネル内部のティックの生成に用いる．
     具体的に使用するチャンネルについてターゲット依存部のファイルに記
     載する．

  ・シリアル
     コア毎に1ポート使用する．
     具体的に使用するチャンネルについてターゲット依存部のファイルに記
     載する．

○未登録の例外

未登録の割込みが発生した場合は，prc_config.c で定義されている．
default_exc_handler() が呼び出される．default_exc_handler() は，発生し
た例外の番号をコンソールに出力した後，target_exit() を呼び出す．

○割り込みハンドラ番号と割込み番号

割込みハンドラ番号(inhno)と割込み番号(intno)は，割込み発生時に割込み事
象レジスタに設定される値を用いる．割込み事象レジスタが複数ある場合は，
INTEVT2が存在すればINTEVT2を用いることを基本とする．

○カーネル管理内/外の割込み

ある割込み優先度以上の割込み優先度をカーネル管理外の割込みとして用いる
ことが可能である．カーネル管理内の割込みの最小値は TMIN_INTPRI で設定
されている．TMIN_INTPRI はディフォルトでは，-15 となっており，ターゲッ
ト依存部で上書きが可能である．

○CFG_INTに指定可能な割込み優先度

CFG_INTに指定可能な割込み優先度としては，-1 から TMIN_INTPRI までの値
を設定可能である．

○割込み属性

IRQ割込みに関しては，TA_POSEDGEとTA_NEGEDGEの属性を設定可能である．

○未登録の割込み

未登録の割込みが発生した場合は，prc_user.txt で定義されている．
undef_interrupt() が呼び出される．undef_interrupt() は，発生した割込み
の割込み番号をコンソールに出力した後，target_exit() を呼び出す．

○FPUの扱い

本カーネルではFPUをサポートしている．FPUを有効にするためには，ターゲッ
ト依存部の Makefile.target で，FPU_ENABLE を TRUE に設定すればよい．

●単精度と倍精度の扱い

SH4AのFPUは，単精度と倍精度を fpscr レジスタのPRビットによりを切り替え
る．そのため，GCCでは，fpscr レジスタは一切操作せず，単精度のみをサポ
ートするコードを生成するモード，ディフォルトの fpscr レジスタは単精度
に設定されていると仮定したコードを生成するモード，ディフォルトの fpscr 
レジスタは倍精度に設定されていると仮定したコードを生成するモードの三種
類のモードをサポートしており，これらはコンパイルオプションにより切り替
えることが可能である．

このGCCのFPUの扱いに合わせて，本カーネルは3種類のモードを用意している．
どのモードを使用するかは，ターゲット依存部の Makefile.target で 
FPU_MODE に定義する．FPU_MODE には，次の3種類のモードのうち，いずれか
を定義する()内はGCCのオプションである．

  ・FPU_SINGLE_ONLY : 単精度モードのみサポート(-m4-single-only/-m4a-single-only)
  ・FPU_SINGLE      : ディフォルトは単精度モード(-m4-single/-m4a-single)
  ・FPU_DOUBLE      : ディフォルトは倍精度モード(-m4/-m4a)

なお，コンパイルオプションは，FPU_MODE の設定に合わせて自動的に設定さ
れる．

●fpscr レジスタの設定値

fpscr レジスタには，丸めモード等を設定可能である．fpscr の設定値（単精
度/倍精度の設定以外）に関しては，本カーネルでは，システム全体で同一の
設定とする．設定内容は，ターゲット依存部の target_config.h 内で，
FPSCR_INITに設定する．ディフォルトの設定値は， 0x00040000 となっている． 

   ・SZ : 0  : 転送サイズモードは32bit
   ・DN : 1  : 非正規化数を0として扱う
   ・R  : 00 : 近傍方向への丸め

FR, PRは'1'に設定してはならない．

なお，タスク毎に個別の fpscr レジスタ値を設定したい場合は，ディスパッ
チャや割込みの出入り口で，変数 __fpscr_values(8byte)をタスクのコンテキ
ストに保存すればよい．

●バンクレジスタの保存

SH4AのFPUのレジスタは2バンク構成となっており，アクティブなバンクは 
fpscr で切り替えることができる．GCCではアクティブなバンクのみを使用す
る．そのため，本カーネルでは，アクティブなバンクのみを保存している．ア
クティブでないバンクを保存したい場合は，ターゲット依存部の 
target_config.h 内で，FPU_SAVE_BANKED_REGを定義すればよい．


○変更履歴
2010/02/17
・TA_DISINTの定義を削除．

2010/02/16
・sh_scif.cのSH7786用のifdefが不要であるため削除．

2010/02/10
・ASPカーネルの1.2.1 から 1.3.0 の修正に追従
  ・ierdyをirdyに変更．

2010/01/27
・core_cfg1_out.hの内容の整理．

2010/01/27
・ロック変数の型(LOCK)の定義をtypedefに変更．
・スピンロックの型(SPNLOCK)の定義をtypedefに変更．

2009/12/21
・新規作成

=====================================================================
               ターゲット依存部開発者向けの情報
=====================================================================

○サポートプロセッサの追加

サポートするプロセッサを追加する場合には，サポートするプロセッサの型番
（sh7xxx）でテンプレートファイル(sh7xxx.tf)， カーネル実装のターゲット
依存の定義(sh7xxx_config.h)，ハードウェア資源のヘッダーファイル（
sh7xxx.h）を作成する必要がある．その他のファイルが必要な場合は，プロセ
ッサの型番を先頭に着けファイルを作成し，ターゲット依存部からインクルー
ドすればよい．

○CPU例外の取り扱い

サポートするCPU例外ハンドラ数はターゲットプロセッサの毎に異なるので，
ターゲットプロセッサ毎の定義ファイルに定義する．

例外コードはスパースな値であるため，カーネル内部ではシフトした内部表現
を用いる．

●CPUロックフラグ

SH34はステータスレジスタ(SR)内に割込み優先度マスク(IPM)を持っている．
CPUロックフラグに相当機能を持たない．そのため，擬似的にCPUロックフラグ
を実現する．

●割り込み要求ライン

SH34の割込みは，内部周辺モジュール割込み，IRQ割込み, PINT割込みに分類
でき，それぞれ扱いが異なる．

PINT割込みは15bitのプロセッサへの割込み要求ラインで実現されているが，
IRCへの割込み要求ラインはPINT0〜PINT7とPINT0〜PINT7といった2本になって
いる．そのため，カーネルでも個別には扱わず，2本の割込みとして扱う．
PINTは，個別にPINTERレジスタにより許可禁止可能であるが，カーネルでは，
PINTERレジスタの設定は取り扱わない．そのため，PINTERレジスタの設定は，
ユーザープログラムで行う必要がある．同様にPINTの要求レベルを設定する
ICR2の設定もユーザープログラムで行う必要がある．なお，エッジ割込みに設
定した際の割込みハンドラの入り口でのIRR0のクリアはi_begin_int()で行う．

IRQ割込みは，割込み要求ラインの設定をサポートする．

各割込みの割込み優先度は割込み優先順設定レジスタ(IPRA〜)によって設定す
る．内部周辺モジュールの場合，周辺モジュール毎に設定可能である．例えば
SCIFは，ERI2, RXI2, BRI2, TXI2という4つの割込み要求ラインをサポートす
るが，全ての割込み要求ラインに対して同一の優先度しか設定できない．その
ため，各割込み要求ライン毎にどの割込み優先順設定レジスタのどのフィール
ドに対応しているかの情報（IPR_INFO型）のテーブルを用意する（
ipr_info_tbl）．また，割込み番号は連続していため，サポートしていない番
号には，addressエントリに0を設定する．

typdef stryct {
	/* IPRA:0, IPRB:1, IPRC:2, IPRD:3, IPRE:4, IPRF:5, IPRG:6 */
	uint32_t address; 
	/* bit5〜12:3, bit11〜8:2, bit7〜4:1, bit3〜0:0 */
	int8_t  offset;
}IPR_INFO;

IPR_INFO ipr_info_tbl[] = {
	....
}

●割り込みハンドラ番号と割込み番号

割込みハンドラ番号(inhno)と割込み番号(intno)は，割込み発生時に割込み事
象レジスタに設定される値を用いる．割込み事象レジスタは，INTEVTと
INTEVT2の2種類があり，それぞれ設定される値が異なる．初期のSH34では
INTEVTを使用していたが，現在はINTEVT2を用いる．そのため，プロセッサの
型番毎の定義ファイルを用意して，どちらのレジスタを用いるが設定すること
とする．また，サポートする割込みの最大数も異なるため，最大値もプロセッ
サの型番毎の定義ファイル毎に定義する．

INTENTに設定される値はスパースな値であるため，そのままの値を優先度管理
等のテーブルのインデックスに用いると，無駄な領域が発生する．そのため，
カーネル内部では，INTENTに設定される値をシフトした値を用いる．シフトす
る値もプロセッサ毎に異なるためプロセッサの型番毎の定義ファイルに定義す
る．

●割込み要求禁止フラグ

SH34のIRCは割込み要求禁止フラグを持たない．割込みを禁止する場合は，割
込み優先順設定レジスタ(IPRA〜)を0に設定する必要がある．割込み優先順設
定レジスタを0にすることで割込み要求禁止フラグを実現するとその間，割込
み優先度を記憶しておく領域が必要となる．コンフィギュレータでこのテーブ
ルを用意する．なお，このテーブルは割込みの入り口で割込み要因に応じてSR
に設定する必要があるため，内部表現とする．

○ターゲットプロセッサ毎の定義内容

●カーネルヘッダーファイル(xxx_config.h)

カーネルヘッダーファイルには，以下のマクロや関数を定義する．ターゲット
依存部では，使用するターゲットプロセッサのヘッダーファイルを，
prc_config.h をインクルードする前にインクルードする．


・割込みハンドラ番号に関する定義

  TMIN_INHNO : 割込みハンドラ番号の最小値
  TMAX_INHNO : 割込みハンドラ番号の最大値
  TNUM_INH   : 割込みハンドラ数(スパースな場合はその間もカウントする)

・割込み番号に関する定義

  TMIN_INTNO : 割込み番号の最小値
  TMAX_INTNO : 割込み番号の最大値
  TNUM_INT   : 割込み数(スパースな場合はその間もカウントする)

・割込みハンドラ番号の内部・外部表現相互変換

  EXT_INHNO(iintno) : 内部表現を外部表現に
  INT_INHNO(intno)  : 外部表現を内部表現に

・割込み番号の内部・外部表現相互変換

  EXT_INTNO(iintno) : 内部表現を外部表現に
  INT_INTNO(intno)  : 外部表現を内部表現に

・割込み番号としINTEVT2を使用する場合に定義

  USE_INTEVT2

・アセンブラで割込み番号から32bitのテーブルをアクセスするためのマクロ

  index_intno reg

・CPU例外ハンドラ番号に関する定義

  TMIN_EXCNO : 割込みハンドラ番号の最小値
  TMAX_EXCNO : 割込みハンドラ番号の最大値
  TNUM_EXC   : 割込みハンドラ数(スパースな場合はその間もカウントする)

・CPU例外ハンドラ番号の内部・外部表現相互変換

  EXT_EXCNO(iexcno) : 内部表現を外部表現に
  INT_EXCNO(excno)  : 外部表現を内部表現に

・アセンブラでCPU例外番号から exch_tbl を引くためのアセンブラマクロ

  index_excno reg

・割込み要求ライン毎の優先度設定レジスタの設定情報

  IPR_INFO_TBL_DATA


・IRCの初期化用関数()

  Inline void init_irc(void)

・IRCの割込み優先度レジスタの設定関数

  Inline void set_irc_ipr(uint32_t address, uint32_t offset, uint8_t val)

●CFG用テンプレートファイル

CFG用のテンプレートファイルには以下の変数をを定義する．ターゲット依存
部のCFG用テンプレートファイルでは，sh3.tf をインクルードする前に，使用
するターゲットプロセッサのCFG用テンプレートファイルをインクルードする
こと．

・有効な割込み番号，割込みハンドラ番号，CPU例外ハンドラ番号

$INTNO_VALID
$INHNO_VALID
$EXCNO_VALID

・割込み番号数，割込みハンドラ番号数，CPU例外ハンドラ番号数
  ・0からカウントし，スパースな場合はその間もカウントする

$INTNO_RANGE 
$INHNO_RANGE 
$EXCNO_RANGE 

○プロセッサの種類

使用するプロセッサの種類をターゲット依存部の Makefile.target 内で 
PRC_ARCH として定義する．定義可能な内容は，SH3/SH4/SH4A のいずれかであ
る．
