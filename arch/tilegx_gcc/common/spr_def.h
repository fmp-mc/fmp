/*
 * === This file is copied from '/opt/tilera/TileraMDE-4.2.3.172691/tilegx/tile/usr/include/arch/spr_def.h' ===
 * Copyright 2011 Tilera Corporation. All Rights Reserved.
 *
 *   The source code contained or described herein and all documents
 *   related to the source code ("Material") are owned by Tilera
 *   Corporation or its suppliers or licensors.  Title to the Material
 *   remains with Tilera Corporation or its suppliers and licensors. The
 *   software is licensed under the Tilera MDE License.
 *
 *   Unless otherwise agreed by Tilera in writing, you may not remove or
 *   alter this notice or any other notice embedded in Materials by Tilera
 *   or Tilera's suppliers or licensors in any way.
 */

#pragma once

#ifdef __ASSEMBLER__
#define _64bit(x) x
#else /* __ASSEMBLER__ */
#ifdef __tile__
#define _64bit(x) x ## UL
#else /* __tile__ */
#define _64bit(x) x ## ULL
#endif /* __tile__ */
#endif /* __ASSEMBLER */



#ifndef __DOXYGEN__

/*
 * Address Extension Register Entry 1.
 * This register specifies information controlling the conversion of a
 * virtual address to physical address when operating in physical memory mode.
 */
#define SPR_AAR 0x1280

#define SPR_AAR__PHYSICAL_MEMORY_MODE_SHIFT 0
#define SPR_AAR__PHYSICAL_MEMORY_MODE_WIDTH 1
#define SPR_AAR__PHYSICAL_MEMORY_MODE_RESET_VAL 1
#define SPR_AAR__PHYSICAL_MEMORY_MODE_RMASK 0x1
#define SPR_AAR__PHYSICAL_MEMORY_MODE_MASK  0x1
#define SPR_AAR__PHYSICAL_MEMORY_MODE_FIELD 0,0

#define SPR_AAR__MEMORY_ATTRIBUTE_SHIFT 17
#define SPR_AAR__MEMORY_ATTRIBUTE_WIDTH 2
#define SPR_AAR__MEMORY_ATTRIBUTE_RESET_VAL 0
#define SPR_AAR__MEMORY_ATTRIBUTE_RMASK 0x3
#define SPR_AAR__MEMORY_ATTRIBUTE_MASK  0x60000
#define SPR_AAR__MEMORY_ATTRIBUTE_FIELD 17,18
#define SPR_AAR__MEMORY_ATTRIBUTE_VAL_COHERENT 0x0
#define SPR_AAR__MEMORY_ATTRIBUTE_VAL_NONCOHERENT 0x1
#define SPR_AAR__MEMORY_ATTRIBUTE_VAL_UNCACHEABLE 0x2
#define SPR_AAR__MEMORY_ATTRIBUTE_VAL_MMIO 0x3

#define SPR_AAR__CACHE_HOME_MAPPING_SHIFT 19
#define SPR_AAR__CACHE_HOME_MAPPING_WIDTH 2
#define SPR_AAR__CACHE_HOME_MAPPING_RESET_VAL 0
#define SPR_AAR__CACHE_HOME_MAPPING_RMASK 0x3
#define SPR_AAR__CACHE_HOME_MAPPING_MASK  0x180000
#define SPR_AAR__CACHE_HOME_MAPPING_FIELD 19,20
#define SPR_AAR__CACHE_HOME_MAPPING_VAL_HASH 0x0
#define SPR_AAR__CACHE_HOME_MAPPING_VAL_TILE 0x3

#define SPR_AAR__NO_L1D_ALLOCATION_SHIFT 21
#define SPR_AAR__NO_L1D_ALLOCATION_WIDTH 1
#define SPR_AAR__NO_L1D_ALLOCATION_RESET_VAL 0
#define SPR_AAR__NO_L1D_ALLOCATION_RMASK 0x1
#define SPR_AAR__NO_L1D_ALLOCATION_MASK  0x200000
#define SPR_AAR__NO_L1D_ALLOCATION_FIELD 21,21

#define SPR_AAR__ADAPTIVE_ALLOCATION_SHIFT 22
#define SPR_AAR__ADAPTIVE_ALLOCATION_WIDTH 1
#define SPR_AAR__ADAPTIVE_ALLOCATION_RESET_VAL 0
#define SPR_AAR__ADAPTIVE_ALLOCATION_RMASK 0x1
#define SPR_AAR__ADAPTIVE_ALLOCATION_MASK  0x400000
#define SPR_AAR__ADAPTIVE_ALLOCATION_FIELD 22,22

#define SPR_AAR__PIN_SHIFT 23
#define SPR_AAR__PIN_WIDTH 1
#define SPR_AAR__PIN_RESET_VAL 0
#define SPR_AAR__PIN_RMASK 0x1
#define SPR_AAR__PIN_MASK  0x800000
#define SPR_AAR__PIN_FIELD 23,23

#define SPR_AAR__CACHE_PREFETCH_SHIFT 25
#define SPR_AAR__CACHE_PREFETCH_WIDTH 1
#define SPR_AAR__CACHE_PREFETCH_RESET_VAL 0
#define SPR_AAR__CACHE_PREFETCH_RMASK 0x1
#define SPR_AAR__CACHE_PREFETCH_MASK  0x2000000
#define SPR_AAR__CACHE_PREFETCH_FIELD 25,25

#define SPR_AAR__LOCATION_Y_OR_PAGE_OFFSET_SHIFT 26
#define SPR_AAR__LOCATION_Y_OR_PAGE_OFFSET_WIDTH 4
#define SPR_AAR__LOCATION_Y_OR_PAGE_OFFSET_RESET_VAL 0
#define SPR_AAR__LOCATION_Y_OR_PAGE_OFFSET_RMASK 0xf
#define SPR_AAR__LOCATION_Y_OR_PAGE_OFFSET_MASK  0x3c000000
#define SPR_AAR__LOCATION_Y_OR_PAGE_OFFSET_FIELD 26,29

#define SPR_AAR__LOCATION_X_OR_PAGE_MASK_SHIFT 37
#define SPR_AAR__LOCATION_X_OR_PAGE_MASK_WIDTH 4
#define SPR_AAR__LOCATION_X_OR_PAGE_MASK_RESET_VAL 0
#define SPR_AAR__LOCATION_X_OR_PAGE_MASK_RMASK 0xf
#define SPR_AAR__LOCATION_X_OR_PAGE_MASK_MASK  _64bit(0x1e000000000)
#define SPR_AAR__LOCATION_X_OR_PAGE_MASK_FIELD 37,40


/*
 * Auxiliary Performance Counter-0.
 * This register is a 32-bit auxiliary performance counter.  Increment is
 * controlled by the AUX_PERF_COUNT_CTL register.
 */
#define SPR_AUX_PERF_COUNT_0 0x2105

#define SPR_AUX_PERF_COUNT_0__AUX_PERF_COUNT_0_SHIFT 0
#define SPR_AUX_PERF_COUNT_0__AUX_PERF_COUNT_0_WIDTH 32
#define SPR_AUX_PERF_COUNT_0__AUX_PERF_COUNT_0_RESET_VAL 0
#define SPR_AUX_PERF_COUNT_0__AUX_PERF_COUNT_0_RMASK 0xffffffff
#define SPR_AUX_PERF_COUNT_0__AUX_PERF_COUNT_0_MASK  0xffffffff
#define SPR_AUX_PERF_COUNT_0__AUX_PERF_COUNT_0_FIELD 0,31


/*
 * Auxiliary Performance Counter-1.
 * This register is a 32-bit auxiliary performance counter.  Increment is
 * controlled by the AUX_PERF_COUNT_CTL register.
 */
#define SPR_AUX_PERF_COUNT_1 0x2106

#define SPR_AUX_PERF_COUNT_1__AUX_PERF_COUNT_1_SHIFT 0
#define SPR_AUX_PERF_COUNT_1__AUX_PERF_COUNT_1_WIDTH 32
#define SPR_AUX_PERF_COUNT_1__AUX_PERF_COUNT_1_RESET_VAL 0
#define SPR_AUX_PERF_COUNT_1__AUX_PERF_COUNT_1_RMASK 0xffffffff
#define SPR_AUX_PERF_COUNT_1__AUX_PERF_COUNT_1_MASK  0xffffffff
#define SPR_AUX_PERF_COUNT_1__AUX_PERF_COUNT_1_FIELD 0,31


/*
 * Performance Counter Control.
 * Controls selection of events used for performance counters and diagnostic
 * trace.  The SEL field selects a specific event within each box, and the
 * BOX field selects which boxes event is used.  The event is masked by the
 * PL MASK; using a mask of 0xf will disable the event completely.  Event 0
 * is used for AUX_PERF_COUNT_0 and Trigger 2; Event 1 is used for
 * AUX_PERF_COUNT_1 and Trigger 3.
 */
#define SPR_AUX_PERF_COUNT_CTL 0x2107

#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_SEL_SHIFT 0
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_SEL_WIDTH 6
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_SEL_RESET_VAL 0
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_SEL_RMASK 0x3f
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_SEL_MASK  0x3f
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_SEL_FIELD 0,5

#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_BOX_SHIFT 6
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_BOX_WIDTH 3
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_BOX_RESET_VAL 0
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_BOX_RMASK 0x7
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_BOX_MASK  0x1c0
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_BOX_FIELD 6,8
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_BOX_VAL_NONE 0x0
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_BOX_VAL_MBOX 0x1
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_BOX_VAL_CBOX 0x2
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_BOX_VAL_SBOX 0x3
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_BOX_VAL_NETWORK 0x4
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_BOX_VAL_BCST 0x5
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_BOX_VAL_TOP 0x6
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_BOX_VAL_SPCL 0x7

#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_MASK_SHIFT 10
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_MASK_WIDTH 4
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_MASK_RESET_VAL 15
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_MASK_RMASK 0xf
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_MASK_MASK  0x3c00
#define SPR_AUX_PERF_COUNT_CTL__COUNT_0_MASK_FIELD 10,13

#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_SEL_SHIFT 16
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_SEL_WIDTH 6
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_SEL_RESET_VAL 0
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_SEL_RMASK 0x3f
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_SEL_MASK  0x3f0000
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_SEL_FIELD 16,21

#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_BOX_SHIFT 22
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_BOX_WIDTH 3
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_BOX_RESET_VAL 0
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_BOX_RMASK 0x7
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_BOX_MASK  0x1c00000
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_BOX_FIELD 22,24
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_BOX_VAL_NONE 0x0
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_BOX_VAL_MBOX 0x1
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_BOX_VAL_CBOX 0x2
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_BOX_VAL_SBOX 0x3
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_BOX_VAL_NETWORK 0x4
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_BOX_VAL_BCST 0x5
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_BOX_VAL_TOP 0x6
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_BOX_VAL_SPCL 0x7

#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_MASK_SHIFT 26
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_MASK_WIDTH 4
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_MASK_RESET_VAL 15
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_MASK_RMASK 0xf
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_MASK_MASK  0x3c000000
#define SPR_AUX_PERF_COUNT_CTL__COUNT_1_MASK_FIELD 26,29


/*
 * Auxiliary Performance Counter Status.
 * Provides current overflow status of each auxiliary performance counter.
 * When written with a one, the status bit is cleared for the corresponding
 * counter
 */
#define SPR_AUX_PERF_COUNT_STS 0x2108

#define SPR_AUX_PERF_COUNT_STS__OVERFLOW_SHIFT 0
#define SPR_AUX_PERF_COUNT_STS__OVERFLOW_WIDTH 2
#define SPR_AUX_PERF_COUNT_STS__OVERFLOW_RESET_VAL 0
#define SPR_AUX_PERF_COUNT_STS__OVERFLOW_RMASK 0x3
#define SPR_AUX_PERF_COUNT_STS__OVERFLOW_MASK  0x3
#define SPR_AUX_PERF_COUNT_STS__OVERFLOW_FIELD 0,1


/*
 * Auxiliary Tile Timer.
 * This register contains a 32-bit down counter and a bit that signifies that
 * the counter has reached zero.  There is a disable bit which stops the
 * counter from counting.  When the counter wraps from zero to (2**32) - 1,
 * the interrupt is fired.
 */
#define SPR_AUX_TILE_TIMER_CONTROL 0x1705

#define SPR_AUX_TILE_TIMER_CONTROL__COUNT_SHIFT 0
#define SPR_AUX_TILE_TIMER_CONTROL__COUNT_WIDTH 32
#define SPR_AUX_TILE_TIMER_CONTROL__COUNT_RESET_VAL 0
#define SPR_AUX_TILE_TIMER_CONTROL__COUNT_RMASK 0xffffffff
#define SPR_AUX_TILE_TIMER_CONTROL__COUNT_MASK  0xffffffff
#define SPR_AUX_TILE_TIMER_CONTROL__COUNT_FIELD 0,31

#define SPR_AUX_TILE_TIMER_CONTROL__DISABLE_SHIFT 62
#define SPR_AUX_TILE_TIMER_CONTROL__DISABLE_WIDTH 1
#define SPR_AUX_TILE_TIMER_CONTROL__DISABLE_RESET_VAL 1
#define SPR_AUX_TILE_TIMER_CONTROL__DISABLE_RMASK 0x1
#define SPR_AUX_TILE_TIMER_CONTROL__DISABLE_MASK  _64bit(0x4000000000000000)
#define SPR_AUX_TILE_TIMER_CONTROL__DISABLE_FIELD 62,62

#define SPR_AUX_TILE_TIMER_CONTROL__UNDERFLOW_SHIFT 63
#define SPR_AUX_TILE_TIMER_CONTROL__UNDERFLOW_WIDTH 1
#define SPR_AUX_TILE_TIMER_CONTROL__UNDERFLOW_RESET_VAL 0
#define SPR_AUX_TILE_TIMER_CONTROL__UNDERFLOW_RMASK 0x1
#define SPR_AUX_TILE_TIMER_CONTROL__UNDERFLOW_MASK  _64bit(0x8000000000000000)
#define SPR_AUX_TILE_TIMER_CONTROL__UNDERFLOW_FIELD 63,63


/*
 * Big Endian Configuration.
 * This register indicates the big endian configuration.
 */
#define SPR_BIG_ENDIAN_CONFIG 0x2605

#define SPR_BIG_ENDIAN_CONFIG__BIG_ENDIAN_CONFIG_SHIFT 0
#define SPR_BIG_ENDIAN_CONFIG__BIG_ENDIAN_CONFIG_WIDTH 1
#define SPR_BIG_ENDIAN_CONFIG__BIG_ENDIAN_CONFIG_RESET_VAL 0
#define SPR_BIG_ENDIAN_CONFIG__BIG_ENDIAN_CONFIG_RMASK 0x1
#define SPR_BIG_ENDIAN_CONFIG__BIG_ENDIAN_CONFIG_MASK  0x1
#define SPR_BIG_ENDIAN_CONFIG__BIG_ENDIAN_CONFIG_FIELD 0,0


/*
 * Cache Invalidation Mask Compression Mode.
 * This register specifies the mask compression mode used in the cache block
 * tracking directory.
 */
#define SPR_CACHE_INVALIDATION_COMPRESSION_MODE 0x2606

#define SPR_CACHE_INVALIDATION_COMPRESSION_MODE__CACHE_INVALIDATION_COMPRESSION_MODE_SHIFT 0
#define SPR_CACHE_INVALIDATION_COMPRESSION_MODE__CACHE_INVALIDATION_COMPRESSION_MODE_WIDTH 2
#define SPR_CACHE_INVALIDATION_COMPRESSION_MODE__CACHE_INVALIDATION_COMPRESSION_MODE_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_COMPRESSION_MODE__CACHE_INVALIDATION_COMPRESSION_MODE_RMASK 0x3
#define SPR_CACHE_INVALIDATION_COMPRESSION_MODE__CACHE_INVALIDATION_COMPRESSION_MODE_MASK  0x3
#define SPR_CACHE_INVALIDATION_COMPRESSION_MODE__CACHE_INVALIDATION_COMPRESSION_MODE_FIELD 0,1
#define SPR_CACHE_INVALIDATION_COMPRESSION_MODE__CACHE_INVALIDATION_COMPRESSION_MODE_VAL_NO_COMPRESSION 0x0
#define SPR_CACHE_INVALIDATION_COMPRESSION_MODE__CACHE_INVALIDATION_COMPRESSION_MODE_VAL_X_COMPRESSION 0x1
#define SPR_CACHE_INVALIDATION_COMPRESSION_MODE__CACHE_INVALIDATION_COMPRESSION_MODE_VAL_Y_COMPRESSION 0x2
#define SPR_CACHE_INVALIDATION_COMPRESSION_MODE__CACHE_INVALIDATION_COMPRESSION_MODE_VAL_X_Y_COMPRESSION 0x3


/*
 * Cache Invalidation Mask Register 0.
 * This register specifies the first 16 entries of the invalidation mask.
 * Each entry has 4 bits to indicate up to 4 tiles in the invalidation block
 * are excluded from the tracking directory in the mode specified by the SPR
 * CACHE_INVALIDATION_COMPRESSION_MODE. Bit 0 is the mask for the upper-left
 * corner tile. Bit 1 is the mask of the upper-right corner tile. Bit 2 is
 * the mask of the lower-left corner tile. Bit 3 is the mask of the
 * lower-right corner tile.
 */
#define SPR_CACHE_INVALIDATION_MASK_0 0x2607

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_00_SHIFT 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_00_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_00_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_00_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_00_MASK  0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_00_FIELD 0,3

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_01_SHIFT 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_01_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_01_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_01_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_01_MASK  0xf0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_01_FIELD 4,7

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_02_SHIFT 8
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_02_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_02_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_02_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_02_MASK  0xf00
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_02_FIELD 8,11

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_03_SHIFT 12
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_03_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_03_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_03_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_03_MASK  0xf000
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_03_FIELD 12,15

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_04_SHIFT 16
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_04_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_04_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_04_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_04_MASK  0xf0000
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_04_FIELD 16,19

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_05_SHIFT 20
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_05_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_05_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_05_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_05_MASK  0xf00000
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_05_FIELD 20,23

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_06_SHIFT 24
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_06_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_06_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_06_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_06_MASK  0xf000000
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_06_FIELD 24,27

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_07_SHIFT 28
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_07_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_07_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_07_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_07_MASK  0xf0000000
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_07_FIELD 28,31

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_08_SHIFT 32
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_08_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_08_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_08_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_08_MASK  _64bit(0xf00000000)
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_08_FIELD 32,35

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_09_SHIFT 36
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_09_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_09_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_09_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_09_MASK  _64bit(0xf000000000)
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_09_FIELD 36,39

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_10_SHIFT 40
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_10_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_10_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_10_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_10_MASK  _64bit(0xf0000000000)
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_10_FIELD 40,43

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_11_SHIFT 44
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_11_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_11_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_11_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_11_MASK  _64bit(0xf00000000000)
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_11_FIELD 44,47

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_12_SHIFT 48
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_12_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_12_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_12_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_12_MASK  _64bit(0xf000000000000)
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_12_FIELD 48,51

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_13_SHIFT 52
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_13_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_13_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_13_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_13_MASK  _64bit(0xf0000000000000)
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_13_FIELD 52,55

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_14_SHIFT 56
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_14_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_14_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_14_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_14_MASK  _64bit(0xf00000000000000)
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_14_FIELD 56,59

#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_15_SHIFT 60
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_15_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_15_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_15_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_15_MASK  _64bit(0xf000000000000000)
#define SPR_CACHE_INVALIDATION_MASK_0__ENTRY_15_FIELD 60,63


/*
 * Cache Invalidation Mask Register 1.
 * This register specifies entry-16 to entry-31 of the invalidation mask.
 */
#define SPR_CACHE_INVALIDATION_MASK_1 0x2608

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_16_SHIFT 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_16_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_16_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_16_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_16_MASK  0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_16_FIELD 0,3

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_17_SHIFT 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_17_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_17_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_17_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_17_MASK  0xf0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_17_FIELD 4,7

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_18_SHIFT 8
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_18_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_18_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_18_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_18_MASK  0xf00
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_18_FIELD 8,11

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_19_SHIFT 12
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_19_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_19_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_19_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_19_MASK  0xf000
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_19_FIELD 12,15

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_20_SHIFT 16
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_20_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_20_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_20_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_20_MASK  0xf0000
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_20_FIELD 16,19

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_21_SHIFT 20
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_21_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_21_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_21_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_21_MASK  0xf00000
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_21_FIELD 20,23

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_22_SHIFT 24
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_22_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_22_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_22_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_22_MASK  0xf000000
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_22_FIELD 24,27

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_23_SHIFT 28
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_23_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_23_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_23_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_23_MASK  0xf0000000
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_23_FIELD 28,31

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_24_SHIFT 32
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_24_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_24_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_24_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_24_MASK  _64bit(0xf00000000)
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_24_FIELD 32,35

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_25_SHIFT 36
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_25_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_25_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_25_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_25_MASK  _64bit(0xf000000000)
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_25_FIELD 36,39

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_26_SHIFT 40
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_26_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_26_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_26_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_26_MASK  _64bit(0xf0000000000)
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_26_FIELD 40,43

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_27_SHIFT 44
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_27_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_27_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_27_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_27_MASK  _64bit(0xf00000000000)
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_27_FIELD 44,47

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_28_SHIFT 48
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_28_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_28_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_28_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_28_MASK  _64bit(0xf000000000000)
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_28_FIELD 48,51

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_29_SHIFT 52
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_29_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_29_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_29_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_29_MASK  _64bit(0xf0000000000000)
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_29_FIELD 52,55

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_30_SHIFT 56
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_30_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_30_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_30_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_30_MASK  _64bit(0xf00000000000000)
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_30_FIELD 56,59

#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_31_SHIFT 60
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_31_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_31_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_31_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_31_MASK  _64bit(0xf000000000000000)
#define SPR_CACHE_INVALIDATION_MASK_1__ENTRY_31_FIELD 60,63


/*
 * Cache Invalidation Mask Register 1.
 * This register specifies entry-32 to entry-35 of the invalidation mask.
 */
#define SPR_CACHE_INVALIDATION_MASK_2 0x2609

#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_32_SHIFT 0
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_32_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_32_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_32_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_32_MASK  0xf
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_32_FIELD 0,3

#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_33_SHIFT 4
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_33_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_33_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_33_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_33_MASK  0xf0
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_33_FIELD 4,7

#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_34_SHIFT 8
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_34_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_34_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_34_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_34_MASK  0xf00
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_34_FIELD 8,11

#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_35_SHIFT 12
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_35_WIDTH 4
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_35_RESET_VAL 0
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_35_RMASK 0xf
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_35_MASK  0xf000
#define SPR_CACHE_INVALIDATION_MASK_2__ENTRY_35_FIELD 12,15


/*
 * CACHE PINNED WAYS.
 * This register specifies the L1D and L2 pinned ways.
 */
#define SPR_CACHE_PINNED_WAYS 0x1281

#define SPR_CACHE_PINNED_WAYS__MP_ENABLE_SHIFT 0
#define SPR_CACHE_PINNED_WAYS__MP_ENABLE_WIDTH 8
#define SPR_CACHE_PINNED_WAYS__MP_ENABLE_RESET_VAL 0
#define SPR_CACHE_PINNED_WAYS__MP_ENABLE_RMASK 0xff
#define SPR_CACHE_PINNED_WAYS__MP_ENABLE_MASK  0xff
#define SPR_CACHE_PINNED_WAYS__MP_ENABLE_FIELD 0,7

#define SPR_CACHE_PINNED_WAYS__IO_ENABLE_SHIFT 8
#define SPR_CACHE_PINNED_WAYS__IO_ENABLE_WIDTH 8
#define SPR_CACHE_PINNED_WAYS__IO_ENABLE_RESET_VAL 0
#define SPR_CACHE_PINNED_WAYS__IO_ENABLE_RMASK 0xff
#define SPR_CACHE_PINNED_WAYS__IO_ENABLE_MASK  0xff00
#define SPR_CACHE_PINNED_WAYS__IO_ENABLE_FIELD 8,15

#define SPR_CACHE_PINNED_WAYS__L1D_ENABLE_SHIFT 16
#define SPR_CACHE_PINNED_WAYS__L1D_ENABLE_WIDTH 2
#define SPR_CACHE_PINNED_WAYS__L1D_ENABLE_RESET_VAL 0
#define SPR_CACHE_PINNED_WAYS__L1D_ENABLE_RMASK 0x3
#define SPR_CACHE_PINNED_WAYS__L1D_ENABLE_MASK  0x30000
#define SPR_CACHE_PINNED_WAYS__L1D_ENABLE_FIELD 16,17


/*
 * Level II Cache As Ram Configuration.
 * This register specifies the cache-as-ram configuration.
 */
#define SPR_CBOX_CACHEASRAM_CONFIG 0x260a

#define SPR_CBOX_CACHEASRAM_CONFIG__ENABLE_SHIFT 0
#define SPR_CBOX_CACHEASRAM_CONFIG__ENABLE_WIDTH 1
#define SPR_CBOX_CACHEASRAM_CONFIG__ENABLE_RESET_VAL 1
#define SPR_CBOX_CACHEASRAM_CONFIG__ENABLE_RMASK 0x1
#define SPR_CBOX_CACHEASRAM_CONFIG__ENABLE_MASK  0x1
#define SPR_CBOX_CACHEASRAM_CONFIG__ENABLE_FIELD 0,0

#define SPR_CBOX_CACHEASRAM_CONFIG__ENABLE_WAY_SHIFT 1
#define SPR_CBOX_CACHEASRAM_CONFIG__ENABLE_WAY_WIDTH 3
#define SPR_CBOX_CACHEASRAM_CONFIG__ENABLE_WAY_RESET_VAL 0
#define SPR_CBOX_CACHEASRAM_CONFIG__ENABLE_WAY_RMASK 0x7
#define SPR_CBOX_CACHEASRAM_CONFIG__ENABLE_WAY_MASK  0xe
#define SPR_CBOX_CACHEASRAM_CONFIG__ENABLE_WAY_FIELD 1,3


/*
 * Level II Cache Configuration.
 * This register specifies the level 2 cache configuration.
 */
#define SPR_CBOX_CACHE_CONFIG 0x260b

#define SPR_CBOX_CACHE_CONFIG__DISABLED_WAYS_SHIFT 0
#define SPR_CBOX_CACHE_CONFIG__DISABLED_WAYS_WIDTH 4
#define SPR_CBOX_CACHE_CONFIG__DISABLED_WAYS_RESET_VAL 0
#define SPR_CBOX_CACHE_CONFIG__DISABLED_WAYS_RMASK 0xf
#define SPR_CBOX_CACHE_CONFIG__DISABLED_WAYS_MASK  0xf
#define SPR_CBOX_CACHE_CONFIG__DISABLED_WAYS_FIELD 0,3


/*
 * CBOX Cache Home Map Address.
 * This register specifies the CBox Home Mapping Table index. The top bit of
 * this register forces a read of the indexed table into the
 * CBOX_HOME_MAP_DATA register to occur.
 */
#define SPR_CBOX_HOME_MAP_ADDR 0x260c

#define SPR_CBOX_HOME_MAP_ADDR__INDEX_SHIFT 0
#define SPR_CBOX_HOME_MAP_ADDR__INDEX_WIDTH 7
#define SPR_CBOX_HOME_MAP_ADDR__INDEX_RESET_VAL 0
#define SPR_CBOX_HOME_MAP_ADDR__INDEX_RMASK 0x7f
#define SPR_CBOX_HOME_MAP_ADDR__INDEX_MASK  0x7f
#define SPR_CBOX_HOME_MAP_ADDR__INDEX_FIELD 0,6

#define SPR_CBOX_HOME_MAP_ADDR__R_SHIFT 63
#define SPR_CBOX_HOME_MAP_ADDR__R_WIDTH 1
#define SPR_CBOX_HOME_MAP_ADDR__R_RESET_VAL 0
#define SPR_CBOX_HOME_MAP_ADDR__R_RMASK 0x1
#define SPR_CBOX_HOME_MAP_ADDR__R_MASK  _64bit(0x8000000000000000)
#define SPR_CBOX_HOME_MAP_ADDR__R_FIELD 63,63


/*
 * CBOX Cache Home Map Data.
 * This register specifies the CBox Home Mapping Table data.
 */
#define SPR_CBOX_HOME_MAP_DATA 0x260d

#define SPR_CBOX_HOME_MAP_DATA__FRAC_SHIFT 0
#define SPR_CBOX_HOME_MAP_DATA__FRAC_WIDTH 7
#define SPR_CBOX_HOME_MAP_DATA__FRAC_RESET_VAL 0
#define SPR_CBOX_HOME_MAP_DATA__FRAC_RMASK 0x7f
#define SPR_CBOX_HOME_MAP_DATA__FRAC_MASK  0x7f
#define SPR_CBOX_HOME_MAP_DATA__FRAC_FIELD 0,6

#define SPR_CBOX_HOME_MAP_DATA__TILE_ID_B_SHIFT 7
#define SPR_CBOX_HOME_MAP_DATA__TILE_ID_B_WIDTH 8
#define SPR_CBOX_HOME_MAP_DATA__TILE_ID_B_RESET_VAL 0
#define SPR_CBOX_HOME_MAP_DATA__TILE_ID_B_RMASK 0xff
#define SPR_CBOX_HOME_MAP_DATA__TILE_ID_B_MASK  0x7f80
#define SPR_CBOX_HOME_MAP_DATA__TILE_ID_B_FIELD 7,14

#define SPR_CBOX_HOME_MAP_DATA__TILE_ID_A_SHIFT 15
#define SPR_CBOX_HOME_MAP_DATA__TILE_ID_A_WIDTH 8
#define SPR_CBOX_HOME_MAP_DATA__TILE_ID_A_RESET_VAL 0
#define SPR_CBOX_HOME_MAP_DATA__TILE_ID_A_RMASK 0xff
#define SPR_CBOX_HOME_MAP_DATA__TILE_ID_A_MASK  0x7f8000
#define SPR_CBOX_HOME_MAP_DATA__TILE_ID_A_FIELD 15,22


/*
 * CBOX Memory Controller Map 0.
 * This register specifies the coordinates of the tile which is connected to
 * memory controller. This register is selected used by the CBOX if the top
 * two bits of the physical address are 0x0.
 */
#define SPR_CBOX_MMAP_0 0x260e

#define SPR_CBOX_MMAP_0__Y_COORD_SHIFT 7
#define SPR_CBOX_MMAP_0__Y_COORD_WIDTH 4
#define SPR_CBOX_MMAP_0__Y_COORD_RESET_VAL 0
#define SPR_CBOX_MMAP_0__Y_COORD_RMASK 0xf
#define SPR_CBOX_MMAP_0__Y_COORD_MASK  0x780
#define SPR_CBOX_MMAP_0__Y_COORD_FIELD 7,10

#define SPR_CBOX_MMAP_0__X_COORD_SHIFT 18
#define SPR_CBOX_MMAP_0__X_COORD_WIDTH 4
#define SPR_CBOX_MMAP_0__X_COORD_RESET_VAL 1
#define SPR_CBOX_MMAP_0__X_COORD_RMASK 0xf
#define SPR_CBOX_MMAP_0__X_COORD_MASK  0x3c0000
#define SPR_CBOX_MMAP_0__X_COORD_FIELD 18,21


/*
 * CBOX Memory Controller Map 1.
 * This register specifies the coordinates of the tile which is connected to
 * memory controller. This register is selected used by the CBOX if the top
 * two bits of the physical address are 0x1.
 */
#define SPR_CBOX_MMAP_1 0x260f

#define SPR_CBOX_MMAP_1__Y_COORD_SHIFT 7
#define SPR_CBOX_MMAP_1__Y_COORD_WIDTH 4
#define SPR_CBOX_MMAP_1__Y_COORD_RESET_VAL 0
#define SPR_CBOX_MMAP_1__Y_COORD_RMASK 0xf
#define SPR_CBOX_MMAP_1__Y_COORD_MASK  0x780
#define SPR_CBOX_MMAP_1__Y_COORD_FIELD 7,10

#define SPR_CBOX_MMAP_1__X_COORD_SHIFT 18
#define SPR_CBOX_MMAP_1__X_COORD_WIDTH 4
#define SPR_CBOX_MMAP_1__X_COORD_RESET_VAL 1
#define SPR_CBOX_MMAP_1__X_COORD_RMASK 0xf
#define SPR_CBOX_MMAP_1__X_COORD_MASK  0x3c0000
#define SPR_CBOX_MMAP_1__X_COORD_FIELD 18,21


/*
 * CBOX Memory Controller Map 2.
 * This register specifies the coordinates of the tile which is connected to
 * memory controller. This register is selected used by the CBOX if the top
 * two bits of the physical address are 0x2.
 */
#define SPR_CBOX_MMAP_2 0x2610

#define SPR_CBOX_MMAP_2__Y_COORD_SHIFT 7
#define SPR_CBOX_MMAP_2__Y_COORD_WIDTH 4
#define SPR_CBOX_MMAP_2__Y_COORD_RESET_VAL 0
#define SPR_CBOX_MMAP_2__Y_COORD_RMASK 0xf
#define SPR_CBOX_MMAP_2__Y_COORD_MASK  0x780
#define SPR_CBOX_MMAP_2__Y_COORD_FIELD 7,10

#define SPR_CBOX_MMAP_2__X_COORD_SHIFT 18
#define SPR_CBOX_MMAP_2__X_COORD_WIDTH 4
#define SPR_CBOX_MMAP_2__X_COORD_RESET_VAL 1
#define SPR_CBOX_MMAP_2__X_COORD_RMASK 0xf
#define SPR_CBOX_MMAP_2__X_COORD_MASK  0x3c0000
#define SPR_CBOX_MMAP_2__X_COORD_FIELD 18,21


/*
 * CBOX Memory Controller Map 3.
 * This register specifies the coordinates of the tile which is connected to
 * memory controller. This register is selected used by the CBOX if the top
 * two bits of the physical address are 0x3.
 */
#define SPR_CBOX_MMAP_3 0x2611

#define SPR_CBOX_MMAP_3__Y_COORD_SHIFT 7
#define SPR_CBOX_MMAP_3__Y_COORD_WIDTH 4
#define SPR_CBOX_MMAP_3__Y_COORD_RESET_VAL 0
#define SPR_CBOX_MMAP_3__Y_COORD_RMASK 0xf
#define SPR_CBOX_MMAP_3__Y_COORD_MASK  0x780
#define SPR_CBOX_MMAP_3__Y_COORD_FIELD 7,10

#define SPR_CBOX_MMAP_3__X_COORD_SHIFT 18
#define SPR_CBOX_MMAP_3__X_COORD_WIDTH 4
#define SPR_CBOX_MMAP_3__X_COORD_RESET_VAL 1
#define SPR_CBOX_MMAP_3__X_COORD_RMASK 0xf
#define SPR_CBOX_MMAP_3__X_COORD_MASK  0x3c0000
#define SPR_CBOX_MMAP_3__X_COORD_FIELD 18,21


/*
 * Cbox MSR.
 * This register specifies different Level II Cache Controller configurations.
 */
#define SPR_CBOX_MSR 0x2612

#define SPR_CBOX_MSR__MAF_TIMEOUT_SHIFT 0
#define SPR_CBOX_MSR__MAF_TIMEOUT_WIDTH 2
#define SPR_CBOX_MSR__MAF_TIMEOUT_RESET_VAL 0
#define SPR_CBOX_MSR__MAF_TIMEOUT_RMASK 0x3
#define SPR_CBOX_MSR__MAF_TIMEOUT_MASK  0x3
#define SPR_CBOX_MSR__MAF_TIMEOUT_FIELD 0,1

#define SPR_CBOX_MSR__MAF_TIMEOUT_DISABLE_SHIFT 2
#define SPR_CBOX_MSR__MAF_TIMEOUT_DISABLE_WIDTH 1
#define SPR_CBOX_MSR__MAF_TIMEOUT_DISABLE_RESET_VAL 0
#define SPR_CBOX_MSR__MAF_TIMEOUT_DISABLE_RMASK 0x1
#define SPR_CBOX_MSR__MAF_TIMEOUT_DISABLE_MASK  0x4
#define SPR_CBOX_MSR__MAF_TIMEOUT_DISABLE_FIELD 2,2

#define SPR_CBOX_MSR__SDN_TIMEOUT_SHIFT 3
#define SPR_CBOX_MSR__SDN_TIMEOUT_WIDTH 2
#define SPR_CBOX_MSR__SDN_TIMEOUT_RESET_VAL 0
#define SPR_CBOX_MSR__SDN_TIMEOUT_RMASK 0x3
#define SPR_CBOX_MSR__SDN_TIMEOUT_MASK  0x18
#define SPR_CBOX_MSR__SDN_TIMEOUT_FIELD 3,4

#define SPR_CBOX_MSR__SDN_TIMEOUT_DISABLE_SHIFT 5
#define SPR_CBOX_MSR__SDN_TIMEOUT_DISABLE_WIDTH 1
#define SPR_CBOX_MSR__SDN_TIMEOUT_DISABLE_RESET_VAL 0
#define SPR_CBOX_MSR__SDN_TIMEOUT_DISABLE_RMASK 0x1
#define SPR_CBOX_MSR__SDN_TIMEOUT_DISABLE_MASK  0x20
#define SPR_CBOX_MSR__SDN_TIMEOUT_DISABLE_FIELD 5,5

#define SPR_CBOX_MSR__RDN_QDN_TIMEOUT_SHIFT 6
#define SPR_CBOX_MSR__RDN_QDN_TIMEOUT_WIDTH 2
#define SPR_CBOX_MSR__RDN_QDN_TIMEOUT_RESET_VAL 0
#define SPR_CBOX_MSR__RDN_QDN_TIMEOUT_RMASK 0x3
#define SPR_CBOX_MSR__RDN_QDN_TIMEOUT_MASK  0xc0
#define SPR_CBOX_MSR__RDN_QDN_TIMEOUT_FIELD 6,7

#define SPR_CBOX_MSR__RDN_QDN_TIMEOUT_DISABLE_SHIFT 8
#define SPR_CBOX_MSR__RDN_QDN_TIMEOUT_DISABLE_WIDTH 1
#define SPR_CBOX_MSR__RDN_QDN_TIMEOUT_DISABLE_RESET_VAL 0
#define SPR_CBOX_MSR__RDN_QDN_TIMEOUT_DISABLE_RMASK 0x1
#define SPR_CBOX_MSR__RDN_QDN_TIMEOUT_DISABLE_MASK  0x100
#define SPR_CBOX_MSR__RDN_QDN_TIMEOUT_DISABLE_FIELD 8,8

#define SPR_CBOX_MSR__IREQ_TIMEOUT_SHIFT 9
#define SPR_CBOX_MSR__IREQ_TIMEOUT_WIDTH 2
#define SPR_CBOX_MSR__IREQ_TIMEOUT_RESET_VAL 0
#define SPR_CBOX_MSR__IREQ_TIMEOUT_RMASK 0x3
#define SPR_CBOX_MSR__IREQ_TIMEOUT_MASK  0x600
#define SPR_CBOX_MSR__IREQ_TIMEOUT_FIELD 9,10

#define SPR_CBOX_MSR__IREQ_TIMEOUT_DISABLE_SHIFT 11
#define SPR_CBOX_MSR__IREQ_TIMEOUT_DISABLE_WIDTH 1
#define SPR_CBOX_MSR__IREQ_TIMEOUT_DISABLE_RESET_VAL 0
#define SPR_CBOX_MSR__IREQ_TIMEOUT_DISABLE_RMASK 0x1
#define SPR_CBOX_MSR__IREQ_TIMEOUT_DISABLE_MASK  0x800
#define SPR_CBOX_MSR__IREQ_TIMEOUT_DISABLE_FIELD 11,11

#define SPR_CBOX_MSR__RTF_TIMEOUT_SHIFT 12
#define SPR_CBOX_MSR__RTF_TIMEOUT_WIDTH 2
#define SPR_CBOX_MSR__RTF_TIMEOUT_RESET_VAL 0
#define SPR_CBOX_MSR__RTF_TIMEOUT_RMASK 0x3
#define SPR_CBOX_MSR__RTF_TIMEOUT_MASK  0x3000
#define SPR_CBOX_MSR__RTF_TIMEOUT_FIELD 12,13

#define SPR_CBOX_MSR__RTF_TIMEOUT_DISABLE_SHIFT 14
#define SPR_CBOX_MSR__RTF_TIMEOUT_DISABLE_WIDTH 1
#define SPR_CBOX_MSR__RTF_TIMEOUT_DISABLE_RESET_VAL 0
#define SPR_CBOX_MSR__RTF_TIMEOUT_DISABLE_RMASK 0x1
#define SPR_CBOX_MSR__RTF_TIMEOUT_DISABLE_MASK  0x4000
#define SPR_CBOX_MSR__RTF_TIMEOUT_DISABLE_FIELD 14,14

#define SPR_CBOX_MSR__STARVATION_TEST_SHIFT 15
#define SPR_CBOX_MSR__STARVATION_TEST_WIDTH 1
#define SPR_CBOX_MSR__STARVATION_TEST_RESET_VAL 0
#define SPR_CBOX_MSR__STARVATION_TEST_RMASK 0x1
#define SPR_CBOX_MSR__STARVATION_TEST_MASK  0x8000
#define SPR_CBOX_MSR__STARVATION_TEST_FIELD 15,15

#define SPR_CBOX_MSR__MDF_TIMEOUT_SHIFT 16
#define SPR_CBOX_MSR__MDF_TIMEOUT_WIDTH 2
#define SPR_CBOX_MSR__MDF_TIMEOUT_RESET_VAL 0
#define SPR_CBOX_MSR__MDF_TIMEOUT_RMASK 0x3
#define SPR_CBOX_MSR__MDF_TIMEOUT_MASK  0x30000
#define SPR_CBOX_MSR__MDF_TIMEOUT_FIELD 16,17

#define SPR_CBOX_MSR__MDF_TIMEOUT_DISABLE_SHIFT 18
#define SPR_CBOX_MSR__MDF_TIMEOUT_DISABLE_WIDTH 1
#define SPR_CBOX_MSR__MDF_TIMEOUT_DISABLE_RESET_VAL 0
#define SPR_CBOX_MSR__MDF_TIMEOUT_DISABLE_RMASK 0x1
#define SPR_CBOX_MSR__MDF_TIMEOUT_DISABLE_MASK  0x40000
#define SPR_CBOX_MSR__MDF_TIMEOUT_DISABLE_FIELD 18,18

#define SPR_CBOX_MSR__MMIO_TIMEOUT_SHIFT 19
#define SPR_CBOX_MSR__MMIO_TIMEOUT_WIDTH 2
#define SPR_CBOX_MSR__MMIO_TIMEOUT_RESET_VAL 0
#define SPR_CBOX_MSR__MMIO_TIMEOUT_RMASK 0x3
#define SPR_CBOX_MSR__MMIO_TIMEOUT_MASK  0x180000
#define SPR_CBOX_MSR__MMIO_TIMEOUT_FIELD 19,20

#define SPR_CBOX_MSR__MMIO_TIMEOUT_DISABLE_SHIFT 21
#define SPR_CBOX_MSR__MMIO_TIMEOUT_DISABLE_WIDTH 1
#define SPR_CBOX_MSR__MMIO_TIMEOUT_DISABLE_RESET_VAL 0
#define SPR_CBOX_MSR__MMIO_TIMEOUT_DISABLE_RMASK 0x1
#define SPR_CBOX_MSR__MMIO_TIMEOUT_DISABLE_MASK  0x200000
#define SPR_CBOX_MSR__MMIO_TIMEOUT_DISABLE_FIELD 21,21

#define SPR_CBOX_MSR__REMOTE_REQUEST_WR_HWM_SHIFT 22
#define SPR_CBOX_MSR__REMOTE_REQUEST_WR_HWM_WIDTH 2
#define SPR_CBOX_MSR__REMOTE_REQUEST_WR_HWM_RESET_VAL 0
#define SPR_CBOX_MSR__REMOTE_REQUEST_WR_HWM_RMASK 0x3
#define SPR_CBOX_MSR__REMOTE_REQUEST_WR_HWM_MASK  0xc00000
#define SPR_CBOX_MSR__REMOTE_REQUEST_WR_HWM_FIELD 22,23

#define SPR_CBOX_MSR__QDN_REQUEST_WR_HWM_SHIFT 24
#define SPR_CBOX_MSR__QDN_REQUEST_WR_HWM_WIDTH 2
#define SPR_CBOX_MSR__QDN_REQUEST_WR_HWM_RESET_VAL 0
#define SPR_CBOX_MSR__QDN_REQUEST_WR_HWM_RMASK 0x3
#define SPR_CBOX_MSR__QDN_REQUEST_WR_HWM_MASK  0x3000000
#define SPR_CBOX_MSR__QDN_REQUEST_WR_HWM_FIELD 24,25

#define SPR_CBOX_MSR__MMIO_REQUEST_WR_HWM_SHIFT 26
#define SPR_CBOX_MSR__MMIO_REQUEST_WR_HWM_WIDTH 2
#define SPR_CBOX_MSR__MMIO_REQUEST_WR_HWM_RESET_VAL 0
#define SPR_CBOX_MSR__MMIO_REQUEST_WR_HWM_RMASK 0x3
#define SPR_CBOX_MSR__MMIO_REQUEST_WR_HWM_MASK  0xc000000
#define SPR_CBOX_MSR__MMIO_REQUEST_WR_HWM_FIELD 26,27

#define SPR_CBOX_MSR__RTF_CLOCK_GATING_DISABLE_SHIFT 28
#define SPR_CBOX_MSR__RTF_CLOCK_GATING_DISABLE_WIDTH 1
#define SPR_CBOX_MSR__RTF_CLOCK_GATING_DISABLE_RESET_VAL 0
#define SPR_CBOX_MSR__RTF_CLOCK_GATING_DISABLE_RMASK 0x1
#define SPR_CBOX_MSR__RTF_CLOCK_GATING_DISABLE_MASK  0x10000000
#define SPR_CBOX_MSR__RTF_CLOCK_GATING_DISABLE_FIELD 28,28

#define SPR_CBOX_MSR__INVALIDATE_L1D_FILLPENDING_SHIFT 29
#define SPR_CBOX_MSR__INVALIDATE_L1D_FILLPENDING_WIDTH 1
#define SPR_CBOX_MSR__INVALIDATE_L1D_FILLPENDING_RESET_VAL 0
#define SPR_CBOX_MSR__INVALIDATE_L1D_FILLPENDING_RMASK 0x1
#define SPR_CBOX_MSR__INVALIDATE_L1D_FILLPENDING_MASK  0x20000000
#define SPR_CBOX_MSR__INVALIDATE_L1D_FILLPENDING_FIELD 29,29

#define SPR_CBOX_MSR__XDN_ATTR_SEND_COPY_DISABLE_SHIFT 30
#define SPR_CBOX_MSR__XDN_ATTR_SEND_COPY_DISABLE_WIDTH 1
#define SPR_CBOX_MSR__XDN_ATTR_SEND_COPY_DISABLE_RESET_VAL 0
#define SPR_CBOX_MSR__XDN_ATTR_SEND_COPY_DISABLE_RMASK 0x1
#define SPR_CBOX_MSR__XDN_ATTR_SEND_COPY_DISABLE_MASK  0x40000000
#define SPR_CBOX_MSR__XDN_ATTR_SEND_COPY_DISABLE_FIELD 30,30

#define SPR_CBOX_MSR__FULL_CACHELINE_WRITE_FETCH_SHIFT 31
#define SPR_CBOX_MSR__FULL_CACHELINE_WRITE_FETCH_WIDTH 1
#define SPR_CBOX_MSR__FULL_CACHELINE_WRITE_FETCH_RESET_VAL 0
#define SPR_CBOX_MSR__FULL_CACHELINE_WRITE_FETCH_RMASK 0x1
#define SPR_CBOX_MSR__FULL_CACHELINE_WRITE_FETCH_MASK  0x80000000
#define SPR_CBOX_MSR__FULL_CACHELINE_WRITE_FETCH_FIELD 31,31

#define SPR_CBOX_MSR__EARLY_FILL_DISABLE_SHIFT 32
#define SPR_CBOX_MSR__EARLY_FILL_DISABLE_WIDTH 1
#define SPR_CBOX_MSR__EARLY_FILL_DISABLE_RESET_VAL 0
#define SPR_CBOX_MSR__EARLY_FILL_DISABLE_RMASK 0x1
#define SPR_CBOX_MSR__EARLY_FILL_DISABLE_MASK  _64bit(0x100000000)
#define SPR_CBOX_MSR__EARLY_FILL_DISABLE_FIELD 32,32

#define SPR_CBOX_MSR__NON_TEMPORAL_WRITE_DISABLE_SHIFT 33
#define SPR_CBOX_MSR__NON_TEMPORAL_WRITE_DISABLE_WIDTH 1
#define SPR_CBOX_MSR__NON_TEMPORAL_WRITE_DISABLE_RESET_VAL 0
#define SPR_CBOX_MSR__NON_TEMPORAL_WRITE_DISABLE_RMASK 0x1
#define SPR_CBOX_MSR__NON_TEMPORAL_WRITE_DISABLE_MASK  _64bit(0x200000000)
#define SPR_CBOX_MSR__NON_TEMPORAL_WRITE_DISABLE_FIELD 33,33

#define SPR_CBOX_MSR__SKF_ISSUE_MODE_SHIFT 34
#define SPR_CBOX_MSR__SKF_ISSUE_MODE_WIDTH 1
#define SPR_CBOX_MSR__SKF_ISSUE_MODE_RESET_VAL 0
#define SPR_CBOX_MSR__SKF_ISSUE_MODE_RMASK 0x1
#define SPR_CBOX_MSR__SKF_ISSUE_MODE_MASK  _64bit(0x400000000)
#define SPR_CBOX_MSR__SKF_ISSUE_MODE_FIELD 34,34

#define SPR_CBOX_MSR__TILE_RTF_HWM_MIN_SHIFT 35
#define SPR_CBOX_MSR__TILE_RTF_HWM_MIN_WIDTH 4
#define SPR_CBOX_MSR__TILE_RTF_HWM_MIN_RESET_VAL 14
#define SPR_CBOX_MSR__TILE_RTF_HWM_MIN_RMASK 0xf
#define SPR_CBOX_MSR__TILE_RTF_HWM_MIN_MASK  _64bit(0x7800000000)
#define SPR_CBOX_MSR__TILE_RTF_HWM_MIN_FIELD 35,38

#define SPR_CBOX_MSR__TILE_RTF_HWM_MAX_SHIFT 39
#define SPR_CBOX_MSR__TILE_RTF_HWM_MAX_WIDTH 4
#define SPR_CBOX_MSR__TILE_RTF_HWM_MAX_RESET_VAL 14
#define SPR_CBOX_MSR__TILE_RTF_HWM_MAX_RMASK 0xf
#define SPR_CBOX_MSR__TILE_RTF_HWM_MAX_MASK  _64bit(0x78000000000)
#define SPR_CBOX_MSR__TILE_RTF_HWM_MAX_FIELD 39,42

#define SPR_CBOX_MSR__RTF_STALL_SDN_HWM_SHIFT 43
#define SPR_CBOX_MSR__RTF_STALL_SDN_HWM_WIDTH 5
#define SPR_CBOX_MSR__RTF_STALL_SDN_HWM_RESET_VAL 15
#define SPR_CBOX_MSR__RTF_STALL_SDN_HWM_RMASK 0x1f
#define SPR_CBOX_MSR__RTF_STALL_SDN_HWM_MASK  _64bit(0xf80000000000)
#define SPR_CBOX_MSR__RTF_STALL_SDN_HWM_FIELD 43,47

#define SPR_CBOX_MSR__SDN_STALL_CONTROL_SHIFT 48
#define SPR_CBOX_MSR__SDN_STALL_CONTROL_WIDTH 2
#define SPR_CBOX_MSR__SDN_STALL_CONTROL_RESET_VAL 0
#define SPR_CBOX_MSR__SDN_STALL_CONTROL_RMASK 0x3
#define SPR_CBOX_MSR__SDN_STALL_CONTROL_MASK  _64bit(0x3000000000000)
#define SPR_CBOX_MSR__SDN_STALL_CONTROL_FIELD 48,49

#define SPR_CBOX_MSR__SKF_STALL_MP_HWM_SHIFT 50
#define SPR_CBOX_MSR__SKF_STALL_MP_HWM_WIDTH 4
#define SPR_CBOX_MSR__SKF_STALL_MP_HWM_RESET_VAL 6
#define SPR_CBOX_MSR__SKF_STALL_MP_HWM_RMASK 0xf
#define SPR_CBOX_MSR__SKF_STALL_MP_HWM_MASK  _64bit(0x3c000000000000)
#define SPR_CBOX_MSR__SKF_STALL_MP_HWM_FIELD 50,53

#define SPR_CBOX_MSR__MAF_STALL_MP_HWM_SHIFT 54
#define SPR_CBOX_MSR__MAF_STALL_MP_HWM_WIDTH 4
#define SPR_CBOX_MSR__MAF_STALL_MP_HWM_RESET_VAL 7
#define SPR_CBOX_MSR__MAF_STALL_MP_HWM_RMASK 0xf
#define SPR_CBOX_MSR__MAF_STALL_MP_HWM_MASK  _64bit(0x3c0000000000000)
#define SPR_CBOX_MSR__MAF_STALL_MP_HWM_FIELD 54,57

#define SPR_CBOX_MSR__MAF_STALL_SDN_HWM_SHIFT 58
#define SPR_CBOX_MSR__MAF_STALL_SDN_HWM_WIDTH 4
#define SPR_CBOX_MSR__MAF_STALL_SDN_HWM_RESET_VAL 8
#define SPR_CBOX_MSR__MAF_STALL_SDN_HWM_RMASK 0xf
#define SPR_CBOX_MSR__MAF_STALL_SDN_HWM_MASK  _64bit(0x3c00000000000000)
#define SPR_CBOX_MSR__MAF_STALL_SDN_HWM_FIELD 58,61


/*
 * Atomic Compare and Exchange Value.
 * This register specifies the comparison value in the atomic
 * compare-and-exchange operation.
 */
#define SPR_CMPEXCH_VALUE 0x2780

#define SPR_CMPEXCH_VALUE__CMPEXCH_VALUE_SHIFT 0
#define SPR_CMPEXCH_VALUE__CMPEXCH_VALUE_WIDTH 64
#define SPR_CMPEXCH_VALUE__CMPEXCH_VALUE_RESET_VAL 0
#define SPR_CMPEXCH_VALUE__CMPEXCH_VALUE_RMASK _64bit(0xffffffffffffffff)
#define SPR_CMPEXCH_VALUE__CMPEXCH_VALUE_MASK  _64bit(0xffffffffffffffff)
#define SPR_CMPEXCH_VALUE__CMPEXCH_VALUE_FIELD 0,63


/*
 * Cycle Counter.
 * This register contains the 64 bit cycle counter.  The cycle counter is
 * incremented every machine cycle.
 */
#define SPR_CYCLE 0x2781

#define SPR_CYCLE__CYCLE_SHIFT 0
#define SPR_CYCLE__CYCLE_WIDTH 64
#define SPR_CYCLE__CYCLE_RESET_VAL 0
#define SPR_CYCLE__CYCLE_RMASK _64bit(0xffffffffffffffff)
#define SPR_CYCLE__CYCLE_MASK  _64bit(0xffffffffffffffff)
#define SPR_CYCLE__CYCLE_FIELD 0,63


/*
 * Cycle Counter Modification.
 * This register contains the 64 bit cycle counter.  This register is
 * writable.  The cycle counter is incremented every machine cycle.
 */
#define SPR_CYCLE_MODIFY 0x2680

#define SPR_CYCLE_MODIFY__CYCLE_MODIFY_SHIFT 0
#define SPR_CYCLE_MODIFY__CYCLE_MODIFY_WIDTH 64
#define SPR_CYCLE_MODIFY__CYCLE_MODIFY_RESET_VAL 0
#define SPR_CYCLE_MODIFY__CYCLE_MODIFY_RMASK _64bit(0xffffffffffffffff)
#define SPR_CYCLE_MODIFY__CYCLE_MODIFY_MASK  _64bit(0xffffffffffffffff)
#define SPR_CYCLE_MODIFY__CYCLE_MODIFY_FIELD 0,63


/*
 * Broadcast Control.
 * This register contains fields to control the behavior of the
 * broadcast-routed wires.
 */
#define SPR_DIAG_BCST_CTL 0x2613

#define SPR_DIAG_BCST_CTL__ENABLE_0_SHIFT 0
#define SPR_DIAG_BCST_CTL__ENABLE_0_WIDTH 1
#define SPR_DIAG_BCST_CTL__ENABLE_0_RESET_VAL 0
#define SPR_DIAG_BCST_CTL__ENABLE_0_RMASK 0x1
#define SPR_DIAG_BCST_CTL__ENABLE_0_MASK  0x1
#define SPR_DIAG_BCST_CTL__ENABLE_0_FIELD 0,0

#define SPR_DIAG_BCST_CTL__ENABLE_1_SHIFT 1
#define SPR_DIAG_BCST_CTL__ENABLE_1_WIDTH 1
#define SPR_DIAG_BCST_CTL__ENABLE_1_RESET_VAL 0
#define SPR_DIAG_BCST_CTL__ENABLE_1_RMASK 0x1
#define SPR_DIAG_BCST_CTL__ENABLE_1_MASK  0x2
#define SPR_DIAG_BCST_CTL__ENABLE_1_FIELD 1,1

#define SPR_DIAG_BCST_CTL__ENABLE_2_SHIFT 2
#define SPR_DIAG_BCST_CTL__ENABLE_2_WIDTH 1
#define SPR_DIAG_BCST_CTL__ENABLE_2_RESET_VAL 0
#define SPR_DIAG_BCST_CTL__ENABLE_2_RMASK 0x1
#define SPR_DIAG_BCST_CTL__ENABLE_2_MASK  0x4
#define SPR_DIAG_BCST_CTL__ENABLE_2_FIELD 2,2

#define SPR_DIAG_BCST_CTL__ENABLE_3_SHIFT 3
#define SPR_DIAG_BCST_CTL__ENABLE_3_WIDTH 1
#define SPR_DIAG_BCST_CTL__ENABLE_3_RESET_VAL 0
#define SPR_DIAG_BCST_CTL__ENABLE_3_RMASK 0x1
#define SPR_DIAG_BCST_CTL__ENABLE_3_MASK  0x8
#define SPR_DIAG_BCST_CTL__ENABLE_3_FIELD 3,3


/*
 * Broadcast Mask.
 * This register contains masks that block propagation of broadcast signals
 */
#define SPR_DIAG_BCST_MASK 0x2614

#define SPR_DIAG_BCST_MASK__N_SHIFT 0
#define SPR_DIAG_BCST_MASK__N_WIDTH 4
#define SPR_DIAG_BCST_MASK__N_RESET_VAL 0
#define SPR_DIAG_BCST_MASK__N_RMASK 0xf
#define SPR_DIAG_BCST_MASK__N_MASK  0xf
#define SPR_DIAG_BCST_MASK__N_FIELD 0,3

#define SPR_DIAG_BCST_MASK__S_SHIFT 4
#define SPR_DIAG_BCST_MASK__S_WIDTH 4
#define SPR_DIAG_BCST_MASK__S_RESET_VAL 0
#define SPR_DIAG_BCST_MASK__S_RMASK 0xf
#define SPR_DIAG_BCST_MASK__S_MASK  0xf0
#define SPR_DIAG_BCST_MASK__S_FIELD 4,7

#define SPR_DIAG_BCST_MASK__E_SHIFT 8
#define SPR_DIAG_BCST_MASK__E_WIDTH 4
#define SPR_DIAG_BCST_MASK__E_RESET_VAL 0
#define SPR_DIAG_BCST_MASK__E_RMASK 0xf
#define SPR_DIAG_BCST_MASK__E_MASK  0xf00
#define SPR_DIAG_BCST_MASK__E_FIELD 8,11

#define SPR_DIAG_BCST_MASK__W_SHIFT 12
#define SPR_DIAG_BCST_MASK__W_WIDTH 4
#define SPR_DIAG_BCST_MASK__W_RESET_VAL 0
#define SPR_DIAG_BCST_MASK__W_RMASK 0xf
#define SPR_DIAG_BCST_MASK__W_MASK  0xf000
#define SPR_DIAG_BCST_MASK__W_FIELD 12,15


/*
 * Diag Broadcast Trigger.
 * This register provides the ability to send a pulse or a level out the
 * Broadcast Networks.
 */
#define SPR_DIAG_BCST_TRIGGER 0x2615

#define SPR_DIAG_BCST_TRIGGER__PULSE_SHIFT 0
#define SPR_DIAG_BCST_TRIGGER__PULSE_WIDTH 4
#define SPR_DIAG_BCST_TRIGGER__PULSE_RESET_VAL 0
#define SPR_DIAG_BCST_TRIGGER__PULSE_RMASK 0xf
#define SPR_DIAG_BCST_TRIGGER__PULSE_MASK  0xf
#define SPR_DIAG_BCST_TRIGGER__PULSE_FIELD 0,3

#define SPR_DIAG_BCST_TRIGGER__LEVEL_SHIFT 4
#define SPR_DIAG_BCST_TRIGGER__LEVEL_WIDTH 4
#define SPR_DIAG_BCST_TRIGGER__LEVEL_RESET_VAL 0
#define SPR_DIAG_BCST_TRIGGER__LEVEL_RMASK 0xf
#define SPR_DIAG_BCST_TRIGGER__LEVEL_MASK  0xf0
#define SPR_DIAG_BCST_TRIGGER__LEVEL_FIELD 4,7


/*
 * Diag MUX Control.
 * This register controls the diagnostic trace data MUX selects.  Encoding 0
 * should be used for no trace data (all 0) to save power.  Each box will
 * define its use of the other modes.
 */
#define SPR_DIAG_MUX_CTL 0x2616

#define SPR_DIAG_MUX_CTL__M_SEL_SHIFT 0
#define SPR_DIAG_MUX_CTL__M_SEL_WIDTH 3
#define SPR_DIAG_MUX_CTL__M_SEL_RESET_VAL 0
#define SPR_DIAG_MUX_CTL__M_SEL_RMASK 0x7
#define SPR_DIAG_MUX_CTL__M_SEL_MASK  0x7
#define SPR_DIAG_MUX_CTL__M_SEL_FIELD 0,2

#define SPR_DIAG_MUX_CTL__C_SEL_SHIFT 3
#define SPR_DIAG_MUX_CTL__C_SEL_WIDTH 3
#define SPR_DIAG_MUX_CTL__C_SEL_RESET_VAL 0
#define SPR_DIAG_MUX_CTL__C_SEL_RMASK 0x7
#define SPR_DIAG_MUX_CTL__C_SEL_MASK  0x38
#define SPR_DIAG_MUX_CTL__C_SEL_FIELD 3,5

#define SPR_DIAG_MUX_CTL__S_SEL_SHIFT 6
#define SPR_DIAG_MUX_CTL__S_SEL_WIDTH 3
#define SPR_DIAG_MUX_CTL__S_SEL_RESET_VAL 0
#define SPR_DIAG_MUX_CTL__S_SEL_RMASK 0x7
#define SPR_DIAG_MUX_CTL__S_SEL_MASK  0x1c0
#define SPR_DIAG_MUX_CTL__S_SEL_FIELD 6,8

#define SPR_DIAG_MUX_CTL__N_SEL_SHIFT 9
#define SPR_DIAG_MUX_CTL__N_SEL_WIDTH 3
#define SPR_DIAG_MUX_CTL__N_SEL_RESET_VAL 0
#define SPR_DIAG_MUX_CTL__N_SEL_RMASK 0x7
#define SPR_DIAG_MUX_CTL__N_SEL_MASK  0xe00
#define SPR_DIAG_MUX_CTL__N_SEL_FIELD 9,11

#define SPR_DIAG_MUX_CTL__TOP_SEL_SHIFT 12
#define SPR_DIAG_MUX_CTL__TOP_SEL_WIDTH 4
#define SPR_DIAG_MUX_CTL__TOP_SEL_RESET_VAL 0
#define SPR_DIAG_MUX_CTL__TOP_SEL_RMASK 0xf
#define SPR_DIAG_MUX_CTL__TOP_SEL_MASK  0xf000
#define SPR_DIAG_MUX_CTL__TOP_SEL_FIELD 12,15
#define SPR_DIAG_MUX_CTL__TOP_SEL_VAL_NONE 0x0
#define SPR_DIAG_MUX_CTL__TOP_SEL_VAL_M_C_S_N 0x1
#define SPR_DIAG_MUX_CTL__TOP_SEL_VAL_PASS_DATA 0x2
#define SPR_DIAG_MUX_CTL__TOP_SEL_VAL_PASS_WRITE 0x3


/*
 * Trace control.
 * This register contains fields to enable tracing and select the data to be
 * traced.
 */
#define SPR_DIAG_TRACE_CTL 0x2617

#define SPR_DIAG_TRACE_CTL__SAMPLE_ENABLE_SHIFT 0
#define SPR_DIAG_TRACE_CTL__SAMPLE_ENABLE_WIDTH 1
#define SPR_DIAG_TRACE_CTL__SAMPLE_ENABLE_RESET_VAL 0
#define SPR_DIAG_TRACE_CTL__SAMPLE_ENABLE_RMASK 0x1
#define SPR_DIAG_TRACE_CTL__SAMPLE_ENABLE_MASK  0x1
#define SPR_DIAG_TRACE_CTL__SAMPLE_ENABLE_FIELD 0,0

#define SPR_DIAG_TRACE_CTL__IDN_ENABLE_SHIFT 1
#define SPR_DIAG_TRACE_CTL__IDN_ENABLE_WIDTH 1
#define SPR_DIAG_TRACE_CTL__IDN_ENABLE_RESET_VAL 0
#define SPR_DIAG_TRACE_CTL__IDN_ENABLE_RMASK 0x1
#define SPR_DIAG_TRACE_CTL__IDN_ENABLE_MASK  0x2
#define SPR_DIAG_TRACE_CTL__IDN_ENABLE_FIELD 1,1

#define SPR_DIAG_TRACE_CTL__TILE_Y_SHIFT 4
#define SPR_DIAG_TRACE_CTL__TILE_Y_WIDTH 4
#define SPR_DIAG_TRACE_CTL__TILE_Y_RESET_VAL 0
#define SPR_DIAG_TRACE_CTL__TILE_Y_RMASK 0xf
#define SPR_DIAG_TRACE_CTL__TILE_Y_MASK  0xf0
#define SPR_DIAG_TRACE_CTL__TILE_Y_FIELD 4,7

#define SPR_DIAG_TRACE_CTL__TILE_X_SHIFT 8
#define SPR_DIAG_TRACE_CTL__TILE_X_WIDTH 4
#define SPR_DIAG_TRACE_CTL__TILE_X_RESET_VAL 0
#define SPR_DIAG_TRACE_CTL__TILE_X_RMASK 0xf
#define SPR_DIAG_TRACE_CTL__TILE_X_MASK  0xf00
#define SPR_DIAG_TRACE_CTL__TILE_X_FIELD 8,11

#define SPR_DIAG_TRACE_CTL__LENGTH_SHIFT 12
#define SPR_DIAG_TRACE_CTL__LENGTH_WIDTH 7
#define SPR_DIAG_TRACE_CTL__LENGTH_RESET_VAL 0
#define SPR_DIAG_TRACE_CTL__LENGTH_RMASK 0x7f
#define SPR_DIAG_TRACE_CTL__LENGTH_MASK  0x7f000
#define SPR_DIAG_TRACE_CTL__LENGTH_FIELD 12,18

#define SPR_DIAG_TRACE_CTL__RID_SHIFT 19
#define SPR_DIAG_TRACE_CTL__RID_WIDTH 1
#define SPR_DIAG_TRACE_CTL__RID_RESET_VAL 0
#define SPR_DIAG_TRACE_CTL__RID_RMASK 0x1
#define SPR_DIAG_TRACE_CTL__RID_MASK  0x80000
#define SPR_DIAG_TRACE_CTL__RID_FIELD 19,19

#define SPR_DIAG_TRACE_CTL__INVERT_TRIGGER_SHIFT 28
#define SPR_DIAG_TRACE_CTL__INVERT_TRIGGER_WIDTH 4
#define SPR_DIAG_TRACE_CTL__INVERT_TRIGGER_RESET_VAL 0
#define SPR_DIAG_TRACE_CTL__INVERT_TRIGGER_RMASK 0xf
#define SPR_DIAG_TRACE_CTL__INVERT_TRIGGER_MASK  0xf0000000
#define SPR_DIAG_TRACE_CTL__INVERT_TRIGGER_FIELD 28,31

#define SPR_DIAG_TRACE_CTL__TRIGGER_MODE_SHIFT 32
#define SPR_DIAG_TRACE_CTL__TRIGGER_MODE_WIDTH 3
#define SPR_DIAG_TRACE_CTL__TRIGGER_MODE_RESET_VAL 0
#define SPR_DIAG_TRACE_CTL__TRIGGER_MODE_RMASK 0x7
#define SPR_DIAG_TRACE_CTL__TRIGGER_MODE_MASK  _64bit(0x700000000)
#define SPR_DIAG_TRACE_CTL__TRIGGER_MODE_FIELD 32,34
#define SPR_DIAG_TRACE_CTL__TRIGGER_MODE_VAL_AND4 0x0
#define SPR_DIAG_TRACE_CTL__TRIGGER_MODE_VAL_OR4 0x1
#define SPR_DIAG_TRACE_CTL__TRIGGER_MODE_VAL_AND22OR 0x2
#define SPR_DIAG_TRACE_CTL__TRIGGER_MODE_VAL_AND3OR 0x3
#define SPR_DIAG_TRACE_CTL__TRIGGER_MODE_VAL_OR22AND 0x4
#define SPR_DIAG_TRACE_CTL__TRIGGER_MODE_VAL_OR3AND 0x5
#define SPR_DIAG_TRACE_CTL__TRIGGER_MODE_VAL_SEQ 0x6
#define SPR_DIAG_TRACE_CTL__TRIGGER_MODE_VAL_ALWAYS 0x7


/*
 * Trace data.
 * Provides data from the last trace sample that was taken.
 */
#define SPR_DIAG_TRACE_DATA 0x2618

#define SPR_DIAG_TRACE_DATA__DIAG_TRACE_DATA_SHIFT 0
#define SPR_DIAG_TRACE_DATA__DIAG_TRACE_DATA_WIDTH 64
#define SPR_DIAG_TRACE_DATA__DIAG_TRACE_DATA_RESET_VAL 0
#define SPR_DIAG_TRACE_DATA__DIAG_TRACE_DATA_RMASK _64bit(0xffffffffffffffff)
#define SPR_DIAG_TRACE_DATA__DIAG_TRACE_DATA_MASK  _64bit(0xffffffffffffffff)
#define SPR_DIAG_TRACE_DATA__DIAG_TRACE_DATA_FIELD 0,63


/*
 * Trace status.
 * This register contains status of diag trace
 */
#define SPR_DIAG_TRACE_STS 0x2619

#define SPR_DIAG_TRACE_STS__SAMPLE_VALID_SHIFT 0
#define SPR_DIAG_TRACE_STS__SAMPLE_VALID_WIDTH 1
#define SPR_DIAG_TRACE_STS__SAMPLE_VALID_RESET_VAL 0
#define SPR_DIAG_TRACE_STS__SAMPLE_VALID_RMASK 0x1
#define SPR_DIAG_TRACE_STS__SAMPLE_VALID_MASK  0x1
#define SPR_DIAG_TRACE_STS__SAMPLE_VALID_FIELD 0,0

#define SPR_DIAG_TRACE_STS__IDN_IN_PROG_SHIFT 1
#define SPR_DIAG_TRACE_STS__IDN_IN_PROG_WIDTH 1
#define SPR_DIAG_TRACE_STS__IDN_IN_PROG_RESET_VAL 0
#define SPR_DIAG_TRACE_STS__IDN_IN_PROG_RMASK 0x1
#define SPR_DIAG_TRACE_STS__IDN_IN_PROG_MASK  0x2
#define SPR_DIAG_TRACE_STS__IDN_IN_PROG_FIELD 1,1

#define SPR_DIAG_TRACE_STS__IDN_SW_ERROR_SHIFT 2
#define SPR_DIAG_TRACE_STS__IDN_SW_ERROR_WIDTH 1
#define SPR_DIAG_TRACE_STS__IDN_SW_ERROR_RESET_VAL 0
#define SPR_DIAG_TRACE_STS__IDN_SW_ERROR_RMASK 0x1
#define SPR_DIAG_TRACE_STS__IDN_SW_ERROR_MASK  0x4
#define SPR_DIAG_TRACE_STS__IDN_SW_ERROR_FIELD 2,2

#define SPR_DIAG_TRACE_STS__OVERRUN_COUNT_SHIFT 8
#define SPR_DIAG_TRACE_STS__OVERRUN_COUNT_WIDTH 8
#define SPR_DIAG_TRACE_STS__OVERRUN_COUNT_RESET_VAL 0
#define SPR_DIAG_TRACE_STS__OVERRUN_COUNT_RMASK 0xff
#define SPR_DIAG_TRACE_STS__OVERRUN_COUNT_MASK  0xff00
#define SPR_DIAG_TRACE_STS__OVERRUN_COUNT_FIELD 8,15


/*
 * Done Magic Register.
 * A magic register that is used to signal completion information to the test
 * system.  PASS/FAIL/DONE registers all share the same storage.
 */
#define SPR_DONE 0x2705

#define SPR_DONE__DONE_SHIFT 0
#define SPR_DONE__DONE_WIDTH 64
#define SPR_DONE__DONE_RESET_VAL 0
#define SPR_DONE__DONE_RMASK _64bit(0xffffffffffffffff)
#define SPR_DONE__DONE_MASK  _64bit(0xffffffffffffffff)
#define SPR_DONE__DONE_FIELD 0,63


/*
 * Data Stream Prefetch Control.
 * This register controls hardware initiated Dstream prefetches.  After a
 * load instruction, the prefetcher may be armed to request a non-faulting
 * prefetch request at the address of the load plus the value in the Stride
 * field. Prefetches will not cross a 16kB boundary.
 */
#define SPR_DSTREAM_PF 0x2706

#define SPR_DSTREAM_PF__STRIDE_SHIFT 6
#define SPR_DSTREAM_PF__STRIDE_WIDTH 7
#define SPR_DSTREAM_PF__STRIDE_RESET_VAL 0
#define SPR_DSTREAM_PF__STRIDE_RMASK 0x7f
#define SPR_DSTREAM_PF__STRIDE_MASK  0x1fc0
#define SPR_DSTREAM_PF__STRIDE_FIELD 6,12

#define SPR_DSTREAM_PF__LEVEL_SHIFT 16
#define SPR_DSTREAM_PF__LEVEL_WIDTH 2
#define SPR_DSTREAM_PF__LEVEL_RESET_VAL 0
#define SPR_DSTREAM_PF__LEVEL_RMASK 0x3
#define SPR_DSTREAM_PF__LEVEL_MASK  0x30000
#define SPR_DSTREAM_PF__LEVEL_FIELD 16,17

#define SPR_DSTREAM_PF__MISS_ONLY_SHIFT 18
#define SPR_DSTREAM_PF__MISS_ONLY_WIDTH 1
#define SPR_DSTREAM_PF__MISS_ONLY_RESET_VAL 0
#define SPR_DSTREAM_PF__MISS_ONLY_RMASK 0x1
#define SPR_DSTREAM_PF__MISS_ONLY_MASK  0x40000
#define SPR_DSTREAM_PF__MISS_ONLY_FIELD 18,18


/*
 * Data TLB Bad Address.
 * This register contains the faulting virtual address for a DTLB miss or
 * access violation.
 */
#define SPR_DTLB_BAD_ADDR 0x1282

#define SPR_DTLB_BAD_ADDR__DTLB_BAD_ADDR_SHIFT 0
#define SPR_DTLB_BAD_ADDR__DTLB_BAD_ADDR_WIDTH 42
#define SPR_DTLB_BAD_ADDR__DTLB_BAD_ADDR_RESET_VAL 0
#define SPR_DTLB_BAD_ADDR__DTLB_BAD_ADDR_RMASK _64bit(0x3ffffffffff)
#define SPR_DTLB_BAD_ADDR__DTLB_BAD_ADDR_MASK  _64bit(0x3ffffffffff)
#define SPR_DTLB_BAD_ADDR__DTLB_BAD_ADDR_FIELD 0,41


/*
 * Data TLB Bad Address Reason.
 * This register contains the faulting reason for a DTLB miss or access
 * violation.
 */
#define SPR_DTLB_BAD_ADDR_REASON 0x1283

#define SPR_DTLB_BAD_ADDR_REASON__WRITE_SHIFT 0
#define SPR_DTLB_BAD_ADDR_REASON__WRITE_WIDTH 1
#define SPR_DTLB_BAD_ADDR_REASON__WRITE_RESET_VAL 0
#define SPR_DTLB_BAD_ADDR_REASON__WRITE_RMASK 0x1
#define SPR_DTLB_BAD_ADDR_REASON__WRITE_MASK  0x1
#define SPR_DTLB_BAD_ADDR_REASON__WRITE_FIELD 0,0


/*
 * Data TLB entry ATTR.
 * This register is used to read and write the attributes of the main
 * processor data TLB Entry. Writing this register triggers the write of the
 * DTB.
 */
#define SPR_DTLB_CURRENT_ATTR 0x1284

#define SPR_DTLB_CURRENT_ATTR__V_SHIFT 0
#define SPR_DTLB_CURRENT_ATTR__V_WIDTH 1
#define SPR_DTLB_CURRENT_ATTR__V_RESET_VAL 0
#define SPR_DTLB_CURRENT_ATTR__V_RMASK 0x1
#define SPR_DTLB_CURRENT_ATTR__V_MASK  0x1
#define SPR_DTLB_CURRENT_ATTR__V_FIELD 0,0

#define SPR_DTLB_CURRENT_ATTR__W_SHIFT 1
#define SPR_DTLB_CURRENT_ATTR__W_WIDTH 1
#define SPR_DTLB_CURRENT_ATTR__W_RESET_VAL 0
#define SPR_DTLB_CURRENT_ATTR__W_RMASK 0x1
#define SPR_DTLB_CURRENT_ATTR__W_MASK  0x2
#define SPR_DTLB_CURRENT_ATTR__W_FIELD 1,1

#define SPR_DTLB_CURRENT_ATTR__MPL_SHIFT 2
#define SPR_DTLB_CURRENT_ATTR__MPL_WIDTH 2
#define SPR_DTLB_CURRENT_ATTR__MPL_RESET_VAL 0
#define SPR_DTLB_CURRENT_ATTR__MPL_RMASK 0x3
#define SPR_DTLB_CURRENT_ATTR__MPL_MASK  0xc
#define SPR_DTLB_CURRENT_ATTR__MPL_FIELD 2,3

#define SPR_DTLB_CURRENT_ATTR__PS_SHIFT 4
#define SPR_DTLB_CURRENT_ATTR__PS_WIDTH 4
#define SPR_DTLB_CURRENT_ATTR__PS_RESET_VAL 0
#define SPR_DTLB_CURRENT_ATTR__PS_RMASK 0xf
#define SPR_DTLB_CURRENT_ATTR__PS_MASK  0xf0
#define SPR_DTLB_CURRENT_ATTR__PS_FIELD 4,7
#define SPR_DTLB_CURRENT_ATTR__PS_VAL_4K_PAGE 0x0
#define SPR_DTLB_CURRENT_ATTR__PS_VAL_16K_PAGE 0x1
#define SPR_DTLB_CURRENT_ATTR__PS_VAL_64K_PAGE 0x2
#define SPR_DTLB_CURRENT_ATTR__PS_VAL_256K_PAGE 0x3
#define SPR_DTLB_CURRENT_ATTR__PS_VAL_1M_PAGE 0x4
#define SPR_DTLB_CURRENT_ATTR__PS_VAL_4M_PAGE 0x5
#define SPR_DTLB_CURRENT_ATTR__PS_VAL_16M_PAGE 0x6
#define SPR_DTLB_CURRENT_ATTR__PS_VAL_64M_PAGE 0x7
#define SPR_DTLB_CURRENT_ATTR__PS_VAL_256M_PAGE 0x8
#define SPR_DTLB_CURRENT_ATTR__PS_VAL_1G_PAGE 0x9
#define SPR_DTLB_CURRENT_ATTR__PS_VAL_4G_PAGE 0xa
#define SPR_DTLB_CURRENT_ATTR__PS_VAL_16G_PAGE 0xb
#define SPR_DTLB_CURRENT_ATTR__PS_VAL_64G_PAGE 0xc

#define SPR_DTLB_CURRENT_ATTR__G_SHIFT 8
#define SPR_DTLB_CURRENT_ATTR__G_WIDTH 1
#define SPR_DTLB_CURRENT_ATTR__G_RESET_VAL 0
#define SPR_DTLB_CURRENT_ATTR__G_RMASK 0x1
#define SPR_DTLB_CURRENT_ATTR__G_MASK  0x100
#define SPR_DTLB_CURRENT_ATTR__G_FIELD 8,8

#define SPR_DTLB_CURRENT_ATTR__ASID_SHIFT 9
#define SPR_DTLB_CURRENT_ATTR__ASID_WIDTH 8
#define SPR_DTLB_CURRENT_ATTR__ASID_RESET_VAL 0
#define SPR_DTLB_CURRENT_ATTR__ASID_RMASK 0xff
#define SPR_DTLB_CURRENT_ATTR__ASID_MASK  0x1fe00
#define SPR_DTLB_CURRENT_ATTR__ASID_FIELD 9,16

#define SPR_DTLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_SHIFT 17
#define SPR_DTLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_WIDTH 2
#define SPR_DTLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_RESET_VAL 0
#define SPR_DTLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_RMASK 0x3
#define SPR_DTLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_MASK  0x60000
#define SPR_DTLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_FIELD 17,18
#define SPR_DTLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_COHERENT 0x0
#define SPR_DTLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_NONCOHERENT 0x1
#define SPR_DTLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_UNCACHEABLE 0x2
#define SPR_DTLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_MMIO 0x3

#define SPR_DTLB_CURRENT_ATTR__CACHE_HOME_MAPPING_SHIFT 19
#define SPR_DTLB_CURRENT_ATTR__CACHE_HOME_MAPPING_WIDTH 2
#define SPR_DTLB_CURRENT_ATTR__CACHE_HOME_MAPPING_RESET_VAL 0
#define SPR_DTLB_CURRENT_ATTR__CACHE_HOME_MAPPING_RMASK 0x3
#define SPR_DTLB_CURRENT_ATTR__CACHE_HOME_MAPPING_MASK  0x180000
#define SPR_DTLB_CURRENT_ATTR__CACHE_HOME_MAPPING_FIELD 19,20
#define SPR_DTLB_CURRENT_ATTR__CACHE_HOME_MAPPING_VAL_HASH 0x0
#define SPR_DTLB_CURRENT_ATTR__CACHE_HOME_MAPPING_VAL_TILE 0x3

#define SPR_DTLB_CURRENT_ATTR__NO_L1D_ALLOCATION_SHIFT 21
#define SPR_DTLB_CURRENT_ATTR__NO_L1D_ALLOCATION_WIDTH 1
#define SPR_DTLB_CURRENT_ATTR__NO_L1D_ALLOCATION_RESET_VAL 0
#define SPR_DTLB_CURRENT_ATTR__NO_L1D_ALLOCATION_RMASK 0x1
#define SPR_DTLB_CURRENT_ATTR__NO_L1D_ALLOCATION_MASK  0x200000
#define SPR_DTLB_CURRENT_ATTR__NO_L1D_ALLOCATION_FIELD 21,21

#define SPR_DTLB_CURRENT_ATTR__ADAPTIVE_ALLOCATION_SHIFT 22
#define SPR_DTLB_CURRENT_ATTR__ADAPTIVE_ALLOCATION_WIDTH 1
#define SPR_DTLB_CURRENT_ATTR__ADAPTIVE_ALLOCATION_RESET_VAL 0
#define SPR_DTLB_CURRENT_ATTR__ADAPTIVE_ALLOCATION_RMASK 0x1
#define SPR_DTLB_CURRENT_ATTR__ADAPTIVE_ALLOCATION_MASK  0x400000
#define SPR_DTLB_CURRENT_ATTR__ADAPTIVE_ALLOCATION_FIELD 22,22

#define SPR_DTLB_CURRENT_ATTR__PIN_SHIFT 23
#define SPR_DTLB_CURRENT_ATTR__PIN_WIDTH 1
#define SPR_DTLB_CURRENT_ATTR__PIN_RESET_VAL 0
#define SPR_DTLB_CURRENT_ATTR__PIN_RMASK 0x1
#define SPR_DTLB_CURRENT_ATTR__PIN_MASK  0x800000
#define SPR_DTLB_CURRENT_ATTR__PIN_FIELD 23,23

#define SPR_DTLB_CURRENT_ATTR__CACHE_PREFETCH_SHIFT 25
#define SPR_DTLB_CURRENT_ATTR__CACHE_PREFETCH_WIDTH 1
#define SPR_DTLB_CURRENT_ATTR__CACHE_PREFETCH_RESET_VAL 0
#define SPR_DTLB_CURRENT_ATTR__CACHE_PREFETCH_RMASK 0x1
#define SPR_DTLB_CURRENT_ATTR__CACHE_PREFETCH_MASK  0x2000000
#define SPR_DTLB_CURRENT_ATTR__CACHE_PREFETCH_FIELD 25,25

#define SPR_DTLB_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_SHIFT 26
#define SPR_DTLB_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_WIDTH 4
#define SPR_DTLB_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_RESET_VAL 0
#define SPR_DTLB_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_RMASK 0xf
#define SPR_DTLB_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_MASK  0x3c000000
#define SPR_DTLB_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_FIELD 26,29

#define SPR_DTLB_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_SHIFT 37
#define SPR_DTLB_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_WIDTH 4
#define SPR_DTLB_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_RESET_VAL 0
#define SPR_DTLB_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_RMASK 0xf
#define SPR_DTLB_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_MASK  _64bit(0x1e000000000)
#define SPR_DTLB_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_FIELD 37,40


/*
 * Data TLB entry PA.
 * This register is used to read and write the physical address of the main
 * processor data TLB Entry
 */
#define SPR_DTLB_CURRENT_PA 0x1285

#define SPR_DTLB_CURRENT_PA__PFN_SHIFT 12
#define SPR_DTLB_CURRENT_PA__PFN_WIDTH 28
#define SPR_DTLB_CURRENT_PA__PFN_RESET_VAL 0
#define SPR_DTLB_CURRENT_PA__PFN_RMASK 0xfffffff
#define SPR_DTLB_CURRENT_PA__PFN_MASK  _64bit(0xfffffff000)
#define SPR_DTLB_CURRENT_PA__PFN_FIELD 12,39


/*
 * Data TLB entry VA.
 * This register is used to read and write the virtual address of the main
 * processor data TLB Entry
 */
#define SPR_DTLB_CURRENT_VA 0x1286

#define SPR_DTLB_CURRENT_VA__VPN_SHIFT 12
#define SPR_DTLB_CURRENT_VA__VPN_WIDTH 30
#define SPR_DTLB_CURRENT_VA__VPN_RESET_VAL 0
#define SPR_DTLB_CURRENT_VA__VPN_RMASK 0x3fffffff
#define SPR_DTLB_CURRENT_VA__VPN_MASK  _64bit(0x3fffffff000)
#define SPR_DTLB_CURRENT_VA__VPN_FIELD 12,41


/*
 * Data TLB Index.
 * This register is used to specify which data TLB entry is read and written
 * by the DTLB_CURRENT_VA, PA and ATTR registers.  The top bit of this
 * register forces a read of the indexed TLB into the DTLB_CURRENT_VA, PA and
 * ATTR registers to occur.
 */
#define SPR_DTLB_INDEX 0x1287

#define SPR_DTLB_INDEX__INDEX_SHIFT 0
#define SPR_DTLB_INDEX__INDEX_WIDTH 5
#define SPR_DTLB_INDEX__INDEX_RESET_VAL 0
#define SPR_DTLB_INDEX__INDEX_RMASK 0x1f
#define SPR_DTLB_INDEX__INDEX_MASK  0x1f
#define SPR_DTLB_INDEX__INDEX_FIELD 0,4

#define SPR_DTLB_INDEX__L_SHIFT 62
#define SPR_DTLB_INDEX__L_WIDTH 1
#define SPR_DTLB_INDEX__L_RESET_VAL 0
#define SPR_DTLB_INDEX__L_RMASK 0x1
#define SPR_DTLB_INDEX__L_MASK  _64bit(0x4000000000000000)
#define SPR_DTLB_INDEX__L_FIELD 62,62

#define SPR_DTLB_INDEX__R_SHIFT 63
#define SPR_DTLB_INDEX__R_WIDTH 1
#define SPR_DTLB_INDEX__R_RESET_VAL 0
#define SPR_DTLB_INDEX__R_RMASK 0x1
#define SPR_DTLB_INDEX__R_MASK  _64bit(0x8000000000000000)
#define SPR_DTLB_INDEX__R_FIELD 63,63


/*
 * Data TLB Match Result.
 * This register contains the result of a DTLB probe.  Each bit represents
 * whether the corresponding DTLB entry matches the last DTLB probe.
 */
#define SPR_DTLB_MATCH_0 0x1288

#define SPR_DTLB_MATCH_0__DTLB_MATCH_0_SHIFT 0
#define SPR_DTLB_MATCH_0__DTLB_MATCH_0_WIDTH 32
#define SPR_DTLB_MATCH_0__DTLB_MATCH_0_RESET_VAL 0
#define SPR_DTLB_MATCH_0__DTLB_MATCH_0_RMASK 0xffffffff
#define SPR_DTLB_MATCH_0__DTLB_MATCH_0_MASK  0xffffffff
#define SPR_DTLB_MATCH_0__DTLB_MATCH_0_FIELD 0,31


/*
 * Data TLB Performance Monitor Configuration.
 * This register specifies information controlling the performance monitoring
 * for the data stream.
 */
#define SPR_DTLB_PERF 0x1289

#define SPR_DTLB_PERF__MATCH_ENTRIES_SHIFT 0
#define SPR_DTLB_PERF__MATCH_ENTRIES_WIDTH 32
#define SPR_DTLB_PERF__MATCH_ENTRIES_RESET_VAL 0
#define SPR_DTLB_PERF__MATCH_ENTRIES_RMASK 0xffffffff
#define SPR_DTLB_PERF__MATCH_ENTRIES_MASK  0xffffffff
#define SPR_DTLB_PERF__MATCH_ENTRIES_FIELD 0,31

#define SPR_DTLB_PERF__COUNT_WRITE_SHIFT 62
#define SPR_DTLB_PERF__COUNT_WRITE_WIDTH 1
#define SPR_DTLB_PERF__COUNT_WRITE_RESET_VAL 0
#define SPR_DTLB_PERF__COUNT_WRITE_RMASK 0x1
#define SPR_DTLB_PERF__COUNT_WRITE_MASK  _64bit(0x4000000000000000)
#define SPR_DTLB_PERF__COUNT_WRITE_FIELD 62,62

#define SPR_DTLB_PERF__COUNT_READ_SHIFT 63
#define SPR_DTLB_PERF__COUNT_READ_WIDTH 1
#define SPR_DTLB_PERF__COUNT_READ_RESET_VAL 0
#define SPR_DTLB_PERF__COUNT_READ_RMASK 0x1
#define SPR_DTLB_PERF__COUNT_READ_MASK  _64bit(0x8000000000000000)
#define SPR_DTLB_PERF__COUNT_READ_FIELD 63,63


/*
 * Data TLB TSB Address 0.
 * This register specifies the address of a TSB entry to access for the last
 * DTLB miss.
 */
#define SPR_DTLB_TSB_ADDR_0 0x128a

#define SPR_DTLB_TSB_ADDR_0__ADDR_SHIFT 0
#define SPR_DTLB_TSB_ADDR_0__ADDR_WIDTH 64
#define SPR_DTLB_TSB_ADDR_0__ADDR_RESET_VAL 0
#define SPR_DTLB_TSB_ADDR_0__ADDR_RMASK _64bit(0xffffffffffffffff)
#define SPR_DTLB_TSB_ADDR_0__ADDR_MASK  _64bit(0xffffffffffffffff)
#define SPR_DTLB_TSB_ADDR_0__ADDR_FIELD 0,63


/*
 * Data TLB TSB Address 1.
 * This register specifies the address of a TSB entry to access for the last
 * DTLB miss.
 */
#define SPR_DTLB_TSB_ADDR_1 0x128b

#define SPR_DTLB_TSB_ADDR_1__ADDR_SHIFT 0
#define SPR_DTLB_TSB_ADDR_1__ADDR_WIDTH 64
#define SPR_DTLB_TSB_ADDR_1__ADDR_RESET_VAL 0
#define SPR_DTLB_TSB_ADDR_1__ADDR_RMASK _64bit(0xffffffffffffffff)
#define SPR_DTLB_TSB_ADDR_1__ADDR_MASK  _64bit(0xffffffffffffffff)
#define SPR_DTLB_TSB_ADDR_1__ADDR_FIELD 0,63


/*
 * Data TLB TSB Base Address 0.
 * This register specifies the address of the TSB base and control bits for
 * TSB address calculation.
 */
#define SPR_DTLB_TSB_BASE_ADDR_0 0x1205

#define SPR_DTLB_TSB_BASE_ADDR_0__ENTRIES_SHIFT 0
#define SPR_DTLB_TSB_BASE_ADDR_0__ENTRIES_WIDTH 3
#define SPR_DTLB_TSB_BASE_ADDR_0__ENTRIES_RESET_VAL 0
#define SPR_DTLB_TSB_BASE_ADDR_0__ENTRIES_RMASK 0x7
#define SPR_DTLB_TSB_BASE_ADDR_0__ENTRIES_MASK  0x7
#define SPR_DTLB_TSB_BASE_ADDR_0__ENTRIES_FIELD 0,2

#define SPR_DTLB_TSB_BASE_ADDR_0__PS_SHIFT 4
#define SPR_DTLB_TSB_BASE_ADDR_0__PS_WIDTH 4
#define SPR_DTLB_TSB_BASE_ADDR_0__PS_RESET_VAL 0
#define SPR_DTLB_TSB_BASE_ADDR_0__PS_RMASK 0xf
#define SPR_DTLB_TSB_BASE_ADDR_0__PS_MASK  0xf0
#define SPR_DTLB_TSB_BASE_ADDR_0__PS_FIELD 4,7

#define SPR_DTLB_TSB_BASE_ADDR_0__SIZE_SHIFT 8
#define SPR_DTLB_TSB_BASE_ADDR_0__SIZE_WIDTH 2
#define SPR_DTLB_TSB_BASE_ADDR_0__SIZE_RESET_VAL 0
#define SPR_DTLB_TSB_BASE_ADDR_0__SIZE_RMASK 0x3
#define SPR_DTLB_TSB_BASE_ADDR_0__SIZE_MASK  0x300
#define SPR_DTLB_TSB_BASE_ADDR_0__SIZE_FIELD 8,9

#define SPR_DTLB_TSB_BASE_ADDR_0__TSB_BASE_HIGH_SHIFT 13
#define SPR_DTLB_TSB_BASE_ADDR_0__TSB_BASE_HIGH_WIDTH 29
#define SPR_DTLB_TSB_BASE_ADDR_0__TSB_BASE_HIGH_RESET_VAL 0
#define SPR_DTLB_TSB_BASE_ADDR_0__TSB_BASE_HIGH_RMASK 0x1fffffff
#define SPR_DTLB_TSB_BASE_ADDR_0__TSB_BASE_HIGH_MASK  _64bit(0x3ffffffe000)
#define SPR_DTLB_TSB_BASE_ADDR_0__TSB_BASE_HIGH_FIELD 13,41

#define SPR_DTLB_TSB_BASE_ADDR_0__BASE_EXT_SHIFT 42
#define SPR_DTLB_TSB_BASE_ADDR_0__BASE_EXT_WIDTH 22
#define SPR_DTLB_TSB_BASE_ADDR_0__BASE_EXT_RESET_VAL 0
#define SPR_DTLB_TSB_BASE_ADDR_0__BASE_EXT_RMASK 0x3fffff
#define SPR_DTLB_TSB_BASE_ADDR_0__BASE_EXT_MASK  _64bit(0xfffffc0000000000)
#define SPR_DTLB_TSB_BASE_ADDR_0__BASE_EXT_FIELD 42,63


/*
 * Data TLB TSB Base Address 1.
 * This register specifies the address of the TSB base and control bits for
 * TSB address calculation.
 */
#define SPR_DTLB_TSB_BASE_ADDR_1 0x1206

#define SPR_DTLB_TSB_BASE_ADDR_1__ENTRIES_SHIFT 0
#define SPR_DTLB_TSB_BASE_ADDR_1__ENTRIES_WIDTH 3
#define SPR_DTLB_TSB_BASE_ADDR_1__ENTRIES_RESET_VAL 0
#define SPR_DTLB_TSB_BASE_ADDR_1__ENTRIES_RMASK 0x7
#define SPR_DTLB_TSB_BASE_ADDR_1__ENTRIES_MASK  0x7
#define SPR_DTLB_TSB_BASE_ADDR_1__ENTRIES_FIELD 0,2

#define SPR_DTLB_TSB_BASE_ADDR_1__PS_SHIFT 4
#define SPR_DTLB_TSB_BASE_ADDR_1__PS_WIDTH 4
#define SPR_DTLB_TSB_BASE_ADDR_1__PS_RESET_VAL 0
#define SPR_DTLB_TSB_BASE_ADDR_1__PS_RMASK 0xf
#define SPR_DTLB_TSB_BASE_ADDR_1__PS_MASK  0xf0
#define SPR_DTLB_TSB_BASE_ADDR_1__PS_FIELD 4,7

#define SPR_DTLB_TSB_BASE_ADDR_1__SIZE_SHIFT 8
#define SPR_DTLB_TSB_BASE_ADDR_1__SIZE_WIDTH 2
#define SPR_DTLB_TSB_BASE_ADDR_1__SIZE_RESET_VAL 0
#define SPR_DTLB_TSB_BASE_ADDR_1__SIZE_RMASK 0x3
#define SPR_DTLB_TSB_BASE_ADDR_1__SIZE_MASK  0x300
#define SPR_DTLB_TSB_BASE_ADDR_1__SIZE_FIELD 8,9

#define SPR_DTLB_TSB_BASE_ADDR_1__TSB_BASE_HIGH_SHIFT 13
#define SPR_DTLB_TSB_BASE_ADDR_1__TSB_BASE_HIGH_WIDTH 29
#define SPR_DTLB_TSB_BASE_ADDR_1__TSB_BASE_HIGH_RESET_VAL 0
#define SPR_DTLB_TSB_BASE_ADDR_1__TSB_BASE_HIGH_RMASK 0x1fffffff
#define SPR_DTLB_TSB_BASE_ADDR_1__TSB_BASE_HIGH_MASK  _64bit(0x3ffffffe000)
#define SPR_DTLB_TSB_BASE_ADDR_1__TSB_BASE_HIGH_FIELD 13,41

#define SPR_DTLB_TSB_BASE_ADDR_1__BASE_EXT_SHIFT 42
#define SPR_DTLB_TSB_BASE_ADDR_1__BASE_EXT_WIDTH 22
#define SPR_DTLB_TSB_BASE_ADDR_1__BASE_EXT_RESET_VAL 0
#define SPR_DTLB_TSB_BASE_ADDR_1__BASE_EXT_RMASK 0x3fffff
#define SPR_DTLB_TSB_BASE_ADDR_1__BASE_EXT_MASK  _64bit(0xfffffc0000000000)
#define SPR_DTLB_TSB_BASE_ADDR_1__BASE_EXT_FIELD 42,63


/*
 * Data TLB entry ATTR on TSB fill match 0.
 * This register is used to read and write the attributes of the main
 * processor instruction TLB Entry. Writing this register triggers the write
 * of the DTLB if the data loaded into the DTLB_CURRENT registers matches the
 * address which is pointed at by EX_CONTEXT_{CPL}_1.PL .  Precisely, the TLB
 * is loaded if VPN(DTLB_CURRENT_ATTR.PS, DTLB_BAD_ADDR) ==
 * VPN(DTLB_CURRENT_ATTR.PS, DTLB_CURRENT_VA) && ((D_ASID ==
 * DTLB_TSB_FILL_CURRENT_ATTR.ASID) || (DTLB_TSB_FILL_CURRENT_ATTR.G)) &&
 * (DTLB_TSB_FILL_CURRENT_ATTR.V) && (EX_CONTEXT_{CPL}_1.PL >=
 * DTLB_TSB_FILL_CURRENT_ATTR.MPL) && (DTLB_TSB_FILL_CURRENT_ATTR.DTLBV == 1)
 */
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR 0x128c

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__V_SHIFT 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__V_WIDTH 1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__V_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__V_RMASK 0x1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__V_MASK  0x1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__V_FIELD 0,0

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__W_SHIFT 1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__W_WIDTH 1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__W_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__W_RMASK 0x1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__W_MASK  0x2
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__W_FIELD 1,1

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MPL_SHIFT 2
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MPL_WIDTH 2
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MPL_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MPL_RMASK 0x3
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MPL_MASK  0xc
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MPL_FIELD 2,3

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_SHIFT 4
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_WIDTH 4
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_RMASK 0xf
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_MASK  0xf0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_FIELD 4,7
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_VAL_4K_PAGE 0x0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_VAL_16K_PAGE 0x1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_VAL_64K_PAGE 0x2
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_VAL_256K_PAGE 0x3
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_VAL_1M_PAGE 0x4
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_VAL_4M_PAGE 0x5
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_VAL_16M_PAGE 0x6
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_VAL_64M_PAGE 0x7
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_VAL_256M_PAGE 0x8
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_VAL_1G_PAGE 0x9
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_VAL_4G_PAGE 0xa
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_VAL_16G_PAGE 0xb
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PS_VAL_64G_PAGE 0xc

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__G_SHIFT 8
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__G_WIDTH 1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__G_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__G_RMASK 0x1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__G_MASK  0x100
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__G_FIELD 8,8

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ASID_SHIFT 9
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ASID_WIDTH 8
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ASID_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ASID_RMASK 0xff
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ASID_MASK  0x1fe00
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ASID_FIELD 9,16

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_SHIFT 17
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_WIDTH 2
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_RMASK 0x3
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_MASK  0x60000
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_FIELD 17,18
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_COHERENT 0x0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_NONCOHERENT 0x1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_UNCACHEABLE 0x2
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_MMIO 0x3

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_SHIFT 19
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_WIDTH 2
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_RMASK 0x3
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_MASK  0x180000
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_FIELD 19,20
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_VAL_HASH 0x0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_VAL_TILE 0x3

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__NO_L1D_ALLOCATION_SHIFT 21
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__NO_L1D_ALLOCATION_WIDTH 1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__NO_L1D_ALLOCATION_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__NO_L1D_ALLOCATION_RMASK 0x1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__NO_L1D_ALLOCATION_MASK  0x200000
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__NO_L1D_ALLOCATION_FIELD 21,21

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ADAPTIVE_ALLOCATION_SHIFT 22
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ADAPTIVE_ALLOCATION_WIDTH 1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ADAPTIVE_ALLOCATION_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ADAPTIVE_ALLOCATION_RMASK 0x1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ADAPTIVE_ALLOCATION_MASK  0x400000
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ADAPTIVE_ALLOCATION_FIELD 22,22

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PIN_SHIFT 23
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PIN_WIDTH 1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PIN_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PIN_RMASK 0x1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PIN_MASK  0x800000
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__PIN_FIELD 23,23

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__CACHE_PREFETCH_SHIFT 25
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__CACHE_PREFETCH_WIDTH 1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__CACHE_PREFETCH_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__CACHE_PREFETCH_RMASK 0x1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__CACHE_PREFETCH_MASK  0x2000000
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__CACHE_PREFETCH_FIELD 25,25

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_SHIFT 26
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_WIDTH 4
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_RMASK 0xf
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_MASK  0x3c000000
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_FIELD 26,29

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_SHIFT 37
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_WIDTH 4
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_RMASK 0xf
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_MASK  _64bit(0x1e000000000)
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_FIELD 37,40

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__DTLBV_SHIFT 48
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__DTLBV_WIDTH 1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__DTLBV_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__DTLBV_RMASK 0x1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__DTLBV_MASK  _64bit(0x1000000000000)
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__DTLBV_FIELD 48,48

#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ITLBV_SHIFT 49
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ITLBV_WIDTH 1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ITLBV_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ITLBV_RMASK 0x1
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ITLBV_MASK  _64bit(0x2000000000000)
#define SPR_DTLB_TSB_FILL_CURRENT_ATTR__ITLBV_FIELD 49,49


/*
 * Data TLB TSB Fill Match 0.
 * Indicates whether the last Data TSB_FILL write was installed in the TLB.
 */
#define SPR_DTLB_TSB_FILL_MATCH 0x128d

#define SPR_DTLB_TSB_FILL_MATCH__MATCH_SHIFT 0
#define SPR_DTLB_TSB_FILL_MATCH__MATCH_WIDTH 1
#define SPR_DTLB_TSB_FILL_MATCH__MATCH_RESET_VAL 0
#define SPR_DTLB_TSB_FILL_MATCH__MATCH_RMASK 0x1
#define SPR_DTLB_TSB_FILL_MATCH__MATCH_MASK  0x1
#define SPR_DTLB_TSB_FILL_MATCH__MATCH_FIELD 0,0


/*
 * Data Address Space Identifier.
 * This register is specifies the ASID that is used for the TLB accesses for
 * memory access instructions.
 */
#define SPR_D_ASID 0x2905

#define SPR_D_ASID__D_ASID_SHIFT 0
#define SPR_D_ASID__D_ASID_WIDTH 8
#define SPR_D_ASID__D_ASID_RESET_VAL 0
#define SPR_D_ASID__D_ASID_RMASK 0xff
#define SPR_D_ASID__D_ASID_MASK  0xff
#define SPR_D_ASID__D_ASID_FIELD 0,7


/*
 * EVENT_BEGIN Magic Register.
 * A magic register that is used to signal beginning of an
 * application defined event.
 */
#define SPR_EVENT_BEGIN 0x2782

#define SPR_EVENT_BEGIN__EVENT_BEGIN_SHIFT 0
#define SPR_EVENT_BEGIN__EVENT_BEGIN_WIDTH 32
#define SPR_EVENT_BEGIN__EVENT_BEGIN_RESET_VAL 0
#define SPR_EVENT_BEGIN__EVENT_BEGIN_RMASK 0xffffffff
#define SPR_EVENT_BEGIN__EVENT_BEGIN_MASK  0xffffffff
#define SPR_EVENT_BEGIN__EVENT_BEGIN_FIELD 0,31


/*
 * EVENT_END Magic Register.
 * A magic register that is used to signal end of an application
 * defined event.
 */
#define SPR_EVENT_END 0x2783

#define SPR_EVENT_END__EVENT_END_SHIFT 0
#define SPR_EVENT_END__EVENT_END_WIDTH 32
#define SPR_EVENT_END__EVENT_END_RESET_VAL 0
#define SPR_EVENT_END__EVENT_END_RMASK 0xffffffff
#define SPR_EVENT_END__EVENT_END_MASK  0xffffffff
#define SPR_EVENT_END__EVENT_END_FIELD 0,31


/*
 * Exceptional Context Protection Level 0 Entry 0.
 * This register specifies the zero'th entry for the exceptional context for
 * protection level 0.  This register is used by interrupts and iret
 * instructions.
 */
#define SPR_EX_CONTEXT_0_0 0x2580

#define SPR_EX_CONTEXT_0_0__PC_SHIFT 0
#define SPR_EX_CONTEXT_0_0__PC_WIDTH 42
#define SPR_EX_CONTEXT_0_0__PC_RESET_VAL 0
#define SPR_EX_CONTEXT_0_0__PC_RMASK _64bit(0x3ffffffffff)
#define SPR_EX_CONTEXT_0_0__PC_MASK  _64bit(0x3ffffffffff)
#define SPR_EX_CONTEXT_0_0__PC_FIELD 0,41


/*
 * Exceptional Context Protection Level 0 Entry 1.
 * This register specifies the one'th entry for the exceptional context for
 * protection level 0.  This register is used by interrupts and iret
 * instructions.
 */
#define SPR_EX_CONTEXT_0_1 0x2581

#define SPR_EX_CONTEXT_0_1__PL_SHIFT 0
#define SPR_EX_CONTEXT_0_1__PL_WIDTH 2
#define SPR_EX_CONTEXT_0_1__PL_RESET_VAL 0
#define SPR_EX_CONTEXT_0_1__PL_RMASK 0x3
#define SPR_EX_CONTEXT_0_1__PL_MASK  0x3
#define SPR_EX_CONTEXT_0_1__PL_FIELD 0,1

#define SPR_EX_CONTEXT_0_1__ICS_SHIFT 2
#define SPR_EX_CONTEXT_0_1__ICS_WIDTH 1
#define SPR_EX_CONTEXT_0_1__ICS_RESET_VAL 0
#define SPR_EX_CONTEXT_0_1__ICS_RMASK 0x1
#define SPR_EX_CONTEXT_0_1__ICS_MASK  0x4
#define SPR_EX_CONTEXT_0_1__ICS_FIELD 2,2


/*
 * Exceptional Context Protection Level 1 Entry 0.
 * This register specifies the zero'th entry for the exceptional context for
 * protection level 1.  This register is used by interrupts and iret
 * instructions.
 */
#define SPR_EX_CONTEXT_1_0 0x2480

#define SPR_EX_CONTEXT_1_0__PC_SHIFT 0
#define SPR_EX_CONTEXT_1_0__PC_WIDTH 42
#define SPR_EX_CONTEXT_1_0__PC_RESET_VAL 0
#define SPR_EX_CONTEXT_1_0__PC_RMASK _64bit(0x3ffffffffff)
#define SPR_EX_CONTEXT_1_0__PC_MASK  _64bit(0x3ffffffffff)
#define SPR_EX_CONTEXT_1_0__PC_FIELD 0,41


/*
 * Exceptional Context Protection Level 1 Entry 1.
 * This register specifies the one'th entry for the exceptional context for
 * protection level 1.  This register is used by interrupts and iret
 * instructions.
 */
#define SPR_EX_CONTEXT_1_1 0x2481

#define SPR_EX_CONTEXT_1_1__PL_SHIFT 0
#define SPR_EX_CONTEXT_1_1__PL_WIDTH 2
#define SPR_EX_CONTEXT_1_1__PL_RESET_VAL 0
#define SPR_EX_CONTEXT_1_1__PL_RMASK 0x3
#define SPR_EX_CONTEXT_1_1__PL_MASK  0x3
#define SPR_EX_CONTEXT_1_1__PL_FIELD 0,1

#define SPR_EX_CONTEXT_1_1__ICS_SHIFT 2
#define SPR_EX_CONTEXT_1_1__ICS_WIDTH 1
#define SPR_EX_CONTEXT_1_1__ICS_RESET_VAL 0
#define SPR_EX_CONTEXT_1_1__ICS_RMASK 0x1
#define SPR_EX_CONTEXT_1_1__ICS_MASK  0x4
#define SPR_EX_CONTEXT_1_1__ICS_FIELD 2,2


/*
 * Exceptional Context Protection Level 2 Entry 0.
 * This register specifies the zero'th entry for the exceptional context for
 * protection level 2.  This register is used by interrupts and iret
 * instructions.
 */
#define SPR_EX_CONTEXT_2_0 0x2380

#define SPR_EX_CONTEXT_2_0__PC_SHIFT 0
#define SPR_EX_CONTEXT_2_0__PC_WIDTH 42
#define SPR_EX_CONTEXT_2_0__PC_RESET_VAL 0
#define SPR_EX_CONTEXT_2_0__PC_RMASK _64bit(0x3ffffffffff)
#define SPR_EX_CONTEXT_2_0__PC_MASK  _64bit(0x3ffffffffff)
#define SPR_EX_CONTEXT_2_0__PC_FIELD 0,41


/*
 * Exceptional Context Protection Level 2 Entry 1.
 * This register specifies the one'th entry for the exceptional context for
 * protection level 2.  This register is used by interrupts and iret
 * instructions.
 */
#define SPR_EX_CONTEXT_2_1 0x2381

#define SPR_EX_CONTEXT_2_1__PL_SHIFT 0
#define SPR_EX_CONTEXT_2_1__PL_WIDTH 2
#define SPR_EX_CONTEXT_2_1__PL_RESET_VAL 0
#define SPR_EX_CONTEXT_2_1__PL_RMASK 0x3
#define SPR_EX_CONTEXT_2_1__PL_MASK  0x3
#define SPR_EX_CONTEXT_2_1__PL_FIELD 0,1

#define SPR_EX_CONTEXT_2_1__ICS_SHIFT 2
#define SPR_EX_CONTEXT_2_1__ICS_WIDTH 1
#define SPR_EX_CONTEXT_2_1__ICS_RESET_VAL 0
#define SPR_EX_CONTEXT_2_1__ICS_RMASK 0x1
#define SPR_EX_CONTEXT_2_1__ICS_MASK  0x4
#define SPR_EX_CONTEXT_2_1__ICS_FIELD 2,2


/*
 * Exceptional Context Protection Level 3 Entry 0.
 * This register specifies the zero'th entry for the exceptional context for
 * protection level 3.  This register is used by interrupts and iret
 * instructions.
 */
#define SPR_EX_CONTEXT_3_0 0x2280

#define SPR_EX_CONTEXT_3_0__PC_SHIFT 0
#define SPR_EX_CONTEXT_3_0__PC_WIDTH 42
#define SPR_EX_CONTEXT_3_0__PC_RESET_VAL 0
#define SPR_EX_CONTEXT_3_0__PC_RMASK _64bit(0x3ffffffffff)
#define SPR_EX_CONTEXT_3_0__PC_MASK  _64bit(0x3ffffffffff)
#define SPR_EX_CONTEXT_3_0__PC_FIELD 0,41


/*
 * Exceptional Context Protection Level 3 Entry 1.
 * This register specifies the one'th entry for the exceptional context for
 * protection level 3.  This register is used by interrupts and iret
 * instructions.
 */
#define SPR_EX_CONTEXT_3_1 0x2281

#define SPR_EX_CONTEXT_3_1__PL_SHIFT 0
#define SPR_EX_CONTEXT_3_1__PL_WIDTH 2
#define SPR_EX_CONTEXT_3_1__PL_RESET_VAL 0
#define SPR_EX_CONTEXT_3_1__PL_RMASK 0x3
#define SPR_EX_CONTEXT_3_1__PL_MASK  0x3
#define SPR_EX_CONTEXT_3_1__PL_FIELD 0,1

#define SPR_EX_CONTEXT_3_1__ICS_SHIFT 2
#define SPR_EX_CONTEXT_3_1__ICS_WIDTH 1
#define SPR_EX_CONTEXT_3_1__ICS_RESET_VAL 0
#define SPR_EX_CONTEXT_3_1__ICS_RMASK 0x1
#define SPR_EX_CONTEXT_3_1__ICS_MASK  0x4
#define SPR_EX_CONTEXT_3_1__ICS_FIELD 2,2


/*
 * Fail Magic Register.
 * A magic register that is used to signal failure information to the test
 * system.  PASS/FAIL/DONE registers all share the same storage.
 */
#define SPR_FAIL 0x2707

#define SPR_FAIL__FAIL_SHIFT 0
#define SPR_FAIL__FAIL_WIDTH 64
#define SPR_FAIL__FAIL_RESET_VAL 0
#define SPR_FAIL__FAIL_RMASK _64bit(0xffffffffffffffff)
#define SPR_FAIL__FAIL_MASK  _64bit(0xffffffffffffffff)
#define SPR_FAIL__FAIL_FIELD 0,63


/*
 * General Protection Violation Reason.
 * Contains the reason that a GPV has occurred.
 */
#define SPR_GPV_REASON 0x0905

#define SPR_GPV_REASON__SPR_INDEX_SHIFT 0
#define SPR_GPV_REASON__SPR_INDEX_WIDTH 14
#define SPR_GPV_REASON__SPR_INDEX_RESET_VAL 0
#define SPR_GPV_REASON__SPR_INDEX_RMASK 0x3fff
#define SPR_GPV_REASON__SPR_INDEX_MASK  0x3fff
#define SPR_GPV_REASON__SPR_INDEX_FIELD 0,13

#define SPR_GPV_REASON__MF_ERROR_SHIFT 29
#define SPR_GPV_REASON__MF_ERROR_WIDTH 1
#define SPR_GPV_REASON__MF_ERROR_RESET_VAL 0
#define SPR_GPV_REASON__MF_ERROR_RMASK 0x1
#define SPR_GPV_REASON__MF_ERROR_MASK  0x20000000
#define SPR_GPV_REASON__MF_ERROR_FIELD 29,29

#define SPR_GPV_REASON__MT_ERROR_SHIFT 30
#define SPR_GPV_REASON__MT_ERROR_WIDTH 1
#define SPR_GPV_REASON__MT_ERROR_RESET_VAL 0
#define SPR_GPV_REASON__MT_ERROR_RMASK 0x1
#define SPR_GPV_REASON__MT_ERROR_MASK  0x40000000
#define SPR_GPV_REASON__MT_ERROR_FIELD 30,30

#define SPR_GPV_REASON__IRET_ERROR_SHIFT 31
#define SPR_GPV_REASON__IRET_ERROR_WIDTH 1
#define SPR_GPV_REASON__IRET_ERROR_RESET_VAL 0
#define SPR_GPV_REASON__IRET_ERROR_RMASK 0x1
#define SPR_GPV_REASON__IRET_ERROR_MASK  0x80000000
#define SPR_GPV_REASON__IRET_ERROR_FIELD 31,31


/*
 * IO Dynamic Network Available Enables.
 * This register controls whether a particular IDN input port signals the IDN
 * available interrupt when data is available.
 */
#define SPR_IDN_AVAIL_EN 0x1a05

#define SPR_IDN_AVAIL_EN__EN_0_SHIFT 0
#define SPR_IDN_AVAIL_EN__EN_0_WIDTH 1
#define SPR_IDN_AVAIL_EN__EN_0_RESET_VAL 0
#define SPR_IDN_AVAIL_EN__EN_0_RMASK 0x1
#define SPR_IDN_AVAIL_EN__EN_0_MASK  0x1
#define SPR_IDN_AVAIL_EN__EN_0_FIELD 0,0

#define SPR_IDN_AVAIL_EN__EN_1_SHIFT 1
#define SPR_IDN_AVAIL_EN__EN_1_WIDTH 1
#define SPR_IDN_AVAIL_EN__EN_1_RESET_VAL 0
#define SPR_IDN_AVAIL_EN__EN_1_RMASK 0x1
#define SPR_IDN_AVAIL_EN__EN_1_MASK  0x2
#define SPR_IDN_AVAIL_EN__EN_1_FIELD 1,1


/*
 * IDN Complete Interrupt Pending.
 * This register has the status of IDN Complete Interrupt.
 */
#define SPR_IDN_COMPLETE_PENDING 0x0505

#define SPR_IDN_COMPLETE_PENDING__PENDING_SHIFT 0
#define SPR_IDN_COMPLETE_PENDING__PENDING_WIDTH 1
#define SPR_IDN_COMPLETE_PENDING__PENDING_RESET_VAL 0
#define SPR_IDN_COMPLETE_PENDING__PENDING_RMASK 0x1
#define SPR_IDN_COMPLETE_PENDING__PENDING_MASK  0x1
#define SPR_IDN_COMPLETE_PENDING__PENDING_FIELD 0,0


/*
 * IO Dynamic Network Data Available.
 * This register contains bit fields which indicate that data is available on
 * particular IO Dynamic Network demultiplexor ports and whether or not that
 * port contains the final data word of a packet.
 */
#define SPR_IDN_DATA_AVAIL 0x0a80

#define SPR_IDN_DATA_AVAIL__AVAIL_0_SHIFT 0
#define SPR_IDN_DATA_AVAIL__AVAIL_0_WIDTH 1
#define SPR_IDN_DATA_AVAIL__AVAIL_0_RESET_VAL 0
#define SPR_IDN_DATA_AVAIL__AVAIL_0_RMASK 0x1
#define SPR_IDN_DATA_AVAIL__AVAIL_0_MASK  0x1
#define SPR_IDN_DATA_AVAIL__AVAIL_0_FIELD 0,0

#define SPR_IDN_DATA_AVAIL__AVAIL_1_SHIFT 1
#define SPR_IDN_DATA_AVAIL__AVAIL_1_WIDTH 1
#define SPR_IDN_DATA_AVAIL__AVAIL_1_RESET_VAL 0
#define SPR_IDN_DATA_AVAIL__AVAIL_1_RMASK 0x1
#define SPR_IDN_DATA_AVAIL__AVAIL_1_MASK  0x2
#define SPR_IDN_DATA_AVAIL__AVAIL_1_FIELD 1,1

#define SPR_IDN_DATA_AVAIL__EOP_0_SHIFT 2
#define SPR_IDN_DATA_AVAIL__EOP_0_WIDTH 1
#define SPR_IDN_DATA_AVAIL__EOP_0_RESET_VAL 0
#define SPR_IDN_DATA_AVAIL__EOP_0_RMASK 0x1
#define SPR_IDN_DATA_AVAIL__EOP_0_MASK  0x4
#define SPR_IDN_DATA_AVAIL__EOP_0_FIELD 2,2

#define SPR_IDN_DATA_AVAIL__EOP_1_SHIFT 3
#define SPR_IDN_DATA_AVAIL__EOP_1_WIDTH 1
#define SPR_IDN_DATA_AVAIL__EOP_1_RESET_VAL 0
#define SPR_IDN_DATA_AVAIL__EOP_1_RMASK 0x1
#define SPR_IDN_DATA_AVAIL__EOP_1_MASK  0x8
#define SPR_IDN_DATA_AVAIL__EOP_1_FIELD 3,3


/*
 * IDN Deadlock Counter.
 * Used to save/restore current state of deadlock down-counter.
 */
#define SPR_IDN_DEADLOCK_COUNT 0x1805

#define SPR_IDN_DEADLOCK_COUNT__IDN_DEADLOCK_COUNT_SHIFT 0
#define SPR_IDN_DEADLOCK_COUNT__IDN_DEADLOCK_COUNT_WIDTH 16
#define SPR_IDN_DEADLOCK_COUNT__IDN_DEADLOCK_COUNT_RESET_VAL 0
#define SPR_IDN_DEADLOCK_COUNT__IDN_DEADLOCK_COUNT_RMASK 0xffff
#define SPR_IDN_DEADLOCK_COUNT__IDN_DEADLOCK_COUNT_MASK  0xffff
#define SPR_IDN_DEADLOCK_COUNT__IDN_DEADLOCK_COUNT_FIELD 0,15


/*
 * IDN Deadlock Timeout.
 * Number of 16-cycle intervals to wait before asserting the deadlock
 * interrupt when data is stalled in the demux logic's dequeueing buffer.
 */
#define SPR_IDN_DEADLOCK_TIMEOUT 0x1806

#define SPR_IDN_DEADLOCK_TIMEOUT__IDN_DEADLOCK_TIMEOUT_SHIFT 0
#define SPR_IDN_DEADLOCK_TIMEOUT__IDN_DEADLOCK_TIMEOUT_WIDTH 16
#define SPR_IDN_DEADLOCK_TIMEOUT__IDN_DEADLOCK_TIMEOUT_RESET_VAL 0
#define SPR_IDN_DEADLOCK_TIMEOUT__IDN_DEADLOCK_TIMEOUT_RMASK 0xffff
#define SPR_IDN_DEADLOCK_TIMEOUT__IDN_DEADLOCK_TIMEOUT_MASK  0xffff
#define SPR_IDN_DEADLOCK_TIMEOUT__IDN_DEADLOCK_TIMEOUT_FIELD 0,15


/*
 * IDN Demux buffer threshold.
 * Number 1-word slices the IDN is allowed to consume in the demux buffer.
 * If the sum of IDN and UDN thresholds exceeds 249, the IDN and UDN networks
 * may compete for buffer entries and the UDN may starve the IDN, or the IDN
 * may starve the UDN. A value of 0 is interpreted as a value of 250.
 */
#define SPR_IDN_DEMUX_BUF_THRESH 0x261a

#define SPR_IDN_DEMUX_BUF_THRESH__IDN_DEMUX_BUF_THRESH_SHIFT 0
#define SPR_IDN_DEMUX_BUF_THRESH__IDN_DEMUX_BUF_THRESH_WIDTH 8
#define SPR_IDN_DEMUX_BUF_THRESH__IDN_DEMUX_BUF_THRESH_RESET_VAL 128
#define SPR_IDN_DEMUX_BUF_THRESH__IDN_DEMUX_BUF_THRESH_RMASK 0xff
#define SPR_IDN_DEMUX_BUF_THRESH__IDN_DEMUX_BUF_THRESH_MASK  0xff
#define SPR_IDN_DEMUX_BUF_THRESH__IDN_DEMUX_BUF_THRESH_FIELD 0,7


/*
 * IO Dynamic Network Demultiplexor Count 0.
 * This register contains the number of words that have been received for
 * channel 0 of the IO Dynamic Network
 */
#define SPR_IDN_DEMUX_COUNT_0 0x0a05

#define SPR_IDN_DEMUX_COUNT_0__IDN_DEMUX_COUNT_0_SHIFT 0
#define SPR_IDN_DEMUX_COUNT_0__IDN_DEMUX_COUNT_0_WIDTH 9
#define SPR_IDN_DEMUX_COUNT_0__IDN_DEMUX_COUNT_0_RESET_VAL 0
#define SPR_IDN_DEMUX_COUNT_0__IDN_DEMUX_COUNT_0_RMASK 0x1ff
#define SPR_IDN_DEMUX_COUNT_0__IDN_DEMUX_COUNT_0_MASK  0x1ff
#define SPR_IDN_DEMUX_COUNT_0__IDN_DEMUX_COUNT_0_FIELD 0,8


/*
 * IO Dynamic Network Demultiplexor Count 1.
 * This register contains the number of words that have been received for
 * channel 1 of the IO Dynamic Network
 */
#define SPR_IDN_DEMUX_COUNT_1 0x0a06

#define SPR_IDN_DEMUX_COUNT_1__IDN_DEMUX_COUNT_1_SHIFT 0
#define SPR_IDN_DEMUX_COUNT_1__IDN_DEMUX_COUNT_1_WIDTH 9
#define SPR_IDN_DEMUX_COUNT_1__IDN_DEMUX_COUNT_1_RESET_VAL 0
#define SPR_IDN_DEMUX_COUNT_1__IDN_DEMUX_COUNT_1_RMASK 0x1ff
#define SPR_IDN_DEMUX_COUNT_1__IDN_DEMUX_COUNT_1_MASK  0x1ff
#define SPR_IDN_DEMUX_COUNT_1__IDN_DEMUX_COUNT_1_FIELD 0,8


/*
 * IDN Direction Protect.
 * Prevent packets from a particular network port
 */
#define SPR_IDN_DIRECTION_PROTECT 0x1405

#define SPR_IDN_DIRECTION_PROTECT__N_PROTECT_SHIFT 0
#define SPR_IDN_DIRECTION_PROTECT__N_PROTECT_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__N_PROTECT_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__N_PROTECT_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__N_PROTECT_MASK  0x1
#define SPR_IDN_DIRECTION_PROTECT__N_PROTECT_FIELD 0,0

#define SPR_IDN_DIRECTION_PROTECT__E_PROTECT_SHIFT 1
#define SPR_IDN_DIRECTION_PROTECT__E_PROTECT_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__E_PROTECT_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__E_PROTECT_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__E_PROTECT_MASK  0x2
#define SPR_IDN_DIRECTION_PROTECT__E_PROTECT_FIELD 1,1

#define SPR_IDN_DIRECTION_PROTECT__S_PROTECT_SHIFT 2
#define SPR_IDN_DIRECTION_PROTECT__S_PROTECT_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__S_PROTECT_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__S_PROTECT_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__S_PROTECT_MASK  0x4
#define SPR_IDN_DIRECTION_PROTECT__S_PROTECT_FIELD 2,2

#define SPR_IDN_DIRECTION_PROTECT__W_PROTECT_SHIFT 3
#define SPR_IDN_DIRECTION_PROTECT__W_PROTECT_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__W_PROTECT_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__W_PROTECT_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__W_PROTECT_MASK  0x8
#define SPR_IDN_DIRECTION_PROTECT__W_PROTECT_FIELD 3,3

#define SPR_IDN_DIRECTION_PROTECT__C_PROTECT_SHIFT 4
#define SPR_IDN_DIRECTION_PROTECT__C_PROTECT_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__C_PROTECT_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__C_PROTECT_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__C_PROTECT_MASK  0x10
#define SPR_IDN_DIRECTION_PROTECT__C_PROTECT_FIELD 4,4

#define SPR_IDN_DIRECTION_PROTECT__N_DROP_SHIFT 5
#define SPR_IDN_DIRECTION_PROTECT__N_DROP_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__N_DROP_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__N_DROP_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__N_DROP_MASK  0x20
#define SPR_IDN_DIRECTION_PROTECT__N_DROP_FIELD 5,5

#define SPR_IDN_DIRECTION_PROTECT__E_DROP_SHIFT 6
#define SPR_IDN_DIRECTION_PROTECT__E_DROP_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__E_DROP_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__E_DROP_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__E_DROP_MASK  0x40
#define SPR_IDN_DIRECTION_PROTECT__E_DROP_FIELD 6,6

#define SPR_IDN_DIRECTION_PROTECT__S_DROP_SHIFT 7
#define SPR_IDN_DIRECTION_PROTECT__S_DROP_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__S_DROP_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__S_DROP_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__S_DROP_MASK  0x80
#define SPR_IDN_DIRECTION_PROTECT__S_DROP_FIELD 7,7

#define SPR_IDN_DIRECTION_PROTECT__W_DROP_SHIFT 8
#define SPR_IDN_DIRECTION_PROTECT__W_DROP_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__W_DROP_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__W_DROP_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__W_DROP_MASK  0x100
#define SPR_IDN_DIRECTION_PROTECT__W_DROP_FIELD 8,8

#define SPR_IDN_DIRECTION_PROTECT__C_DROP_SHIFT 9
#define SPR_IDN_DIRECTION_PROTECT__C_DROP_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__C_DROP_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__C_DROP_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__C_DROP_MASK  0x200
#define SPR_IDN_DIRECTION_PROTECT__C_DROP_FIELD 9,9

#define SPR_IDN_DIRECTION_PROTECT__N_SRC_VIOLATE_SHIFT 16
#define SPR_IDN_DIRECTION_PROTECT__N_SRC_VIOLATE_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__N_SRC_VIOLATE_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__N_SRC_VIOLATE_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__N_SRC_VIOLATE_MASK  0x10000
#define SPR_IDN_DIRECTION_PROTECT__N_SRC_VIOLATE_FIELD 16,16

#define SPR_IDN_DIRECTION_PROTECT__E_SRC_VIOLATE_SHIFT 17
#define SPR_IDN_DIRECTION_PROTECT__E_SRC_VIOLATE_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__E_SRC_VIOLATE_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__E_SRC_VIOLATE_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__E_SRC_VIOLATE_MASK  0x20000
#define SPR_IDN_DIRECTION_PROTECT__E_SRC_VIOLATE_FIELD 17,17

#define SPR_IDN_DIRECTION_PROTECT__S_SRC_VIOLATE_SHIFT 18
#define SPR_IDN_DIRECTION_PROTECT__S_SRC_VIOLATE_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__S_SRC_VIOLATE_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__S_SRC_VIOLATE_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__S_SRC_VIOLATE_MASK  0x40000
#define SPR_IDN_DIRECTION_PROTECT__S_SRC_VIOLATE_FIELD 18,18

#define SPR_IDN_DIRECTION_PROTECT__W_SRC_VIOLATE_SHIFT 19
#define SPR_IDN_DIRECTION_PROTECT__W_SRC_VIOLATE_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__W_SRC_VIOLATE_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__W_SRC_VIOLATE_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__W_SRC_VIOLATE_MASK  0x80000
#define SPR_IDN_DIRECTION_PROTECT__W_SRC_VIOLATE_FIELD 19,19

#define SPR_IDN_DIRECTION_PROTECT__M_SRC_VIOLATE_SHIFT 20
#define SPR_IDN_DIRECTION_PROTECT__M_SRC_VIOLATE_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__M_SRC_VIOLATE_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__M_SRC_VIOLATE_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__M_SRC_VIOLATE_MASK  0x100000
#define SPR_IDN_DIRECTION_PROTECT__M_SRC_VIOLATE_FIELD 20,20

#define SPR_IDN_DIRECTION_PROTECT__N_DEST_VIOLATE_SHIFT 24
#define SPR_IDN_DIRECTION_PROTECT__N_DEST_VIOLATE_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__N_DEST_VIOLATE_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__N_DEST_VIOLATE_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__N_DEST_VIOLATE_MASK  0x1000000
#define SPR_IDN_DIRECTION_PROTECT__N_DEST_VIOLATE_FIELD 24,24

#define SPR_IDN_DIRECTION_PROTECT__E_DEST_VIOLATE_SHIFT 25
#define SPR_IDN_DIRECTION_PROTECT__E_DEST_VIOLATE_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__E_DEST_VIOLATE_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__E_DEST_VIOLATE_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__E_DEST_VIOLATE_MASK  0x2000000
#define SPR_IDN_DIRECTION_PROTECT__E_DEST_VIOLATE_FIELD 25,25

#define SPR_IDN_DIRECTION_PROTECT__S_DEST_VIOLATE_SHIFT 26
#define SPR_IDN_DIRECTION_PROTECT__S_DEST_VIOLATE_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__S_DEST_VIOLATE_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__S_DEST_VIOLATE_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__S_DEST_VIOLATE_MASK  0x4000000
#define SPR_IDN_DIRECTION_PROTECT__S_DEST_VIOLATE_FIELD 26,26

#define SPR_IDN_DIRECTION_PROTECT__W_DEST_VIOLATE_SHIFT 27
#define SPR_IDN_DIRECTION_PROTECT__W_DEST_VIOLATE_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__W_DEST_VIOLATE_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__W_DEST_VIOLATE_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__W_DEST_VIOLATE_MASK  0x8000000
#define SPR_IDN_DIRECTION_PROTECT__W_DEST_VIOLATE_FIELD 27,27

#define SPR_IDN_DIRECTION_PROTECT__C_DEST_VIOLATE_SHIFT 28
#define SPR_IDN_DIRECTION_PROTECT__C_DEST_VIOLATE_WIDTH 1
#define SPR_IDN_DIRECTION_PROTECT__C_DEST_VIOLATE_RESET_VAL 0
#define SPR_IDN_DIRECTION_PROTECT__C_DEST_VIOLATE_RMASK 0x1
#define SPR_IDN_DIRECTION_PROTECT__C_DEST_VIOLATE_MASK  0x10000000
#define SPR_IDN_DIRECTION_PROTECT__C_DEST_VIOLATE_FIELD 28,28


/*
 * IDN Flush Egress.
 * When written, the idn egress buffer is flushed.
 */
#define SPR_IDN_FLUSH_EGRESS 0x0a07

#define SPR_IDN_FLUSH_EGRESS__IDN_FLUSH_EGRESS_SHIFT 0
#define SPR_IDN_FLUSH_EGRESS__IDN_FLUSH_EGRESS_WIDTH 64
#define SPR_IDN_FLUSH_EGRESS__IDN_FLUSH_EGRESS_RESET_VAL 0
#define SPR_IDN_FLUSH_EGRESS__IDN_FLUSH_EGRESS_RMASK _64bit(0xffffffffffffffff)
#define SPR_IDN_FLUSH_EGRESS__IDN_FLUSH_EGRESS_MASK  _64bit(0xffffffffffffffff)
#define SPR_IDN_FLUSH_EGRESS__IDN_FLUSH_EGRESS_FIELD 0,63


/*
 * IDN Words Pending.
 * Number of words remaining in packet being sent into network from main
 * processor.  IDN complete interrupt is signaled when this reaches 0 (if
 * enabled).
 */
#define SPR_IDN_PENDING 0x0a08

#define SPR_IDN_PENDING__IDN_PENDING_SHIFT 0
#define SPR_IDN_PENDING__IDN_PENDING_WIDTH 8
#define SPR_IDN_PENDING__IDN_PENDING_RESET_VAL 0
#define SPR_IDN_PENDING__IDN_PENDING_RMASK 0xff
#define SPR_IDN_PENDING__IDN_PENDING_MASK  0xff
#define SPR_IDN_PENDING__IDN_PENDING_FIELD 0,7


/*
 * IDN Route Order.
 * This register specifies x-y or y-x routing for the IDN.
 */
#define SPR_IDN_ROUTE_ORDER 0x0a09

#define SPR_IDN_ROUTE_ORDER__ROUTE_X_FIRST_SHIFT 0
#define SPR_IDN_ROUTE_ORDER__ROUTE_X_FIRST_WIDTH 1
#define SPR_IDN_ROUTE_ORDER__ROUTE_X_FIRST_RESET_VAL 0
#define SPR_IDN_ROUTE_ORDER__ROUTE_X_FIRST_RMASK 0x1
#define SPR_IDN_ROUTE_ORDER__ROUTE_X_FIRST_MASK  0x1
#define SPR_IDN_ROUTE_ORDER__ROUTE_X_FIRST_FIELD 0,0


/*
 * IDN Switch Point Fifo Count.
 * Number of valid entries in the switch input buffer from each direction.
 */
#define SPR_IDN_SP_FIFO_CNT 0x0a0a

#define SPR_IDN_SP_FIFO_CNT__N_FIFO_CNT_SHIFT 0
#define SPR_IDN_SP_FIFO_CNT__N_FIFO_CNT_WIDTH 2
#define SPR_IDN_SP_FIFO_CNT__N_FIFO_CNT_RESET_VAL 0
#define SPR_IDN_SP_FIFO_CNT__N_FIFO_CNT_RMASK 0x3
#define SPR_IDN_SP_FIFO_CNT__N_FIFO_CNT_MASK  0x3
#define SPR_IDN_SP_FIFO_CNT__N_FIFO_CNT_FIELD 0,1

#define SPR_IDN_SP_FIFO_CNT__S_FIFO_CNT_SHIFT 2
#define SPR_IDN_SP_FIFO_CNT__S_FIFO_CNT_WIDTH 2
#define SPR_IDN_SP_FIFO_CNT__S_FIFO_CNT_RESET_VAL 0
#define SPR_IDN_SP_FIFO_CNT__S_FIFO_CNT_RMASK 0x3
#define SPR_IDN_SP_FIFO_CNT__S_FIFO_CNT_MASK  0xc
#define SPR_IDN_SP_FIFO_CNT__S_FIFO_CNT_FIELD 2,3

#define SPR_IDN_SP_FIFO_CNT__E_FIFO_CNT_SHIFT 4
#define SPR_IDN_SP_FIFO_CNT__E_FIFO_CNT_WIDTH 2
#define SPR_IDN_SP_FIFO_CNT__E_FIFO_CNT_RESET_VAL 0
#define SPR_IDN_SP_FIFO_CNT__E_FIFO_CNT_RMASK 0x3
#define SPR_IDN_SP_FIFO_CNT__E_FIFO_CNT_MASK  0x30
#define SPR_IDN_SP_FIFO_CNT__E_FIFO_CNT_FIELD 4,5

#define SPR_IDN_SP_FIFO_CNT__W_FIFO_CNT_SHIFT 6
#define SPR_IDN_SP_FIFO_CNT__W_FIFO_CNT_WIDTH 2
#define SPR_IDN_SP_FIFO_CNT__W_FIFO_CNT_RESET_VAL 0
#define SPR_IDN_SP_FIFO_CNT__W_FIFO_CNT_RMASK 0x3
#define SPR_IDN_SP_FIFO_CNT__W_FIFO_CNT_MASK  0xc0
#define SPR_IDN_SP_FIFO_CNT__W_FIFO_CNT_FIELD 6,7

#define SPR_IDN_SP_FIFO_CNT__C_FIFO_CNT_SHIFT 8
#define SPR_IDN_SP_FIFO_CNT__C_FIFO_CNT_WIDTH 4
#define SPR_IDN_SP_FIFO_CNT__C_FIFO_CNT_RESET_VAL 0
#define SPR_IDN_SP_FIFO_CNT__C_FIFO_CNT_RMASK 0xf
#define SPR_IDN_SP_FIFO_CNT__C_FIFO_CNT_MASK  0xf00
#define SPR_IDN_SP_FIFO_CNT__C_FIFO_CNT_FIELD 8,11


/*
 * Illegal Translation Reason.
 * This register contains the reason for an Illegal Translation Interrupt.
 * Note that EX_CONTEXT has the PC of the instruction that generated the
 * illegal translation.
 */
#define SPR_ILL_TRANS_REASON 0x1005

#define SPR_ILL_TRANS_REASON__I_STREAM_VA_SHIFT 0
#define SPR_ILL_TRANS_REASON__I_STREAM_VA_WIDTH 1
#define SPR_ILL_TRANS_REASON__I_STREAM_VA_RESET_VAL 0
#define SPR_ILL_TRANS_REASON__I_STREAM_VA_RMASK 0x1
#define SPR_ILL_TRANS_REASON__I_STREAM_VA_MASK  0x1
#define SPR_ILL_TRANS_REASON__I_STREAM_VA_FIELD 0,0

#define SPR_ILL_TRANS_REASON__D_STREAM_VA_SHIFT 1
#define SPR_ILL_TRANS_REASON__D_STREAM_VA_WIDTH 1
#define SPR_ILL_TRANS_REASON__D_STREAM_VA_RESET_VAL 0
#define SPR_ILL_TRANS_REASON__D_STREAM_VA_RMASK 0x1
#define SPR_ILL_TRANS_REASON__D_STREAM_VA_MASK  0x2
#define SPR_ILL_TRANS_REASON__D_STREAM_VA_FIELD 1,1


/*
 * Illegal Virtual Address PC.
 * This register contains the virtual address that was calculated by an
 * instruction that caused an Illegal Translation Interrupt.
 */
#define SPR_ILL_VA_PC 0x1006

#define SPR_ILL_VA_PC__ILL_VA_PC_SHIFT 0
#define SPR_ILL_VA_PC__ILL_VA_PC_WIDTH 64
#define SPR_ILL_VA_PC__ILL_VA_PC_RESET_VAL 0
#define SPR_ILL_VA_PC__ILL_VA_PC_RMASK _64bit(0xffffffffffffffff)
#define SPR_ILL_VA_PC__ILL_VA_PC_MASK  _64bit(0xffffffffffffffff)
#define SPR_ILL_VA_PC__ILL_VA_PC_FIELD 0,63


/*
 * Interrupt Control 0 Status.
 * This register enables the interrupt control 0 interrupt.
 */
#define SPR_INTCTRL_0_STATUS 0x2505

#define SPR_INTCTRL_0_STATUS__INTCTRL_0_STATUS_SHIFT 0
#define SPR_INTCTRL_0_STATUS__INTCTRL_0_STATUS_WIDTH 1
#define SPR_INTCTRL_0_STATUS__INTCTRL_0_STATUS_RESET_VAL 0
#define SPR_INTCTRL_0_STATUS__INTCTRL_0_STATUS_RMASK 0x1
#define SPR_INTCTRL_0_STATUS__INTCTRL_0_STATUS_MASK  0x1
#define SPR_INTCTRL_0_STATUS__INTCTRL_0_STATUS_FIELD 0,0


/*
 * Interrupt Control 1 Status.
 * This register enables the interrupt control 1 interrupt.
 */
#define SPR_INTCTRL_1_STATUS 0x2405

#define SPR_INTCTRL_1_STATUS__INTCTRL_1_STATUS_SHIFT 0
#define SPR_INTCTRL_1_STATUS__INTCTRL_1_STATUS_WIDTH 1
#define SPR_INTCTRL_1_STATUS__INTCTRL_1_STATUS_RESET_VAL 0
#define SPR_INTCTRL_1_STATUS__INTCTRL_1_STATUS_RMASK 0x1
#define SPR_INTCTRL_1_STATUS__INTCTRL_1_STATUS_MASK  0x1
#define SPR_INTCTRL_1_STATUS__INTCTRL_1_STATUS_FIELD 0,0


/*
 * Interrupt Control 2 Status.
 * This register enables the interrupt control 2 interrupt.
 */
#define SPR_INTCTRL_2_STATUS 0x2305

#define SPR_INTCTRL_2_STATUS__INTCTRL_2_STATUS_SHIFT 0
#define SPR_INTCTRL_2_STATUS__INTCTRL_2_STATUS_WIDTH 1
#define SPR_INTCTRL_2_STATUS__INTCTRL_2_STATUS_RESET_VAL 0
#define SPR_INTCTRL_2_STATUS__INTCTRL_2_STATUS_RMASK 0x1
#define SPR_INTCTRL_2_STATUS__INTCTRL_2_STATUS_MASK  0x1
#define SPR_INTCTRL_2_STATUS__INTCTRL_2_STATUS_FIELD 0,0


/*
 * Interrupt Control 3 Status.
 * This register enables the interrupt control 3 interrupt.
 */
#define SPR_INTCTRL_3_STATUS 0x2205

#define SPR_INTCTRL_3_STATUS__INTCTRL_3_STATUS_SHIFT 0
#define SPR_INTCTRL_3_STATUS__INTCTRL_3_STATUS_WIDTH 1
#define SPR_INTCTRL_3_STATUS__INTCTRL_3_STATUS_RESET_VAL 0
#define SPR_INTCTRL_3_STATUS__INTCTRL_3_STATUS_RMASK 0x1
#define SPR_INTCTRL_3_STATUS__INTCTRL_3_STATUS_MASK  0x1
#define SPR_INTCTRL_3_STATUS__INTCTRL_3_STATUS_FIELD 0,0


/*
 * Interrupt Critical Section.
 * This register specifies whether the main processor is in an interrupt
 * critical section.  This register is used by interrupts and iret
 * instructions.
 */
#define SPR_INTERRUPT_CRITICAL_SECTION 0x2708

#define SPR_INTERRUPT_CRITICAL_SECTION__ICS_SHIFT 0
#define SPR_INTERRUPT_CRITICAL_SECTION__ICS_WIDTH 1
#define SPR_INTERRUPT_CRITICAL_SECTION__ICS_RESET_VAL 0
#define SPR_INTERRUPT_CRITICAL_SECTION__ICS_RMASK 0x1
#define SPR_INTERRUPT_CRITICAL_SECTION__ICS_MASK  0x1
#define SPR_INTERRUPT_CRITICAL_SECTION__ICS_FIELD 0,0


/*
 * Interrupt Mask Protection Level 0.
 * This register specifies the interrupt mask for protection level 0.  This
 * register is used to mask interrupts.  A value of one in a bit position
 * masks off an interrupt.  A value of zero enables an interrupt.
 */
#define SPR_INTERRUPT_MASK_0 0x2506

#define SPR_INTERRUPT_MASK_0__MASK_0_SHIFT 0
#define SPR_INTERRUPT_MASK_0__MASK_0_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_0_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_0_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_0_MASK  0x1
#define SPR_INTERRUPT_MASK_0__MASK_0_FIELD 0,0

#define SPR_INTERRUPT_MASK_0__MASK_1_SHIFT 1
#define SPR_INTERRUPT_MASK_0__MASK_1_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_1_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_1_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_1_MASK  0x2
#define SPR_INTERRUPT_MASK_0__MASK_1_FIELD 1,1

#define SPR_INTERRUPT_MASK_0__MASK_2_SHIFT 2
#define SPR_INTERRUPT_MASK_0__MASK_2_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_2_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_2_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_2_MASK  0x4
#define SPR_INTERRUPT_MASK_0__MASK_2_FIELD 2,2

#define SPR_INTERRUPT_MASK_0__MASK_3_SHIFT 3
#define SPR_INTERRUPT_MASK_0__MASK_3_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_3_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_3_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_3_MASK  0x8
#define SPR_INTERRUPT_MASK_0__MASK_3_FIELD 3,3

#define SPR_INTERRUPT_MASK_0__MASK_4_SHIFT 4
#define SPR_INTERRUPT_MASK_0__MASK_4_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_4_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_4_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_4_MASK  0x10
#define SPR_INTERRUPT_MASK_0__MASK_4_FIELD 4,4

#define SPR_INTERRUPT_MASK_0__MASK_5_SHIFT 5
#define SPR_INTERRUPT_MASK_0__MASK_5_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_5_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_5_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_5_MASK  0x20
#define SPR_INTERRUPT_MASK_0__MASK_5_FIELD 5,5

#define SPR_INTERRUPT_MASK_0__MASK_6_SHIFT 6
#define SPR_INTERRUPT_MASK_0__MASK_6_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_6_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_6_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_6_MASK  0x40
#define SPR_INTERRUPT_MASK_0__MASK_6_FIELD 6,6

#define SPR_INTERRUPT_MASK_0__MASK_20_SHIFT 20
#define SPR_INTERRUPT_MASK_0__MASK_20_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_20_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_20_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_20_MASK  0x100000
#define SPR_INTERRUPT_MASK_0__MASK_20_FIELD 20,20

#define SPR_INTERRUPT_MASK_0__MASK_21_SHIFT 21
#define SPR_INTERRUPT_MASK_0__MASK_21_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_21_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_21_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_21_MASK  0x200000
#define SPR_INTERRUPT_MASK_0__MASK_21_FIELD 21,21

#define SPR_INTERRUPT_MASK_0__MASK_22_SHIFT 22
#define SPR_INTERRUPT_MASK_0__MASK_22_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_22_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_22_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_22_MASK  0x400000
#define SPR_INTERRUPT_MASK_0__MASK_22_FIELD 22,22

#define SPR_INTERRUPT_MASK_0__MASK_23_SHIFT 23
#define SPR_INTERRUPT_MASK_0__MASK_23_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_23_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_23_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_23_MASK  0x800000
#define SPR_INTERRUPT_MASK_0__MASK_23_FIELD 23,23

#define SPR_INTERRUPT_MASK_0__MASK_24_SHIFT 24
#define SPR_INTERRUPT_MASK_0__MASK_24_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_24_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_24_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_24_MASK  0x1000000
#define SPR_INTERRUPT_MASK_0__MASK_24_FIELD 24,24

#define SPR_INTERRUPT_MASK_0__MASK_25_SHIFT 25
#define SPR_INTERRUPT_MASK_0__MASK_25_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_25_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_25_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_25_MASK  0x2000000
#define SPR_INTERRUPT_MASK_0__MASK_25_FIELD 25,25

#define SPR_INTERRUPT_MASK_0__MASK_26_SHIFT 26
#define SPR_INTERRUPT_MASK_0__MASK_26_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_26_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_26_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_26_MASK  0x4000000
#define SPR_INTERRUPT_MASK_0__MASK_26_FIELD 26,26

#define SPR_INTERRUPT_MASK_0__MASK_27_SHIFT 27
#define SPR_INTERRUPT_MASK_0__MASK_27_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_27_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_27_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_27_MASK  0x8000000
#define SPR_INTERRUPT_MASK_0__MASK_27_FIELD 27,27

#define SPR_INTERRUPT_MASK_0__MASK_28_SHIFT 28
#define SPR_INTERRUPT_MASK_0__MASK_28_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_28_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_28_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_28_MASK  0x10000000
#define SPR_INTERRUPT_MASK_0__MASK_28_FIELD 28,28

#define SPR_INTERRUPT_MASK_0__MASK_29_SHIFT 29
#define SPR_INTERRUPT_MASK_0__MASK_29_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_29_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_29_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_29_MASK  0x20000000
#define SPR_INTERRUPT_MASK_0__MASK_29_FIELD 29,29

#define SPR_INTERRUPT_MASK_0__MASK_30_SHIFT 30
#define SPR_INTERRUPT_MASK_0__MASK_30_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_30_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_30_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_30_MASK  0x40000000
#define SPR_INTERRUPT_MASK_0__MASK_30_FIELD 30,30

#define SPR_INTERRUPT_MASK_0__MASK_31_SHIFT 31
#define SPR_INTERRUPT_MASK_0__MASK_31_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_31_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_31_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_31_MASK  0x80000000
#define SPR_INTERRUPT_MASK_0__MASK_31_FIELD 31,31

#define SPR_INTERRUPT_MASK_0__MASK_32_SHIFT 32
#define SPR_INTERRUPT_MASK_0__MASK_32_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_32_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_32_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_32_MASK  _64bit(0x100000000)
#define SPR_INTERRUPT_MASK_0__MASK_32_FIELD 32,32

#define SPR_INTERRUPT_MASK_0__MASK_33_SHIFT 33
#define SPR_INTERRUPT_MASK_0__MASK_33_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_33_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_33_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_33_MASK  _64bit(0x200000000)
#define SPR_INTERRUPT_MASK_0__MASK_33_FIELD 33,33

#define SPR_INTERRUPT_MASK_0__MASK_34_SHIFT 34
#define SPR_INTERRUPT_MASK_0__MASK_34_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_34_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_34_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_34_MASK  _64bit(0x400000000)
#define SPR_INTERRUPT_MASK_0__MASK_34_FIELD 34,34

#define SPR_INTERRUPT_MASK_0__MASK_35_SHIFT 35
#define SPR_INTERRUPT_MASK_0__MASK_35_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_35_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_35_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_35_MASK  _64bit(0x800000000)
#define SPR_INTERRUPT_MASK_0__MASK_35_FIELD 35,35

#define SPR_INTERRUPT_MASK_0__MASK_36_SHIFT 36
#define SPR_INTERRUPT_MASK_0__MASK_36_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_36_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_36_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_36_MASK  _64bit(0x1000000000)
#define SPR_INTERRUPT_MASK_0__MASK_36_FIELD 36,36

#define SPR_INTERRUPT_MASK_0__MASK_37_SHIFT 37
#define SPR_INTERRUPT_MASK_0__MASK_37_WIDTH 1
#define SPR_INTERRUPT_MASK_0__MASK_37_RESET_VAL 1
#define SPR_INTERRUPT_MASK_0__MASK_37_RMASK 0x1
#define SPR_INTERRUPT_MASK_0__MASK_37_MASK  _64bit(0x2000000000)
#define SPR_INTERRUPT_MASK_0__MASK_37_FIELD 37,37


/*
 * Interrupt Mask Protection Level 1.
 * This register specifies the interrupt mask for protection level 1.  This
 * register is used to mask interrupts.  A value of one in a bit position
 * masks off an interrupt.  A value of zero enables an interrupt.
 */
#define SPR_INTERRUPT_MASK_1 0x2406

#define SPR_INTERRUPT_MASK_1__MASK_0_SHIFT 0
#define SPR_INTERRUPT_MASK_1__MASK_0_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_0_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_0_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_0_MASK  0x1
#define SPR_INTERRUPT_MASK_1__MASK_0_FIELD 0,0

#define SPR_INTERRUPT_MASK_1__MASK_1_SHIFT 1
#define SPR_INTERRUPT_MASK_1__MASK_1_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_1_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_1_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_1_MASK  0x2
#define SPR_INTERRUPT_MASK_1__MASK_1_FIELD 1,1

#define SPR_INTERRUPT_MASK_1__MASK_2_SHIFT 2
#define SPR_INTERRUPT_MASK_1__MASK_2_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_2_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_2_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_2_MASK  0x4
#define SPR_INTERRUPT_MASK_1__MASK_2_FIELD 2,2

#define SPR_INTERRUPT_MASK_1__MASK_3_SHIFT 3
#define SPR_INTERRUPT_MASK_1__MASK_3_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_3_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_3_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_3_MASK  0x8
#define SPR_INTERRUPT_MASK_1__MASK_3_FIELD 3,3

#define SPR_INTERRUPT_MASK_1__MASK_4_SHIFT 4
#define SPR_INTERRUPT_MASK_1__MASK_4_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_4_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_4_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_4_MASK  0x10
#define SPR_INTERRUPT_MASK_1__MASK_4_FIELD 4,4

#define SPR_INTERRUPT_MASK_1__MASK_5_SHIFT 5
#define SPR_INTERRUPT_MASK_1__MASK_5_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_5_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_5_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_5_MASK  0x20
#define SPR_INTERRUPT_MASK_1__MASK_5_FIELD 5,5

#define SPR_INTERRUPT_MASK_1__MASK_6_SHIFT 6
#define SPR_INTERRUPT_MASK_1__MASK_6_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_6_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_6_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_6_MASK  0x40
#define SPR_INTERRUPT_MASK_1__MASK_6_FIELD 6,6

#define SPR_INTERRUPT_MASK_1__MASK_20_SHIFT 20
#define SPR_INTERRUPT_MASK_1__MASK_20_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_20_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_20_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_20_MASK  0x100000
#define SPR_INTERRUPT_MASK_1__MASK_20_FIELD 20,20

#define SPR_INTERRUPT_MASK_1__MASK_21_SHIFT 21
#define SPR_INTERRUPT_MASK_1__MASK_21_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_21_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_21_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_21_MASK  0x200000
#define SPR_INTERRUPT_MASK_1__MASK_21_FIELD 21,21

#define SPR_INTERRUPT_MASK_1__MASK_22_SHIFT 22
#define SPR_INTERRUPT_MASK_1__MASK_22_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_22_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_22_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_22_MASK  0x400000
#define SPR_INTERRUPT_MASK_1__MASK_22_FIELD 22,22

#define SPR_INTERRUPT_MASK_1__MASK_23_SHIFT 23
#define SPR_INTERRUPT_MASK_1__MASK_23_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_23_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_23_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_23_MASK  0x800000
#define SPR_INTERRUPT_MASK_1__MASK_23_FIELD 23,23

#define SPR_INTERRUPT_MASK_1__MASK_24_SHIFT 24
#define SPR_INTERRUPT_MASK_1__MASK_24_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_24_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_24_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_24_MASK  0x1000000
#define SPR_INTERRUPT_MASK_1__MASK_24_FIELD 24,24

#define SPR_INTERRUPT_MASK_1__MASK_25_SHIFT 25
#define SPR_INTERRUPT_MASK_1__MASK_25_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_25_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_25_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_25_MASK  0x2000000
#define SPR_INTERRUPT_MASK_1__MASK_25_FIELD 25,25

#define SPR_INTERRUPT_MASK_1__MASK_26_SHIFT 26
#define SPR_INTERRUPT_MASK_1__MASK_26_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_26_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_26_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_26_MASK  0x4000000
#define SPR_INTERRUPT_MASK_1__MASK_26_FIELD 26,26

#define SPR_INTERRUPT_MASK_1__MASK_27_SHIFT 27
#define SPR_INTERRUPT_MASK_1__MASK_27_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_27_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_27_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_27_MASK  0x8000000
#define SPR_INTERRUPT_MASK_1__MASK_27_FIELD 27,27

#define SPR_INTERRUPT_MASK_1__MASK_28_SHIFT 28
#define SPR_INTERRUPT_MASK_1__MASK_28_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_28_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_28_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_28_MASK  0x10000000
#define SPR_INTERRUPT_MASK_1__MASK_28_FIELD 28,28

#define SPR_INTERRUPT_MASK_1__MASK_29_SHIFT 29
#define SPR_INTERRUPT_MASK_1__MASK_29_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_29_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_29_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_29_MASK  0x20000000
#define SPR_INTERRUPT_MASK_1__MASK_29_FIELD 29,29

#define SPR_INTERRUPT_MASK_1__MASK_30_SHIFT 30
#define SPR_INTERRUPT_MASK_1__MASK_30_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_30_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_30_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_30_MASK  0x40000000
#define SPR_INTERRUPT_MASK_1__MASK_30_FIELD 30,30

#define SPR_INTERRUPT_MASK_1__MASK_31_SHIFT 31
#define SPR_INTERRUPT_MASK_1__MASK_31_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_31_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_31_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_31_MASK  0x80000000
#define SPR_INTERRUPT_MASK_1__MASK_31_FIELD 31,31

#define SPR_INTERRUPT_MASK_1__MASK_32_SHIFT 32
#define SPR_INTERRUPT_MASK_1__MASK_32_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_32_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_32_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_32_MASK  _64bit(0x100000000)
#define SPR_INTERRUPT_MASK_1__MASK_32_FIELD 32,32

#define SPR_INTERRUPT_MASK_1__MASK_33_SHIFT 33
#define SPR_INTERRUPT_MASK_1__MASK_33_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_33_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_33_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_33_MASK  _64bit(0x200000000)
#define SPR_INTERRUPT_MASK_1__MASK_33_FIELD 33,33

#define SPR_INTERRUPT_MASK_1__MASK_34_SHIFT 34
#define SPR_INTERRUPT_MASK_1__MASK_34_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_34_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_34_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_34_MASK  _64bit(0x400000000)
#define SPR_INTERRUPT_MASK_1__MASK_34_FIELD 34,34

#define SPR_INTERRUPT_MASK_1__MASK_35_SHIFT 35
#define SPR_INTERRUPT_MASK_1__MASK_35_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_35_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_35_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_35_MASK  _64bit(0x800000000)
#define SPR_INTERRUPT_MASK_1__MASK_35_FIELD 35,35

#define SPR_INTERRUPT_MASK_1__MASK_36_SHIFT 36
#define SPR_INTERRUPT_MASK_1__MASK_36_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_36_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_36_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_36_MASK  _64bit(0x1000000000)
#define SPR_INTERRUPT_MASK_1__MASK_36_FIELD 36,36

#define SPR_INTERRUPT_MASK_1__MASK_37_SHIFT 37
#define SPR_INTERRUPT_MASK_1__MASK_37_WIDTH 1
#define SPR_INTERRUPT_MASK_1__MASK_37_RESET_VAL 1
#define SPR_INTERRUPT_MASK_1__MASK_37_RMASK 0x1
#define SPR_INTERRUPT_MASK_1__MASK_37_MASK  _64bit(0x2000000000)
#define SPR_INTERRUPT_MASK_1__MASK_37_FIELD 37,37


/*
 * Interrupt Mask Protection Level 2.
 * This register specifies the interrupt mask for protection level 2.  This
 * register is used to mask interrupts.  A value of one in a bit position
 * masks off an interrupt.  A value of zero enables an interrupt.
 */
#define SPR_INTERRUPT_MASK_2 0x2306

#define SPR_INTERRUPT_MASK_2__MASK_0_SHIFT 0
#define SPR_INTERRUPT_MASK_2__MASK_0_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_0_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_0_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_0_MASK  0x1
#define SPR_INTERRUPT_MASK_2__MASK_0_FIELD 0,0

#define SPR_INTERRUPT_MASK_2__MASK_1_SHIFT 1
#define SPR_INTERRUPT_MASK_2__MASK_1_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_1_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_1_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_1_MASK  0x2
#define SPR_INTERRUPT_MASK_2__MASK_1_FIELD 1,1

#define SPR_INTERRUPT_MASK_2__MASK_2_SHIFT 2
#define SPR_INTERRUPT_MASK_2__MASK_2_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_2_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_2_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_2_MASK  0x4
#define SPR_INTERRUPT_MASK_2__MASK_2_FIELD 2,2

#define SPR_INTERRUPT_MASK_2__MASK_3_SHIFT 3
#define SPR_INTERRUPT_MASK_2__MASK_3_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_3_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_3_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_3_MASK  0x8
#define SPR_INTERRUPT_MASK_2__MASK_3_FIELD 3,3

#define SPR_INTERRUPT_MASK_2__MASK_4_SHIFT 4
#define SPR_INTERRUPT_MASK_2__MASK_4_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_4_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_4_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_4_MASK  0x10
#define SPR_INTERRUPT_MASK_2__MASK_4_FIELD 4,4

#define SPR_INTERRUPT_MASK_2__MASK_5_SHIFT 5
#define SPR_INTERRUPT_MASK_2__MASK_5_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_5_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_5_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_5_MASK  0x20
#define SPR_INTERRUPT_MASK_2__MASK_5_FIELD 5,5

#define SPR_INTERRUPT_MASK_2__MASK_6_SHIFT 6
#define SPR_INTERRUPT_MASK_2__MASK_6_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_6_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_6_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_6_MASK  0x40
#define SPR_INTERRUPT_MASK_2__MASK_6_FIELD 6,6

#define SPR_INTERRUPT_MASK_2__MASK_20_SHIFT 20
#define SPR_INTERRUPT_MASK_2__MASK_20_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_20_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_20_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_20_MASK  0x100000
#define SPR_INTERRUPT_MASK_2__MASK_20_FIELD 20,20

#define SPR_INTERRUPT_MASK_2__MASK_21_SHIFT 21
#define SPR_INTERRUPT_MASK_2__MASK_21_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_21_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_21_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_21_MASK  0x200000
#define SPR_INTERRUPT_MASK_2__MASK_21_FIELD 21,21

#define SPR_INTERRUPT_MASK_2__MASK_22_SHIFT 22
#define SPR_INTERRUPT_MASK_2__MASK_22_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_22_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_22_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_22_MASK  0x400000
#define SPR_INTERRUPT_MASK_2__MASK_22_FIELD 22,22

#define SPR_INTERRUPT_MASK_2__MASK_23_SHIFT 23
#define SPR_INTERRUPT_MASK_2__MASK_23_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_23_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_23_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_23_MASK  0x800000
#define SPR_INTERRUPT_MASK_2__MASK_23_FIELD 23,23

#define SPR_INTERRUPT_MASK_2__MASK_24_SHIFT 24
#define SPR_INTERRUPT_MASK_2__MASK_24_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_24_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_24_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_24_MASK  0x1000000
#define SPR_INTERRUPT_MASK_2__MASK_24_FIELD 24,24

#define SPR_INTERRUPT_MASK_2__MASK_25_SHIFT 25
#define SPR_INTERRUPT_MASK_2__MASK_25_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_25_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_25_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_25_MASK  0x2000000
#define SPR_INTERRUPT_MASK_2__MASK_25_FIELD 25,25

#define SPR_INTERRUPT_MASK_2__MASK_26_SHIFT 26
#define SPR_INTERRUPT_MASK_2__MASK_26_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_26_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_26_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_26_MASK  0x4000000
#define SPR_INTERRUPT_MASK_2__MASK_26_FIELD 26,26

#define SPR_INTERRUPT_MASK_2__MASK_27_SHIFT 27
#define SPR_INTERRUPT_MASK_2__MASK_27_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_27_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_27_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_27_MASK  0x8000000
#define SPR_INTERRUPT_MASK_2__MASK_27_FIELD 27,27

#define SPR_INTERRUPT_MASK_2__MASK_28_SHIFT 28
#define SPR_INTERRUPT_MASK_2__MASK_28_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_28_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_28_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_28_MASK  0x10000000
#define SPR_INTERRUPT_MASK_2__MASK_28_FIELD 28,28

#define SPR_INTERRUPT_MASK_2__MASK_29_SHIFT 29
#define SPR_INTERRUPT_MASK_2__MASK_29_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_29_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_29_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_29_MASK  0x20000000
#define SPR_INTERRUPT_MASK_2__MASK_29_FIELD 29,29

#define SPR_INTERRUPT_MASK_2__MASK_30_SHIFT 30
#define SPR_INTERRUPT_MASK_2__MASK_30_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_30_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_30_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_30_MASK  0x40000000
#define SPR_INTERRUPT_MASK_2__MASK_30_FIELD 30,30

#define SPR_INTERRUPT_MASK_2__MASK_31_SHIFT 31
#define SPR_INTERRUPT_MASK_2__MASK_31_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_31_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_31_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_31_MASK  0x80000000
#define SPR_INTERRUPT_MASK_2__MASK_31_FIELD 31,31

#define SPR_INTERRUPT_MASK_2__MASK_32_SHIFT 32
#define SPR_INTERRUPT_MASK_2__MASK_32_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_32_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_32_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_32_MASK  _64bit(0x100000000)
#define SPR_INTERRUPT_MASK_2__MASK_32_FIELD 32,32

#define SPR_INTERRUPT_MASK_2__MASK_33_SHIFT 33
#define SPR_INTERRUPT_MASK_2__MASK_33_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_33_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_33_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_33_MASK  _64bit(0x200000000)
#define SPR_INTERRUPT_MASK_2__MASK_33_FIELD 33,33

#define SPR_INTERRUPT_MASK_2__MASK_34_SHIFT 34
#define SPR_INTERRUPT_MASK_2__MASK_34_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_34_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_34_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_34_MASK  _64bit(0x400000000)
#define SPR_INTERRUPT_MASK_2__MASK_34_FIELD 34,34

#define SPR_INTERRUPT_MASK_2__MASK_35_SHIFT 35
#define SPR_INTERRUPT_MASK_2__MASK_35_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_35_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_35_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_35_MASK  _64bit(0x800000000)
#define SPR_INTERRUPT_MASK_2__MASK_35_FIELD 35,35

#define SPR_INTERRUPT_MASK_2__MASK_36_SHIFT 36
#define SPR_INTERRUPT_MASK_2__MASK_36_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_36_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_36_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_36_MASK  _64bit(0x1000000000)
#define SPR_INTERRUPT_MASK_2__MASK_36_FIELD 36,36

#define SPR_INTERRUPT_MASK_2__MASK_37_SHIFT 37
#define SPR_INTERRUPT_MASK_2__MASK_37_WIDTH 1
#define SPR_INTERRUPT_MASK_2__MASK_37_RESET_VAL 1
#define SPR_INTERRUPT_MASK_2__MASK_37_RMASK 0x1
#define SPR_INTERRUPT_MASK_2__MASK_37_MASK  _64bit(0x2000000000)
#define SPR_INTERRUPT_MASK_2__MASK_37_FIELD 37,37


/*
 * Interrupt Mask Protection Level 3.
 * This register specifies the interrupt mask for protection level 3.  This
 * register is used to mask interrupts.  A value of one in a bit position
 * masks off an interrupt.  A value of zero enables an interrupt.
 */
#define SPR_INTERRUPT_MASK_3 0x2206

#define SPR_INTERRUPT_MASK_3__MASK_0_SHIFT 0
#define SPR_INTERRUPT_MASK_3__MASK_0_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_0_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_0_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_0_MASK  0x1
#define SPR_INTERRUPT_MASK_3__MASK_0_FIELD 0,0

#define SPR_INTERRUPT_MASK_3__MASK_1_SHIFT 1
#define SPR_INTERRUPT_MASK_3__MASK_1_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_1_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_1_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_1_MASK  0x2
#define SPR_INTERRUPT_MASK_3__MASK_1_FIELD 1,1

#define SPR_INTERRUPT_MASK_3__MASK_2_SHIFT 2
#define SPR_INTERRUPT_MASK_3__MASK_2_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_2_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_2_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_2_MASK  0x4
#define SPR_INTERRUPT_MASK_3__MASK_2_FIELD 2,2

#define SPR_INTERRUPT_MASK_3__MASK_3_SHIFT 3
#define SPR_INTERRUPT_MASK_3__MASK_3_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_3_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_3_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_3_MASK  0x8
#define SPR_INTERRUPT_MASK_3__MASK_3_FIELD 3,3

#define SPR_INTERRUPT_MASK_3__MASK_4_SHIFT 4
#define SPR_INTERRUPT_MASK_3__MASK_4_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_4_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_4_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_4_MASK  0x10
#define SPR_INTERRUPT_MASK_3__MASK_4_FIELD 4,4

#define SPR_INTERRUPT_MASK_3__MASK_5_SHIFT 5
#define SPR_INTERRUPT_MASK_3__MASK_5_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_5_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_5_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_5_MASK  0x20
#define SPR_INTERRUPT_MASK_3__MASK_5_FIELD 5,5

#define SPR_INTERRUPT_MASK_3__MASK_6_SHIFT 6
#define SPR_INTERRUPT_MASK_3__MASK_6_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_6_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_6_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_6_MASK  0x40
#define SPR_INTERRUPT_MASK_3__MASK_6_FIELD 6,6

#define SPR_INTERRUPT_MASK_3__MASK_20_SHIFT 20
#define SPR_INTERRUPT_MASK_3__MASK_20_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_20_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_20_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_20_MASK  0x100000
#define SPR_INTERRUPT_MASK_3__MASK_20_FIELD 20,20

#define SPR_INTERRUPT_MASK_3__MASK_21_SHIFT 21
#define SPR_INTERRUPT_MASK_3__MASK_21_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_21_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_21_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_21_MASK  0x200000
#define SPR_INTERRUPT_MASK_3__MASK_21_FIELD 21,21

#define SPR_INTERRUPT_MASK_3__MASK_22_SHIFT 22
#define SPR_INTERRUPT_MASK_3__MASK_22_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_22_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_22_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_22_MASK  0x400000
#define SPR_INTERRUPT_MASK_3__MASK_22_FIELD 22,22

#define SPR_INTERRUPT_MASK_3__MASK_23_SHIFT 23
#define SPR_INTERRUPT_MASK_3__MASK_23_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_23_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_23_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_23_MASK  0x800000
#define SPR_INTERRUPT_MASK_3__MASK_23_FIELD 23,23

#define SPR_INTERRUPT_MASK_3__MASK_24_SHIFT 24
#define SPR_INTERRUPT_MASK_3__MASK_24_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_24_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_24_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_24_MASK  0x1000000
#define SPR_INTERRUPT_MASK_3__MASK_24_FIELD 24,24

#define SPR_INTERRUPT_MASK_3__MASK_25_SHIFT 25
#define SPR_INTERRUPT_MASK_3__MASK_25_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_25_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_25_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_25_MASK  0x2000000
#define SPR_INTERRUPT_MASK_3__MASK_25_FIELD 25,25

#define SPR_INTERRUPT_MASK_3__MASK_26_SHIFT 26
#define SPR_INTERRUPT_MASK_3__MASK_26_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_26_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_26_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_26_MASK  0x4000000
#define SPR_INTERRUPT_MASK_3__MASK_26_FIELD 26,26

#define SPR_INTERRUPT_MASK_3__MASK_27_SHIFT 27
#define SPR_INTERRUPT_MASK_3__MASK_27_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_27_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_27_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_27_MASK  0x8000000
#define SPR_INTERRUPT_MASK_3__MASK_27_FIELD 27,27

#define SPR_INTERRUPT_MASK_3__MASK_28_SHIFT 28
#define SPR_INTERRUPT_MASK_3__MASK_28_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_28_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_28_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_28_MASK  0x10000000
#define SPR_INTERRUPT_MASK_3__MASK_28_FIELD 28,28

#define SPR_INTERRUPT_MASK_3__MASK_29_SHIFT 29
#define SPR_INTERRUPT_MASK_3__MASK_29_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_29_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_29_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_29_MASK  0x20000000
#define SPR_INTERRUPT_MASK_3__MASK_29_FIELD 29,29

#define SPR_INTERRUPT_MASK_3__MASK_30_SHIFT 30
#define SPR_INTERRUPT_MASK_3__MASK_30_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_30_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_30_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_30_MASK  0x40000000
#define SPR_INTERRUPT_MASK_3__MASK_30_FIELD 30,30

#define SPR_INTERRUPT_MASK_3__MASK_31_SHIFT 31
#define SPR_INTERRUPT_MASK_3__MASK_31_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_31_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_31_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_31_MASK  0x80000000
#define SPR_INTERRUPT_MASK_3__MASK_31_FIELD 31,31

#define SPR_INTERRUPT_MASK_3__MASK_32_SHIFT 32
#define SPR_INTERRUPT_MASK_3__MASK_32_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_32_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_32_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_32_MASK  _64bit(0x100000000)
#define SPR_INTERRUPT_MASK_3__MASK_32_FIELD 32,32

#define SPR_INTERRUPT_MASK_3__MASK_33_SHIFT 33
#define SPR_INTERRUPT_MASK_3__MASK_33_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_33_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_33_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_33_MASK  _64bit(0x200000000)
#define SPR_INTERRUPT_MASK_3__MASK_33_FIELD 33,33

#define SPR_INTERRUPT_MASK_3__MASK_34_SHIFT 34
#define SPR_INTERRUPT_MASK_3__MASK_34_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_34_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_34_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_34_MASK  _64bit(0x400000000)
#define SPR_INTERRUPT_MASK_3__MASK_34_FIELD 34,34

#define SPR_INTERRUPT_MASK_3__MASK_35_SHIFT 35
#define SPR_INTERRUPT_MASK_3__MASK_35_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_35_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_35_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_35_MASK  _64bit(0x800000000)
#define SPR_INTERRUPT_MASK_3__MASK_35_FIELD 35,35

#define SPR_INTERRUPT_MASK_3__MASK_36_SHIFT 36
#define SPR_INTERRUPT_MASK_3__MASK_36_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_36_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_36_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_36_MASK  _64bit(0x1000000000)
#define SPR_INTERRUPT_MASK_3__MASK_36_FIELD 36,36

#define SPR_INTERRUPT_MASK_3__MASK_37_SHIFT 37
#define SPR_INTERRUPT_MASK_3__MASK_37_WIDTH 1
#define SPR_INTERRUPT_MASK_3__MASK_37_RESET_VAL 1
#define SPR_INTERRUPT_MASK_3__MASK_37_RMASK 0x1
#define SPR_INTERRUPT_MASK_3__MASK_37_MASK  _64bit(0x2000000000)
#define SPR_INTERRUPT_MASK_3__MASK_37_FIELD 37,37


/*
 * Interrupt Mask Protection Level 0.
 * This register specifies the interrupt mask for protection level 0.  This
 * register is used to mask interrupts.  Writing a value of one to a bit
 * position resets the interrupt mask for that location.  Writing a value of
 * one to a bit position has no effect.  This is a reset register.
 */
#define SPR_INTERRUPT_MASK_RESET_0 0x2507

#define SPR_INTERRUPT_MASK_RESET_0__MASK_0_SHIFT 0
#define SPR_INTERRUPT_MASK_RESET_0__MASK_0_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_0_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_0_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_0_MASK  0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_0_FIELD 0,0

#define SPR_INTERRUPT_MASK_RESET_0__MASK_1_SHIFT 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_1_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_1_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_1_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_1_MASK  0x2
#define SPR_INTERRUPT_MASK_RESET_0__MASK_1_FIELD 1,1

#define SPR_INTERRUPT_MASK_RESET_0__MASK_2_SHIFT 2
#define SPR_INTERRUPT_MASK_RESET_0__MASK_2_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_2_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_2_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_2_MASK  0x4
#define SPR_INTERRUPT_MASK_RESET_0__MASK_2_FIELD 2,2

#define SPR_INTERRUPT_MASK_RESET_0__MASK_3_SHIFT 3
#define SPR_INTERRUPT_MASK_RESET_0__MASK_3_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_3_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_3_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_3_MASK  0x8
#define SPR_INTERRUPT_MASK_RESET_0__MASK_3_FIELD 3,3

#define SPR_INTERRUPT_MASK_RESET_0__MASK_4_SHIFT 4
#define SPR_INTERRUPT_MASK_RESET_0__MASK_4_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_4_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_4_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_4_MASK  0x10
#define SPR_INTERRUPT_MASK_RESET_0__MASK_4_FIELD 4,4

#define SPR_INTERRUPT_MASK_RESET_0__MASK_5_SHIFT 5
#define SPR_INTERRUPT_MASK_RESET_0__MASK_5_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_5_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_5_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_5_MASK  0x20
#define SPR_INTERRUPT_MASK_RESET_0__MASK_5_FIELD 5,5

#define SPR_INTERRUPT_MASK_RESET_0__MASK_6_SHIFT 6
#define SPR_INTERRUPT_MASK_RESET_0__MASK_6_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_6_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_6_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_6_MASK  0x40
#define SPR_INTERRUPT_MASK_RESET_0__MASK_6_FIELD 6,6

#define SPR_INTERRUPT_MASK_RESET_0__MASK_20_SHIFT 20
#define SPR_INTERRUPT_MASK_RESET_0__MASK_20_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_20_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_20_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_20_MASK  0x100000
#define SPR_INTERRUPT_MASK_RESET_0__MASK_20_FIELD 20,20

#define SPR_INTERRUPT_MASK_RESET_0__MASK_21_SHIFT 21
#define SPR_INTERRUPT_MASK_RESET_0__MASK_21_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_21_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_21_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_21_MASK  0x200000
#define SPR_INTERRUPT_MASK_RESET_0__MASK_21_FIELD 21,21

#define SPR_INTERRUPT_MASK_RESET_0__MASK_22_SHIFT 22
#define SPR_INTERRUPT_MASK_RESET_0__MASK_22_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_22_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_22_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_22_MASK  0x400000
#define SPR_INTERRUPT_MASK_RESET_0__MASK_22_FIELD 22,22

#define SPR_INTERRUPT_MASK_RESET_0__MASK_23_SHIFT 23
#define SPR_INTERRUPT_MASK_RESET_0__MASK_23_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_23_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_23_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_23_MASK  0x800000
#define SPR_INTERRUPT_MASK_RESET_0__MASK_23_FIELD 23,23

#define SPR_INTERRUPT_MASK_RESET_0__MASK_24_SHIFT 24
#define SPR_INTERRUPT_MASK_RESET_0__MASK_24_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_24_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_24_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_24_MASK  0x1000000
#define SPR_INTERRUPT_MASK_RESET_0__MASK_24_FIELD 24,24

#define SPR_INTERRUPT_MASK_RESET_0__MASK_25_SHIFT 25
#define SPR_INTERRUPT_MASK_RESET_0__MASK_25_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_25_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_25_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_25_MASK  0x2000000
#define SPR_INTERRUPT_MASK_RESET_0__MASK_25_FIELD 25,25

#define SPR_INTERRUPT_MASK_RESET_0__MASK_26_SHIFT 26
#define SPR_INTERRUPT_MASK_RESET_0__MASK_26_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_26_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_26_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_26_MASK  0x4000000
#define SPR_INTERRUPT_MASK_RESET_0__MASK_26_FIELD 26,26

#define SPR_INTERRUPT_MASK_RESET_0__MASK_27_SHIFT 27
#define SPR_INTERRUPT_MASK_RESET_0__MASK_27_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_27_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_27_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_27_MASK  0x8000000
#define SPR_INTERRUPT_MASK_RESET_0__MASK_27_FIELD 27,27

#define SPR_INTERRUPT_MASK_RESET_0__MASK_28_SHIFT 28
#define SPR_INTERRUPT_MASK_RESET_0__MASK_28_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_28_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_28_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_28_MASK  0x10000000
#define SPR_INTERRUPT_MASK_RESET_0__MASK_28_FIELD 28,28

#define SPR_INTERRUPT_MASK_RESET_0__MASK_29_SHIFT 29
#define SPR_INTERRUPT_MASK_RESET_0__MASK_29_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_29_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_29_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_29_MASK  0x20000000
#define SPR_INTERRUPT_MASK_RESET_0__MASK_29_FIELD 29,29

#define SPR_INTERRUPT_MASK_RESET_0__MASK_30_SHIFT 30
#define SPR_INTERRUPT_MASK_RESET_0__MASK_30_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_30_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_30_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_30_MASK  0x40000000
#define SPR_INTERRUPT_MASK_RESET_0__MASK_30_FIELD 30,30

#define SPR_INTERRUPT_MASK_RESET_0__MASK_31_SHIFT 31
#define SPR_INTERRUPT_MASK_RESET_0__MASK_31_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_31_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_31_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_31_MASK  0x80000000
#define SPR_INTERRUPT_MASK_RESET_0__MASK_31_FIELD 31,31

#define SPR_INTERRUPT_MASK_RESET_0__MASK_32_SHIFT 32
#define SPR_INTERRUPT_MASK_RESET_0__MASK_32_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_32_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_32_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_32_MASK  _64bit(0x100000000)
#define SPR_INTERRUPT_MASK_RESET_0__MASK_32_FIELD 32,32

#define SPR_INTERRUPT_MASK_RESET_0__MASK_33_SHIFT 33
#define SPR_INTERRUPT_MASK_RESET_0__MASK_33_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_33_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_33_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_33_MASK  _64bit(0x200000000)
#define SPR_INTERRUPT_MASK_RESET_0__MASK_33_FIELD 33,33

#define SPR_INTERRUPT_MASK_RESET_0__MASK_34_SHIFT 34
#define SPR_INTERRUPT_MASK_RESET_0__MASK_34_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_34_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_34_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_34_MASK  _64bit(0x400000000)
#define SPR_INTERRUPT_MASK_RESET_0__MASK_34_FIELD 34,34

#define SPR_INTERRUPT_MASK_RESET_0__MASK_35_SHIFT 35
#define SPR_INTERRUPT_MASK_RESET_0__MASK_35_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_35_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_35_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_35_MASK  _64bit(0x800000000)
#define SPR_INTERRUPT_MASK_RESET_0__MASK_35_FIELD 35,35

#define SPR_INTERRUPT_MASK_RESET_0__MASK_36_SHIFT 36
#define SPR_INTERRUPT_MASK_RESET_0__MASK_36_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_36_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_36_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_36_MASK  _64bit(0x1000000000)
#define SPR_INTERRUPT_MASK_RESET_0__MASK_36_FIELD 36,36

#define SPR_INTERRUPT_MASK_RESET_0__MASK_37_SHIFT 37
#define SPR_INTERRUPT_MASK_RESET_0__MASK_37_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_37_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_37_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_0__MASK_37_MASK  _64bit(0x2000000000)
#define SPR_INTERRUPT_MASK_RESET_0__MASK_37_FIELD 37,37


/*
 * Interrupt Mask Protection Level 1.
 * This register specifies the interrupt mask for protection level 1.  This
 * register is used to mask interrupts.  Writing a value of one to a bit
 * position resets the interrupt mask for that location.  Writing a value of
 * one to a bit position has no effect.  This is a reset register.
 */
#define SPR_INTERRUPT_MASK_RESET_1 0x2407

#define SPR_INTERRUPT_MASK_RESET_1__MASK_0_SHIFT 0
#define SPR_INTERRUPT_MASK_RESET_1__MASK_0_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_0_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_0_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_0_MASK  0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_0_FIELD 0,0

#define SPR_INTERRUPT_MASK_RESET_1__MASK_1_SHIFT 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_1_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_1_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_1_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_1_MASK  0x2
#define SPR_INTERRUPT_MASK_RESET_1__MASK_1_FIELD 1,1

#define SPR_INTERRUPT_MASK_RESET_1__MASK_2_SHIFT 2
#define SPR_INTERRUPT_MASK_RESET_1__MASK_2_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_2_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_2_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_2_MASK  0x4
#define SPR_INTERRUPT_MASK_RESET_1__MASK_2_FIELD 2,2

#define SPR_INTERRUPT_MASK_RESET_1__MASK_3_SHIFT 3
#define SPR_INTERRUPT_MASK_RESET_1__MASK_3_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_3_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_3_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_3_MASK  0x8
#define SPR_INTERRUPT_MASK_RESET_1__MASK_3_FIELD 3,3

#define SPR_INTERRUPT_MASK_RESET_1__MASK_4_SHIFT 4
#define SPR_INTERRUPT_MASK_RESET_1__MASK_4_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_4_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_4_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_4_MASK  0x10
#define SPR_INTERRUPT_MASK_RESET_1__MASK_4_FIELD 4,4

#define SPR_INTERRUPT_MASK_RESET_1__MASK_5_SHIFT 5
#define SPR_INTERRUPT_MASK_RESET_1__MASK_5_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_5_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_5_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_5_MASK  0x20
#define SPR_INTERRUPT_MASK_RESET_1__MASK_5_FIELD 5,5

#define SPR_INTERRUPT_MASK_RESET_1__MASK_6_SHIFT 6
#define SPR_INTERRUPT_MASK_RESET_1__MASK_6_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_6_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_6_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_6_MASK  0x40
#define SPR_INTERRUPT_MASK_RESET_1__MASK_6_FIELD 6,6

#define SPR_INTERRUPT_MASK_RESET_1__MASK_20_SHIFT 20
#define SPR_INTERRUPT_MASK_RESET_1__MASK_20_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_20_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_20_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_20_MASK  0x100000
#define SPR_INTERRUPT_MASK_RESET_1__MASK_20_FIELD 20,20

#define SPR_INTERRUPT_MASK_RESET_1__MASK_21_SHIFT 21
#define SPR_INTERRUPT_MASK_RESET_1__MASK_21_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_21_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_21_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_21_MASK  0x200000
#define SPR_INTERRUPT_MASK_RESET_1__MASK_21_FIELD 21,21

#define SPR_INTERRUPT_MASK_RESET_1__MASK_22_SHIFT 22
#define SPR_INTERRUPT_MASK_RESET_1__MASK_22_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_22_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_22_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_22_MASK  0x400000
#define SPR_INTERRUPT_MASK_RESET_1__MASK_22_FIELD 22,22

#define SPR_INTERRUPT_MASK_RESET_1__MASK_23_SHIFT 23
#define SPR_INTERRUPT_MASK_RESET_1__MASK_23_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_23_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_23_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_23_MASK  0x800000
#define SPR_INTERRUPT_MASK_RESET_1__MASK_23_FIELD 23,23

#define SPR_INTERRUPT_MASK_RESET_1__MASK_24_SHIFT 24
#define SPR_INTERRUPT_MASK_RESET_1__MASK_24_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_24_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_24_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_24_MASK  0x1000000
#define SPR_INTERRUPT_MASK_RESET_1__MASK_24_FIELD 24,24

#define SPR_INTERRUPT_MASK_RESET_1__MASK_25_SHIFT 25
#define SPR_INTERRUPT_MASK_RESET_1__MASK_25_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_25_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_25_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_25_MASK  0x2000000
#define SPR_INTERRUPT_MASK_RESET_1__MASK_25_FIELD 25,25

#define SPR_INTERRUPT_MASK_RESET_1__MASK_26_SHIFT 26
#define SPR_INTERRUPT_MASK_RESET_1__MASK_26_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_26_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_26_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_26_MASK  0x4000000
#define SPR_INTERRUPT_MASK_RESET_1__MASK_26_FIELD 26,26

#define SPR_INTERRUPT_MASK_RESET_1__MASK_27_SHIFT 27
#define SPR_INTERRUPT_MASK_RESET_1__MASK_27_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_27_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_27_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_27_MASK  0x8000000
#define SPR_INTERRUPT_MASK_RESET_1__MASK_27_FIELD 27,27

#define SPR_INTERRUPT_MASK_RESET_1__MASK_28_SHIFT 28
#define SPR_INTERRUPT_MASK_RESET_1__MASK_28_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_28_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_28_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_28_MASK  0x10000000
#define SPR_INTERRUPT_MASK_RESET_1__MASK_28_FIELD 28,28

#define SPR_INTERRUPT_MASK_RESET_1__MASK_29_SHIFT 29
#define SPR_INTERRUPT_MASK_RESET_1__MASK_29_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_29_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_29_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_29_MASK  0x20000000
#define SPR_INTERRUPT_MASK_RESET_1__MASK_29_FIELD 29,29

#define SPR_INTERRUPT_MASK_RESET_1__MASK_30_SHIFT 30
#define SPR_INTERRUPT_MASK_RESET_1__MASK_30_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_30_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_30_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_30_MASK  0x40000000
#define SPR_INTERRUPT_MASK_RESET_1__MASK_30_FIELD 30,30

#define SPR_INTERRUPT_MASK_RESET_1__MASK_31_SHIFT 31
#define SPR_INTERRUPT_MASK_RESET_1__MASK_31_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_31_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_31_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_31_MASK  0x80000000
#define SPR_INTERRUPT_MASK_RESET_1__MASK_31_FIELD 31,31

#define SPR_INTERRUPT_MASK_RESET_1__MASK_32_SHIFT 32
#define SPR_INTERRUPT_MASK_RESET_1__MASK_32_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_32_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_32_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_32_MASK  _64bit(0x100000000)
#define SPR_INTERRUPT_MASK_RESET_1__MASK_32_FIELD 32,32

#define SPR_INTERRUPT_MASK_RESET_1__MASK_33_SHIFT 33
#define SPR_INTERRUPT_MASK_RESET_1__MASK_33_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_33_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_33_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_33_MASK  _64bit(0x200000000)
#define SPR_INTERRUPT_MASK_RESET_1__MASK_33_FIELD 33,33

#define SPR_INTERRUPT_MASK_RESET_1__MASK_34_SHIFT 34
#define SPR_INTERRUPT_MASK_RESET_1__MASK_34_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_34_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_34_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_34_MASK  _64bit(0x400000000)
#define SPR_INTERRUPT_MASK_RESET_1__MASK_34_FIELD 34,34

#define SPR_INTERRUPT_MASK_RESET_1__MASK_35_SHIFT 35
#define SPR_INTERRUPT_MASK_RESET_1__MASK_35_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_35_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_35_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_35_MASK  _64bit(0x800000000)
#define SPR_INTERRUPT_MASK_RESET_1__MASK_35_FIELD 35,35

#define SPR_INTERRUPT_MASK_RESET_1__MASK_36_SHIFT 36
#define SPR_INTERRUPT_MASK_RESET_1__MASK_36_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_36_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_36_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_36_MASK  _64bit(0x1000000000)
#define SPR_INTERRUPT_MASK_RESET_1__MASK_36_FIELD 36,36

#define SPR_INTERRUPT_MASK_RESET_1__MASK_37_SHIFT 37
#define SPR_INTERRUPT_MASK_RESET_1__MASK_37_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_37_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_37_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_1__MASK_37_MASK  _64bit(0x2000000000)
#define SPR_INTERRUPT_MASK_RESET_1__MASK_37_FIELD 37,37


/*
 * Interrupt Mask Protection Level 2.
 * This register specifies the interrupt mask for protection level 2.  This
 * register is used to mask interrupts.  Writing a value of one to a bit
 * position resets the interrupt mask for that location.  Writing a value of
 * one to a bit position has no effect.  This is a reset register.
 */
#define SPR_INTERRUPT_MASK_RESET_2 0x2307

#define SPR_INTERRUPT_MASK_RESET_2__MASK_0_SHIFT 0
#define SPR_INTERRUPT_MASK_RESET_2__MASK_0_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_0_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_0_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_0_MASK  0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_0_FIELD 0,0

#define SPR_INTERRUPT_MASK_RESET_2__MASK_1_SHIFT 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_1_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_1_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_1_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_1_MASK  0x2
#define SPR_INTERRUPT_MASK_RESET_2__MASK_1_FIELD 1,1

#define SPR_INTERRUPT_MASK_RESET_2__MASK_2_SHIFT 2
#define SPR_INTERRUPT_MASK_RESET_2__MASK_2_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_2_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_2_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_2_MASK  0x4
#define SPR_INTERRUPT_MASK_RESET_2__MASK_2_FIELD 2,2

#define SPR_INTERRUPT_MASK_RESET_2__MASK_3_SHIFT 3
#define SPR_INTERRUPT_MASK_RESET_2__MASK_3_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_3_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_3_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_3_MASK  0x8
#define SPR_INTERRUPT_MASK_RESET_2__MASK_3_FIELD 3,3

#define SPR_INTERRUPT_MASK_RESET_2__MASK_4_SHIFT 4
#define SPR_INTERRUPT_MASK_RESET_2__MASK_4_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_4_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_4_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_4_MASK  0x10
#define SPR_INTERRUPT_MASK_RESET_2__MASK_4_FIELD 4,4

#define SPR_INTERRUPT_MASK_RESET_2__MASK_5_SHIFT 5
#define SPR_INTERRUPT_MASK_RESET_2__MASK_5_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_5_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_5_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_5_MASK  0x20
#define SPR_INTERRUPT_MASK_RESET_2__MASK_5_FIELD 5,5

#define SPR_INTERRUPT_MASK_RESET_2__MASK_6_SHIFT 6
#define SPR_INTERRUPT_MASK_RESET_2__MASK_6_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_6_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_6_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_6_MASK  0x40
#define SPR_INTERRUPT_MASK_RESET_2__MASK_6_FIELD 6,6

#define SPR_INTERRUPT_MASK_RESET_2__MASK_20_SHIFT 20
#define SPR_INTERRUPT_MASK_RESET_2__MASK_20_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_20_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_20_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_20_MASK  0x100000
#define SPR_INTERRUPT_MASK_RESET_2__MASK_20_FIELD 20,20

#define SPR_INTERRUPT_MASK_RESET_2__MASK_21_SHIFT 21
#define SPR_INTERRUPT_MASK_RESET_2__MASK_21_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_21_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_21_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_21_MASK  0x200000
#define SPR_INTERRUPT_MASK_RESET_2__MASK_21_FIELD 21,21

#define SPR_INTERRUPT_MASK_RESET_2__MASK_22_SHIFT 22
#define SPR_INTERRUPT_MASK_RESET_2__MASK_22_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_22_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_22_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_22_MASK  0x400000
#define SPR_INTERRUPT_MASK_RESET_2__MASK_22_FIELD 22,22

#define SPR_INTERRUPT_MASK_RESET_2__MASK_23_SHIFT 23
#define SPR_INTERRUPT_MASK_RESET_2__MASK_23_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_23_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_23_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_23_MASK  0x800000
#define SPR_INTERRUPT_MASK_RESET_2__MASK_23_FIELD 23,23

#define SPR_INTERRUPT_MASK_RESET_2__MASK_24_SHIFT 24
#define SPR_INTERRUPT_MASK_RESET_2__MASK_24_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_24_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_24_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_24_MASK  0x1000000
#define SPR_INTERRUPT_MASK_RESET_2__MASK_24_FIELD 24,24

#define SPR_INTERRUPT_MASK_RESET_2__MASK_25_SHIFT 25
#define SPR_INTERRUPT_MASK_RESET_2__MASK_25_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_25_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_25_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_25_MASK  0x2000000
#define SPR_INTERRUPT_MASK_RESET_2__MASK_25_FIELD 25,25

#define SPR_INTERRUPT_MASK_RESET_2__MASK_26_SHIFT 26
#define SPR_INTERRUPT_MASK_RESET_2__MASK_26_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_26_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_26_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_26_MASK  0x4000000
#define SPR_INTERRUPT_MASK_RESET_2__MASK_26_FIELD 26,26

#define SPR_INTERRUPT_MASK_RESET_2__MASK_27_SHIFT 27
#define SPR_INTERRUPT_MASK_RESET_2__MASK_27_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_27_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_27_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_27_MASK  0x8000000
#define SPR_INTERRUPT_MASK_RESET_2__MASK_27_FIELD 27,27

#define SPR_INTERRUPT_MASK_RESET_2__MASK_28_SHIFT 28
#define SPR_INTERRUPT_MASK_RESET_2__MASK_28_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_28_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_28_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_28_MASK  0x10000000
#define SPR_INTERRUPT_MASK_RESET_2__MASK_28_FIELD 28,28

#define SPR_INTERRUPT_MASK_RESET_2__MASK_29_SHIFT 29
#define SPR_INTERRUPT_MASK_RESET_2__MASK_29_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_29_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_29_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_29_MASK  0x20000000
#define SPR_INTERRUPT_MASK_RESET_2__MASK_29_FIELD 29,29

#define SPR_INTERRUPT_MASK_RESET_2__MASK_30_SHIFT 30
#define SPR_INTERRUPT_MASK_RESET_2__MASK_30_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_30_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_30_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_30_MASK  0x40000000
#define SPR_INTERRUPT_MASK_RESET_2__MASK_30_FIELD 30,30

#define SPR_INTERRUPT_MASK_RESET_2__MASK_31_SHIFT 31
#define SPR_INTERRUPT_MASK_RESET_2__MASK_31_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_31_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_31_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_31_MASK  0x80000000
#define SPR_INTERRUPT_MASK_RESET_2__MASK_31_FIELD 31,31

#define SPR_INTERRUPT_MASK_RESET_2__MASK_32_SHIFT 32
#define SPR_INTERRUPT_MASK_RESET_2__MASK_32_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_32_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_32_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_32_MASK  _64bit(0x100000000)
#define SPR_INTERRUPT_MASK_RESET_2__MASK_32_FIELD 32,32

#define SPR_INTERRUPT_MASK_RESET_2__MASK_33_SHIFT 33
#define SPR_INTERRUPT_MASK_RESET_2__MASK_33_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_33_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_33_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_33_MASK  _64bit(0x200000000)
#define SPR_INTERRUPT_MASK_RESET_2__MASK_33_FIELD 33,33

#define SPR_INTERRUPT_MASK_RESET_2__MASK_34_SHIFT 34
#define SPR_INTERRUPT_MASK_RESET_2__MASK_34_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_34_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_34_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_34_MASK  _64bit(0x400000000)
#define SPR_INTERRUPT_MASK_RESET_2__MASK_34_FIELD 34,34

#define SPR_INTERRUPT_MASK_RESET_2__MASK_35_SHIFT 35
#define SPR_INTERRUPT_MASK_RESET_2__MASK_35_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_35_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_35_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_35_MASK  _64bit(0x800000000)
#define SPR_INTERRUPT_MASK_RESET_2__MASK_35_FIELD 35,35

#define SPR_INTERRUPT_MASK_RESET_2__MASK_36_SHIFT 36
#define SPR_INTERRUPT_MASK_RESET_2__MASK_36_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_36_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_36_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_36_MASK  _64bit(0x1000000000)
#define SPR_INTERRUPT_MASK_RESET_2__MASK_36_FIELD 36,36

#define SPR_INTERRUPT_MASK_RESET_2__MASK_37_SHIFT 37
#define SPR_INTERRUPT_MASK_RESET_2__MASK_37_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_37_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_37_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_2__MASK_37_MASK  _64bit(0x2000000000)
#define SPR_INTERRUPT_MASK_RESET_2__MASK_37_FIELD 37,37


/*
 * Interrupt Mask Protection Level 3.
 * This register specifies the interrupt mask for protection level 3.  This
 * register is used to mask interrupts.  Writing a value of one to a bit
 * position resets the interrupt mask for that location.  Writing a value of
 * one to a bit position has no effect.  This is a reset register.
 */
#define SPR_INTERRUPT_MASK_RESET_3 0x2207

#define SPR_INTERRUPT_MASK_RESET_3__MASK_0_SHIFT 0
#define SPR_INTERRUPT_MASK_RESET_3__MASK_0_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_0_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_0_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_0_MASK  0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_0_FIELD 0,0

#define SPR_INTERRUPT_MASK_RESET_3__MASK_1_SHIFT 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_1_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_1_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_1_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_1_MASK  0x2
#define SPR_INTERRUPT_MASK_RESET_3__MASK_1_FIELD 1,1

#define SPR_INTERRUPT_MASK_RESET_3__MASK_2_SHIFT 2
#define SPR_INTERRUPT_MASK_RESET_3__MASK_2_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_2_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_2_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_2_MASK  0x4
#define SPR_INTERRUPT_MASK_RESET_3__MASK_2_FIELD 2,2

#define SPR_INTERRUPT_MASK_RESET_3__MASK_3_SHIFT 3
#define SPR_INTERRUPT_MASK_RESET_3__MASK_3_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_3_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_3_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_3_MASK  0x8
#define SPR_INTERRUPT_MASK_RESET_3__MASK_3_FIELD 3,3

#define SPR_INTERRUPT_MASK_RESET_3__MASK_4_SHIFT 4
#define SPR_INTERRUPT_MASK_RESET_3__MASK_4_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_4_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_4_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_4_MASK  0x10
#define SPR_INTERRUPT_MASK_RESET_3__MASK_4_FIELD 4,4

#define SPR_INTERRUPT_MASK_RESET_3__MASK_5_SHIFT 5
#define SPR_INTERRUPT_MASK_RESET_3__MASK_5_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_5_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_5_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_5_MASK  0x20
#define SPR_INTERRUPT_MASK_RESET_3__MASK_5_FIELD 5,5

#define SPR_INTERRUPT_MASK_RESET_3__MASK_6_SHIFT 6
#define SPR_INTERRUPT_MASK_RESET_3__MASK_6_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_6_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_6_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_6_MASK  0x40
#define SPR_INTERRUPT_MASK_RESET_3__MASK_6_FIELD 6,6

#define SPR_INTERRUPT_MASK_RESET_3__MASK_20_SHIFT 20
#define SPR_INTERRUPT_MASK_RESET_3__MASK_20_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_20_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_20_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_20_MASK  0x100000
#define SPR_INTERRUPT_MASK_RESET_3__MASK_20_FIELD 20,20

#define SPR_INTERRUPT_MASK_RESET_3__MASK_21_SHIFT 21
#define SPR_INTERRUPT_MASK_RESET_3__MASK_21_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_21_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_21_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_21_MASK  0x200000
#define SPR_INTERRUPT_MASK_RESET_3__MASK_21_FIELD 21,21

#define SPR_INTERRUPT_MASK_RESET_3__MASK_22_SHIFT 22
#define SPR_INTERRUPT_MASK_RESET_3__MASK_22_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_22_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_22_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_22_MASK  0x400000
#define SPR_INTERRUPT_MASK_RESET_3__MASK_22_FIELD 22,22

#define SPR_INTERRUPT_MASK_RESET_3__MASK_23_SHIFT 23
#define SPR_INTERRUPT_MASK_RESET_3__MASK_23_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_23_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_23_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_23_MASK  0x800000
#define SPR_INTERRUPT_MASK_RESET_3__MASK_23_FIELD 23,23

#define SPR_INTERRUPT_MASK_RESET_3__MASK_24_SHIFT 24
#define SPR_INTERRUPT_MASK_RESET_3__MASK_24_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_24_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_24_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_24_MASK  0x1000000
#define SPR_INTERRUPT_MASK_RESET_3__MASK_24_FIELD 24,24

#define SPR_INTERRUPT_MASK_RESET_3__MASK_25_SHIFT 25
#define SPR_INTERRUPT_MASK_RESET_3__MASK_25_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_25_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_25_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_25_MASK  0x2000000
#define SPR_INTERRUPT_MASK_RESET_3__MASK_25_FIELD 25,25

#define SPR_INTERRUPT_MASK_RESET_3__MASK_26_SHIFT 26
#define SPR_INTERRUPT_MASK_RESET_3__MASK_26_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_26_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_26_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_26_MASK  0x4000000
#define SPR_INTERRUPT_MASK_RESET_3__MASK_26_FIELD 26,26

#define SPR_INTERRUPT_MASK_RESET_3__MASK_27_SHIFT 27
#define SPR_INTERRUPT_MASK_RESET_3__MASK_27_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_27_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_27_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_27_MASK  0x8000000
#define SPR_INTERRUPT_MASK_RESET_3__MASK_27_FIELD 27,27

#define SPR_INTERRUPT_MASK_RESET_3__MASK_28_SHIFT 28
#define SPR_INTERRUPT_MASK_RESET_3__MASK_28_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_28_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_28_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_28_MASK  0x10000000
#define SPR_INTERRUPT_MASK_RESET_3__MASK_28_FIELD 28,28

#define SPR_INTERRUPT_MASK_RESET_3__MASK_29_SHIFT 29
#define SPR_INTERRUPT_MASK_RESET_3__MASK_29_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_29_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_29_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_29_MASK  0x20000000
#define SPR_INTERRUPT_MASK_RESET_3__MASK_29_FIELD 29,29

#define SPR_INTERRUPT_MASK_RESET_3__MASK_30_SHIFT 30
#define SPR_INTERRUPT_MASK_RESET_3__MASK_30_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_30_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_30_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_30_MASK  0x40000000
#define SPR_INTERRUPT_MASK_RESET_3__MASK_30_FIELD 30,30

#define SPR_INTERRUPT_MASK_RESET_3__MASK_31_SHIFT 31
#define SPR_INTERRUPT_MASK_RESET_3__MASK_31_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_31_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_31_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_31_MASK  0x80000000
#define SPR_INTERRUPT_MASK_RESET_3__MASK_31_FIELD 31,31

#define SPR_INTERRUPT_MASK_RESET_3__MASK_32_SHIFT 32
#define SPR_INTERRUPT_MASK_RESET_3__MASK_32_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_32_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_32_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_32_MASK  _64bit(0x100000000)
#define SPR_INTERRUPT_MASK_RESET_3__MASK_32_FIELD 32,32

#define SPR_INTERRUPT_MASK_RESET_3__MASK_33_SHIFT 33
#define SPR_INTERRUPT_MASK_RESET_3__MASK_33_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_33_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_33_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_33_MASK  _64bit(0x200000000)
#define SPR_INTERRUPT_MASK_RESET_3__MASK_33_FIELD 33,33

#define SPR_INTERRUPT_MASK_RESET_3__MASK_34_SHIFT 34
#define SPR_INTERRUPT_MASK_RESET_3__MASK_34_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_34_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_34_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_34_MASK  _64bit(0x400000000)
#define SPR_INTERRUPT_MASK_RESET_3__MASK_34_FIELD 34,34

#define SPR_INTERRUPT_MASK_RESET_3__MASK_35_SHIFT 35
#define SPR_INTERRUPT_MASK_RESET_3__MASK_35_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_35_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_35_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_35_MASK  _64bit(0x800000000)
#define SPR_INTERRUPT_MASK_RESET_3__MASK_35_FIELD 35,35

#define SPR_INTERRUPT_MASK_RESET_3__MASK_36_SHIFT 36
#define SPR_INTERRUPT_MASK_RESET_3__MASK_36_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_36_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_36_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_36_MASK  _64bit(0x1000000000)
#define SPR_INTERRUPT_MASK_RESET_3__MASK_36_FIELD 36,36

#define SPR_INTERRUPT_MASK_RESET_3__MASK_37_SHIFT 37
#define SPR_INTERRUPT_MASK_RESET_3__MASK_37_WIDTH 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_37_RESET_VAL 1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_37_RMASK 0x1
#define SPR_INTERRUPT_MASK_RESET_3__MASK_37_MASK  _64bit(0x2000000000)
#define SPR_INTERRUPT_MASK_RESET_3__MASK_37_FIELD 37,37


/*
 * Interrupt Mask Protection Level 0.
 * This register specifies the interrupt mask for protection level 0.  This
 * register is used to mask interrupts.  Writing a value of one to a bit
 * position sets the interrupt mask for that location.  Writing a value of
 * zero to a bit position has no effect.  This is a set register.
 */
#define SPR_INTERRUPT_MASK_SET_0 0x2508

#define SPR_INTERRUPT_MASK_SET_0__MASK_0_SHIFT 0
#define SPR_INTERRUPT_MASK_SET_0__MASK_0_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_0_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_0_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_0_MASK  0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_0_FIELD 0,0

#define SPR_INTERRUPT_MASK_SET_0__MASK_1_SHIFT 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_1_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_1_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_1_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_1_MASK  0x2
#define SPR_INTERRUPT_MASK_SET_0__MASK_1_FIELD 1,1

#define SPR_INTERRUPT_MASK_SET_0__MASK_2_SHIFT 2
#define SPR_INTERRUPT_MASK_SET_0__MASK_2_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_2_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_2_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_2_MASK  0x4
#define SPR_INTERRUPT_MASK_SET_0__MASK_2_FIELD 2,2

#define SPR_INTERRUPT_MASK_SET_0__MASK_3_SHIFT 3
#define SPR_INTERRUPT_MASK_SET_0__MASK_3_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_3_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_3_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_3_MASK  0x8
#define SPR_INTERRUPT_MASK_SET_0__MASK_3_FIELD 3,3

#define SPR_INTERRUPT_MASK_SET_0__MASK_4_SHIFT 4
#define SPR_INTERRUPT_MASK_SET_0__MASK_4_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_4_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_4_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_4_MASK  0x10
#define SPR_INTERRUPT_MASK_SET_0__MASK_4_FIELD 4,4

#define SPR_INTERRUPT_MASK_SET_0__MASK_5_SHIFT 5
#define SPR_INTERRUPT_MASK_SET_0__MASK_5_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_5_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_5_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_5_MASK  0x20
#define SPR_INTERRUPT_MASK_SET_0__MASK_5_FIELD 5,5

#define SPR_INTERRUPT_MASK_SET_0__MASK_6_SHIFT 6
#define SPR_INTERRUPT_MASK_SET_0__MASK_6_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_6_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_6_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_6_MASK  0x40
#define SPR_INTERRUPT_MASK_SET_0__MASK_6_FIELD 6,6

#define SPR_INTERRUPT_MASK_SET_0__MASK_20_SHIFT 20
#define SPR_INTERRUPT_MASK_SET_0__MASK_20_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_20_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_20_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_20_MASK  0x100000
#define SPR_INTERRUPT_MASK_SET_0__MASK_20_FIELD 20,20

#define SPR_INTERRUPT_MASK_SET_0__MASK_21_SHIFT 21
#define SPR_INTERRUPT_MASK_SET_0__MASK_21_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_21_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_21_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_21_MASK  0x200000
#define SPR_INTERRUPT_MASK_SET_0__MASK_21_FIELD 21,21

#define SPR_INTERRUPT_MASK_SET_0__MASK_22_SHIFT 22
#define SPR_INTERRUPT_MASK_SET_0__MASK_22_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_22_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_22_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_22_MASK  0x400000
#define SPR_INTERRUPT_MASK_SET_0__MASK_22_FIELD 22,22

#define SPR_INTERRUPT_MASK_SET_0__MASK_23_SHIFT 23
#define SPR_INTERRUPT_MASK_SET_0__MASK_23_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_23_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_23_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_23_MASK  0x800000
#define SPR_INTERRUPT_MASK_SET_0__MASK_23_FIELD 23,23

#define SPR_INTERRUPT_MASK_SET_0__MASK_24_SHIFT 24
#define SPR_INTERRUPT_MASK_SET_0__MASK_24_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_24_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_24_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_24_MASK  0x1000000
#define SPR_INTERRUPT_MASK_SET_0__MASK_24_FIELD 24,24

#define SPR_INTERRUPT_MASK_SET_0__MASK_25_SHIFT 25
#define SPR_INTERRUPT_MASK_SET_0__MASK_25_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_25_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_25_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_25_MASK  0x2000000
#define SPR_INTERRUPT_MASK_SET_0__MASK_25_FIELD 25,25

#define SPR_INTERRUPT_MASK_SET_0__MASK_26_SHIFT 26
#define SPR_INTERRUPT_MASK_SET_0__MASK_26_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_26_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_26_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_26_MASK  0x4000000
#define SPR_INTERRUPT_MASK_SET_0__MASK_26_FIELD 26,26

#define SPR_INTERRUPT_MASK_SET_0__MASK_27_SHIFT 27
#define SPR_INTERRUPT_MASK_SET_0__MASK_27_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_27_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_27_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_27_MASK  0x8000000
#define SPR_INTERRUPT_MASK_SET_0__MASK_27_FIELD 27,27

#define SPR_INTERRUPT_MASK_SET_0__MASK_28_SHIFT 28
#define SPR_INTERRUPT_MASK_SET_0__MASK_28_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_28_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_28_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_28_MASK  0x10000000
#define SPR_INTERRUPT_MASK_SET_0__MASK_28_FIELD 28,28

#define SPR_INTERRUPT_MASK_SET_0__MASK_29_SHIFT 29
#define SPR_INTERRUPT_MASK_SET_0__MASK_29_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_29_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_29_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_29_MASK  0x20000000
#define SPR_INTERRUPT_MASK_SET_0__MASK_29_FIELD 29,29

#define SPR_INTERRUPT_MASK_SET_0__MASK_30_SHIFT 30
#define SPR_INTERRUPT_MASK_SET_0__MASK_30_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_30_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_30_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_30_MASK  0x40000000
#define SPR_INTERRUPT_MASK_SET_0__MASK_30_FIELD 30,30

#define SPR_INTERRUPT_MASK_SET_0__MASK_31_SHIFT 31
#define SPR_INTERRUPT_MASK_SET_0__MASK_31_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_31_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_31_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_31_MASK  0x80000000
#define SPR_INTERRUPT_MASK_SET_0__MASK_31_FIELD 31,31

#define SPR_INTERRUPT_MASK_SET_0__MASK_32_SHIFT 32
#define SPR_INTERRUPT_MASK_SET_0__MASK_32_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_32_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_32_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_32_MASK  _64bit(0x100000000)
#define SPR_INTERRUPT_MASK_SET_0__MASK_32_FIELD 32,32

#define SPR_INTERRUPT_MASK_SET_0__MASK_33_SHIFT 33
#define SPR_INTERRUPT_MASK_SET_0__MASK_33_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_33_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_33_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_33_MASK  _64bit(0x200000000)
#define SPR_INTERRUPT_MASK_SET_0__MASK_33_FIELD 33,33

#define SPR_INTERRUPT_MASK_SET_0__MASK_34_SHIFT 34
#define SPR_INTERRUPT_MASK_SET_0__MASK_34_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_34_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_34_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_34_MASK  _64bit(0x400000000)
#define SPR_INTERRUPT_MASK_SET_0__MASK_34_FIELD 34,34

#define SPR_INTERRUPT_MASK_SET_0__MASK_35_SHIFT 35
#define SPR_INTERRUPT_MASK_SET_0__MASK_35_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_35_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_35_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_35_MASK  _64bit(0x800000000)
#define SPR_INTERRUPT_MASK_SET_0__MASK_35_FIELD 35,35

#define SPR_INTERRUPT_MASK_SET_0__MASK_36_SHIFT 36
#define SPR_INTERRUPT_MASK_SET_0__MASK_36_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_36_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_36_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_36_MASK  _64bit(0x1000000000)
#define SPR_INTERRUPT_MASK_SET_0__MASK_36_FIELD 36,36

#define SPR_INTERRUPT_MASK_SET_0__MASK_37_SHIFT 37
#define SPR_INTERRUPT_MASK_SET_0__MASK_37_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_37_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_0__MASK_37_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_0__MASK_37_MASK  _64bit(0x2000000000)
#define SPR_INTERRUPT_MASK_SET_0__MASK_37_FIELD 37,37


/*
 * Interrupt Mask Protection Level 1.
 * This register specifies the interrupt mask for protection level 1.  This
 * register is used to mask interrupts.  Writing a value of one to a bit
 * position sets the interrupt mask for that location.  Writing a value of
 * zero to a bit position has no effect.  This is a set register.
 */
#define SPR_INTERRUPT_MASK_SET_1 0x2408

#define SPR_INTERRUPT_MASK_SET_1__MASK_0_SHIFT 0
#define SPR_INTERRUPT_MASK_SET_1__MASK_0_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_0_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_0_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_0_MASK  0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_0_FIELD 0,0

#define SPR_INTERRUPT_MASK_SET_1__MASK_1_SHIFT 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_1_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_1_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_1_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_1_MASK  0x2
#define SPR_INTERRUPT_MASK_SET_1__MASK_1_FIELD 1,1

#define SPR_INTERRUPT_MASK_SET_1__MASK_2_SHIFT 2
#define SPR_INTERRUPT_MASK_SET_1__MASK_2_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_2_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_2_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_2_MASK  0x4
#define SPR_INTERRUPT_MASK_SET_1__MASK_2_FIELD 2,2

#define SPR_INTERRUPT_MASK_SET_1__MASK_3_SHIFT 3
#define SPR_INTERRUPT_MASK_SET_1__MASK_3_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_3_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_3_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_3_MASK  0x8
#define SPR_INTERRUPT_MASK_SET_1__MASK_3_FIELD 3,3

#define SPR_INTERRUPT_MASK_SET_1__MASK_4_SHIFT 4
#define SPR_INTERRUPT_MASK_SET_1__MASK_4_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_4_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_4_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_4_MASK  0x10
#define SPR_INTERRUPT_MASK_SET_1__MASK_4_FIELD 4,4

#define SPR_INTERRUPT_MASK_SET_1__MASK_5_SHIFT 5
#define SPR_INTERRUPT_MASK_SET_1__MASK_5_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_5_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_5_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_5_MASK  0x20
#define SPR_INTERRUPT_MASK_SET_1__MASK_5_FIELD 5,5

#define SPR_INTERRUPT_MASK_SET_1__MASK_6_SHIFT 6
#define SPR_INTERRUPT_MASK_SET_1__MASK_6_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_6_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_6_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_6_MASK  0x40
#define SPR_INTERRUPT_MASK_SET_1__MASK_6_FIELD 6,6

#define SPR_INTERRUPT_MASK_SET_1__MASK_20_SHIFT 20
#define SPR_INTERRUPT_MASK_SET_1__MASK_20_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_20_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_20_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_20_MASK  0x100000
#define SPR_INTERRUPT_MASK_SET_1__MASK_20_FIELD 20,20

#define SPR_INTERRUPT_MASK_SET_1__MASK_21_SHIFT 21
#define SPR_INTERRUPT_MASK_SET_1__MASK_21_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_21_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_21_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_21_MASK  0x200000
#define SPR_INTERRUPT_MASK_SET_1__MASK_21_FIELD 21,21

#define SPR_INTERRUPT_MASK_SET_1__MASK_22_SHIFT 22
#define SPR_INTERRUPT_MASK_SET_1__MASK_22_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_22_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_22_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_22_MASK  0x400000
#define SPR_INTERRUPT_MASK_SET_1__MASK_22_FIELD 22,22

#define SPR_INTERRUPT_MASK_SET_1__MASK_23_SHIFT 23
#define SPR_INTERRUPT_MASK_SET_1__MASK_23_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_23_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_23_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_23_MASK  0x800000
#define SPR_INTERRUPT_MASK_SET_1__MASK_23_FIELD 23,23

#define SPR_INTERRUPT_MASK_SET_1__MASK_24_SHIFT 24
#define SPR_INTERRUPT_MASK_SET_1__MASK_24_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_24_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_24_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_24_MASK  0x1000000
#define SPR_INTERRUPT_MASK_SET_1__MASK_24_FIELD 24,24

#define SPR_INTERRUPT_MASK_SET_1__MASK_25_SHIFT 25
#define SPR_INTERRUPT_MASK_SET_1__MASK_25_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_25_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_25_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_25_MASK  0x2000000
#define SPR_INTERRUPT_MASK_SET_1__MASK_25_FIELD 25,25

#define SPR_INTERRUPT_MASK_SET_1__MASK_26_SHIFT 26
#define SPR_INTERRUPT_MASK_SET_1__MASK_26_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_26_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_26_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_26_MASK  0x4000000
#define SPR_INTERRUPT_MASK_SET_1__MASK_26_FIELD 26,26

#define SPR_INTERRUPT_MASK_SET_1__MASK_27_SHIFT 27
#define SPR_INTERRUPT_MASK_SET_1__MASK_27_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_27_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_27_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_27_MASK  0x8000000
#define SPR_INTERRUPT_MASK_SET_1__MASK_27_FIELD 27,27

#define SPR_INTERRUPT_MASK_SET_1__MASK_28_SHIFT 28
#define SPR_INTERRUPT_MASK_SET_1__MASK_28_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_28_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_28_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_28_MASK  0x10000000
#define SPR_INTERRUPT_MASK_SET_1__MASK_28_FIELD 28,28

#define SPR_INTERRUPT_MASK_SET_1__MASK_29_SHIFT 29
#define SPR_INTERRUPT_MASK_SET_1__MASK_29_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_29_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_29_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_29_MASK  0x20000000
#define SPR_INTERRUPT_MASK_SET_1__MASK_29_FIELD 29,29

#define SPR_INTERRUPT_MASK_SET_1__MASK_30_SHIFT 30
#define SPR_INTERRUPT_MASK_SET_1__MASK_30_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_30_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_30_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_30_MASK  0x40000000
#define SPR_INTERRUPT_MASK_SET_1__MASK_30_FIELD 30,30

#define SPR_INTERRUPT_MASK_SET_1__MASK_31_SHIFT 31
#define SPR_INTERRUPT_MASK_SET_1__MASK_31_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_31_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_31_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_31_MASK  0x80000000
#define SPR_INTERRUPT_MASK_SET_1__MASK_31_FIELD 31,31

#define SPR_INTERRUPT_MASK_SET_1__MASK_32_SHIFT 32
#define SPR_INTERRUPT_MASK_SET_1__MASK_32_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_32_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_32_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_32_MASK  _64bit(0x100000000)
#define SPR_INTERRUPT_MASK_SET_1__MASK_32_FIELD 32,32

#define SPR_INTERRUPT_MASK_SET_1__MASK_33_SHIFT 33
#define SPR_INTERRUPT_MASK_SET_1__MASK_33_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_33_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_33_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_33_MASK  _64bit(0x200000000)
#define SPR_INTERRUPT_MASK_SET_1__MASK_33_FIELD 33,33

#define SPR_INTERRUPT_MASK_SET_1__MASK_34_SHIFT 34
#define SPR_INTERRUPT_MASK_SET_1__MASK_34_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_34_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_34_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_34_MASK  _64bit(0x400000000)
#define SPR_INTERRUPT_MASK_SET_1__MASK_34_FIELD 34,34

#define SPR_INTERRUPT_MASK_SET_1__MASK_35_SHIFT 35
#define SPR_INTERRUPT_MASK_SET_1__MASK_35_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_35_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_35_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_35_MASK  _64bit(0x800000000)
#define SPR_INTERRUPT_MASK_SET_1__MASK_35_FIELD 35,35

#define SPR_INTERRUPT_MASK_SET_1__MASK_36_SHIFT 36
#define SPR_INTERRUPT_MASK_SET_1__MASK_36_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_36_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_36_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_36_MASK  _64bit(0x1000000000)
#define SPR_INTERRUPT_MASK_SET_1__MASK_36_FIELD 36,36

#define SPR_INTERRUPT_MASK_SET_1__MASK_37_SHIFT 37
#define SPR_INTERRUPT_MASK_SET_1__MASK_37_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_37_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_1__MASK_37_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_1__MASK_37_MASK  _64bit(0x2000000000)
#define SPR_INTERRUPT_MASK_SET_1__MASK_37_FIELD 37,37


/*
 * Interrupt Mask Protection Level 2.
 * This register specifies the interrupt mask for protection level 2.  This
 * register is used to mask interrupts.  Writing a value of one to a bit
 * position sets the interrupt mask for that location.  Writing a value of
 * zero to a bit position has no effect.  This is a set register.
 */
#define SPR_INTERRUPT_MASK_SET_2 0x2308

#define SPR_INTERRUPT_MASK_SET_2__MASK_0_SHIFT 0
#define SPR_INTERRUPT_MASK_SET_2__MASK_0_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_0_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_0_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_0_MASK  0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_0_FIELD 0,0

#define SPR_INTERRUPT_MASK_SET_2__MASK_1_SHIFT 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_1_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_1_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_1_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_1_MASK  0x2
#define SPR_INTERRUPT_MASK_SET_2__MASK_1_FIELD 1,1

#define SPR_INTERRUPT_MASK_SET_2__MASK_2_SHIFT 2
#define SPR_INTERRUPT_MASK_SET_2__MASK_2_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_2_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_2_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_2_MASK  0x4
#define SPR_INTERRUPT_MASK_SET_2__MASK_2_FIELD 2,2

#define SPR_INTERRUPT_MASK_SET_2__MASK_3_SHIFT 3
#define SPR_INTERRUPT_MASK_SET_2__MASK_3_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_3_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_3_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_3_MASK  0x8
#define SPR_INTERRUPT_MASK_SET_2__MASK_3_FIELD 3,3

#define SPR_INTERRUPT_MASK_SET_2__MASK_4_SHIFT 4
#define SPR_INTERRUPT_MASK_SET_2__MASK_4_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_4_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_4_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_4_MASK  0x10
#define SPR_INTERRUPT_MASK_SET_2__MASK_4_FIELD 4,4

#define SPR_INTERRUPT_MASK_SET_2__MASK_5_SHIFT 5
#define SPR_INTERRUPT_MASK_SET_2__MASK_5_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_5_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_5_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_5_MASK  0x20
#define SPR_INTERRUPT_MASK_SET_2__MASK_5_FIELD 5,5

#define SPR_INTERRUPT_MASK_SET_2__MASK_6_SHIFT 6
#define SPR_INTERRUPT_MASK_SET_2__MASK_6_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_6_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_6_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_6_MASK  0x40
#define SPR_INTERRUPT_MASK_SET_2__MASK_6_FIELD 6,6

#define SPR_INTERRUPT_MASK_SET_2__MASK_20_SHIFT 20
#define SPR_INTERRUPT_MASK_SET_2__MASK_20_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_20_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_20_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_20_MASK  0x100000
#define SPR_INTERRUPT_MASK_SET_2__MASK_20_FIELD 20,20

#define SPR_INTERRUPT_MASK_SET_2__MASK_21_SHIFT 21
#define SPR_INTERRUPT_MASK_SET_2__MASK_21_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_21_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_21_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_21_MASK  0x200000
#define SPR_INTERRUPT_MASK_SET_2__MASK_21_FIELD 21,21

#define SPR_INTERRUPT_MASK_SET_2__MASK_22_SHIFT 22
#define SPR_INTERRUPT_MASK_SET_2__MASK_22_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_22_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_22_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_22_MASK  0x400000
#define SPR_INTERRUPT_MASK_SET_2__MASK_22_FIELD 22,22

#define SPR_INTERRUPT_MASK_SET_2__MASK_23_SHIFT 23
#define SPR_INTERRUPT_MASK_SET_2__MASK_23_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_23_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_23_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_23_MASK  0x800000
#define SPR_INTERRUPT_MASK_SET_2__MASK_23_FIELD 23,23

#define SPR_INTERRUPT_MASK_SET_2__MASK_24_SHIFT 24
#define SPR_INTERRUPT_MASK_SET_2__MASK_24_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_24_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_24_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_24_MASK  0x1000000
#define SPR_INTERRUPT_MASK_SET_2__MASK_24_FIELD 24,24

#define SPR_INTERRUPT_MASK_SET_2__MASK_25_SHIFT 25
#define SPR_INTERRUPT_MASK_SET_2__MASK_25_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_25_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_25_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_25_MASK  0x2000000
#define SPR_INTERRUPT_MASK_SET_2__MASK_25_FIELD 25,25

#define SPR_INTERRUPT_MASK_SET_2__MASK_26_SHIFT 26
#define SPR_INTERRUPT_MASK_SET_2__MASK_26_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_26_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_26_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_26_MASK  0x4000000
#define SPR_INTERRUPT_MASK_SET_2__MASK_26_FIELD 26,26

#define SPR_INTERRUPT_MASK_SET_2__MASK_27_SHIFT 27
#define SPR_INTERRUPT_MASK_SET_2__MASK_27_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_27_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_27_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_27_MASK  0x8000000
#define SPR_INTERRUPT_MASK_SET_2__MASK_27_FIELD 27,27

#define SPR_INTERRUPT_MASK_SET_2__MASK_28_SHIFT 28
#define SPR_INTERRUPT_MASK_SET_2__MASK_28_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_28_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_28_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_28_MASK  0x10000000
#define SPR_INTERRUPT_MASK_SET_2__MASK_28_FIELD 28,28

#define SPR_INTERRUPT_MASK_SET_2__MASK_29_SHIFT 29
#define SPR_INTERRUPT_MASK_SET_2__MASK_29_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_29_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_29_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_29_MASK  0x20000000
#define SPR_INTERRUPT_MASK_SET_2__MASK_29_FIELD 29,29

#define SPR_INTERRUPT_MASK_SET_2__MASK_30_SHIFT 30
#define SPR_INTERRUPT_MASK_SET_2__MASK_30_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_30_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_30_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_30_MASK  0x40000000
#define SPR_INTERRUPT_MASK_SET_2__MASK_30_FIELD 30,30

#define SPR_INTERRUPT_MASK_SET_2__MASK_31_SHIFT 31
#define SPR_INTERRUPT_MASK_SET_2__MASK_31_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_31_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_31_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_31_MASK  0x80000000
#define SPR_INTERRUPT_MASK_SET_2__MASK_31_FIELD 31,31

#define SPR_INTERRUPT_MASK_SET_2__MASK_32_SHIFT 32
#define SPR_INTERRUPT_MASK_SET_2__MASK_32_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_32_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_32_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_32_MASK  _64bit(0x100000000)
#define SPR_INTERRUPT_MASK_SET_2__MASK_32_FIELD 32,32

#define SPR_INTERRUPT_MASK_SET_2__MASK_33_SHIFT 33
#define SPR_INTERRUPT_MASK_SET_2__MASK_33_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_33_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_33_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_33_MASK  _64bit(0x200000000)
#define SPR_INTERRUPT_MASK_SET_2__MASK_33_FIELD 33,33

#define SPR_INTERRUPT_MASK_SET_2__MASK_34_SHIFT 34
#define SPR_INTERRUPT_MASK_SET_2__MASK_34_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_34_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_34_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_34_MASK  _64bit(0x400000000)
#define SPR_INTERRUPT_MASK_SET_2__MASK_34_FIELD 34,34

#define SPR_INTERRUPT_MASK_SET_2__MASK_35_SHIFT 35
#define SPR_INTERRUPT_MASK_SET_2__MASK_35_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_35_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_35_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_35_MASK  _64bit(0x800000000)
#define SPR_INTERRUPT_MASK_SET_2__MASK_35_FIELD 35,35

#define SPR_INTERRUPT_MASK_SET_2__MASK_36_SHIFT 36
#define SPR_INTERRUPT_MASK_SET_2__MASK_36_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_36_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_36_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_36_MASK  _64bit(0x1000000000)
#define SPR_INTERRUPT_MASK_SET_2__MASK_36_FIELD 36,36

#define SPR_INTERRUPT_MASK_SET_2__MASK_37_SHIFT 37
#define SPR_INTERRUPT_MASK_SET_2__MASK_37_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_37_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_2__MASK_37_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_2__MASK_37_MASK  _64bit(0x2000000000)
#define SPR_INTERRUPT_MASK_SET_2__MASK_37_FIELD 37,37


/*
 * Interrupt Mask Protection Level 3.
 * This register specifies the interrupt mask for protection level 3.  This
 * register is used to mask interrupts.  Writing a value of one to a bit
 * position sets the interrupt mask for that location.  Writing a value of
 * zero to a bit position has no effect.  This is a set register.
 */
#define SPR_INTERRUPT_MASK_SET_3 0x2208

#define SPR_INTERRUPT_MASK_SET_3__MASK_0_SHIFT 0
#define SPR_INTERRUPT_MASK_SET_3__MASK_0_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_0_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_0_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_0_MASK  0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_0_FIELD 0,0

#define SPR_INTERRUPT_MASK_SET_3__MASK_1_SHIFT 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_1_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_1_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_1_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_1_MASK  0x2
#define SPR_INTERRUPT_MASK_SET_3__MASK_1_FIELD 1,1

#define SPR_INTERRUPT_MASK_SET_3__MASK_2_SHIFT 2
#define SPR_INTERRUPT_MASK_SET_3__MASK_2_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_2_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_2_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_2_MASK  0x4
#define SPR_INTERRUPT_MASK_SET_3__MASK_2_FIELD 2,2

#define SPR_INTERRUPT_MASK_SET_3__MASK_3_SHIFT 3
#define SPR_INTERRUPT_MASK_SET_3__MASK_3_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_3_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_3_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_3_MASK  0x8
#define SPR_INTERRUPT_MASK_SET_3__MASK_3_FIELD 3,3

#define SPR_INTERRUPT_MASK_SET_3__MASK_4_SHIFT 4
#define SPR_INTERRUPT_MASK_SET_3__MASK_4_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_4_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_4_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_4_MASK  0x10
#define SPR_INTERRUPT_MASK_SET_3__MASK_4_FIELD 4,4

#define SPR_INTERRUPT_MASK_SET_3__MASK_5_SHIFT 5
#define SPR_INTERRUPT_MASK_SET_3__MASK_5_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_5_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_5_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_5_MASK  0x20
#define SPR_INTERRUPT_MASK_SET_3__MASK_5_FIELD 5,5

#define SPR_INTERRUPT_MASK_SET_3__MASK_6_SHIFT 6
#define SPR_INTERRUPT_MASK_SET_3__MASK_6_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_6_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_6_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_6_MASK  0x40
#define SPR_INTERRUPT_MASK_SET_3__MASK_6_FIELD 6,6

#define SPR_INTERRUPT_MASK_SET_3__MASK_20_SHIFT 20
#define SPR_INTERRUPT_MASK_SET_3__MASK_20_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_20_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_20_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_20_MASK  0x100000
#define SPR_INTERRUPT_MASK_SET_3__MASK_20_FIELD 20,20

#define SPR_INTERRUPT_MASK_SET_3__MASK_21_SHIFT 21
#define SPR_INTERRUPT_MASK_SET_3__MASK_21_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_21_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_21_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_21_MASK  0x200000
#define SPR_INTERRUPT_MASK_SET_3__MASK_21_FIELD 21,21

#define SPR_INTERRUPT_MASK_SET_3__MASK_22_SHIFT 22
#define SPR_INTERRUPT_MASK_SET_3__MASK_22_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_22_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_22_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_22_MASK  0x400000
#define SPR_INTERRUPT_MASK_SET_3__MASK_22_FIELD 22,22

#define SPR_INTERRUPT_MASK_SET_3__MASK_23_SHIFT 23
#define SPR_INTERRUPT_MASK_SET_3__MASK_23_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_23_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_23_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_23_MASK  0x800000
#define SPR_INTERRUPT_MASK_SET_3__MASK_23_FIELD 23,23

#define SPR_INTERRUPT_MASK_SET_3__MASK_24_SHIFT 24
#define SPR_INTERRUPT_MASK_SET_3__MASK_24_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_24_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_24_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_24_MASK  0x1000000
#define SPR_INTERRUPT_MASK_SET_3__MASK_24_FIELD 24,24

#define SPR_INTERRUPT_MASK_SET_3__MASK_25_SHIFT 25
#define SPR_INTERRUPT_MASK_SET_3__MASK_25_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_25_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_25_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_25_MASK  0x2000000
#define SPR_INTERRUPT_MASK_SET_3__MASK_25_FIELD 25,25

#define SPR_INTERRUPT_MASK_SET_3__MASK_26_SHIFT 26
#define SPR_INTERRUPT_MASK_SET_3__MASK_26_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_26_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_26_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_26_MASK  0x4000000
#define SPR_INTERRUPT_MASK_SET_3__MASK_26_FIELD 26,26

#define SPR_INTERRUPT_MASK_SET_3__MASK_27_SHIFT 27
#define SPR_INTERRUPT_MASK_SET_3__MASK_27_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_27_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_27_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_27_MASK  0x8000000
#define SPR_INTERRUPT_MASK_SET_3__MASK_27_FIELD 27,27

#define SPR_INTERRUPT_MASK_SET_3__MASK_28_SHIFT 28
#define SPR_INTERRUPT_MASK_SET_3__MASK_28_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_28_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_28_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_28_MASK  0x10000000
#define SPR_INTERRUPT_MASK_SET_3__MASK_28_FIELD 28,28

#define SPR_INTERRUPT_MASK_SET_3__MASK_29_SHIFT 29
#define SPR_INTERRUPT_MASK_SET_3__MASK_29_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_29_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_29_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_29_MASK  0x20000000
#define SPR_INTERRUPT_MASK_SET_3__MASK_29_FIELD 29,29

#define SPR_INTERRUPT_MASK_SET_3__MASK_30_SHIFT 30
#define SPR_INTERRUPT_MASK_SET_3__MASK_30_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_30_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_30_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_30_MASK  0x40000000
#define SPR_INTERRUPT_MASK_SET_3__MASK_30_FIELD 30,30

#define SPR_INTERRUPT_MASK_SET_3__MASK_31_SHIFT 31
#define SPR_INTERRUPT_MASK_SET_3__MASK_31_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_31_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_31_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_31_MASK  0x80000000
#define SPR_INTERRUPT_MASK_SET_3__MASK_31_FIELD 31,31

#define SPR_INTERRUPT_MASK_SET_3__MASK_32_SHIFT 32
#define SPR_INTERRUPT_MASK_SET_3__MASK_32_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_32_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_32_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_32_MASK  _64bit(0x100000000)
#define SPR_INTERRUPT_MASK_SET_3__MASK_32_FIELD 32,32

#define SPR_INTERRUPT_MASK_SET_3__MASK_33_SHIFT 33
#define SPR_INTERRUPT_MASK_SET_3__MASK_33_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_33_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_33_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_33_MASK  _64bit(0x200000000)
#define SPR_INTERRUPT_MASK_SET_3__MASK_33_FIELD 33,33

#define SPR_INTERRUPT_MASK_SET_3__MASK_34_SHIFT 34
#define SPR_INTERRUPT_MASK_SET_3__MASK_34_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_34_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_34_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_34_MASK  _64bit(0x400000000)
#define SPR_INTERRUPT_MASK_SET_3__MASK_34_FIELD 34,34

#define SPR_INTERRUPT_MASK_SET_3__MASK_35_SHIFT 35
#define SPR_INTERRUPT_MASK_SET_3__MASK_35_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_35_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_35_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_35_MASK  _64bit(0x800000000)
#define SPR_INTERRUPT_MASK_SET_3__MASK_35_FIELD 35,35

#define SPR_INTERRUPT_MASK_SET_3__MASK_36_SHIFT 36
#define SPR_INTERRUPT_MASK_SET_3__MASK_36_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_36_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_36_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_36_MASK  _64bit(0x1000000000)
#define SPR_INTERRUPT_MASK_SET_3__MASK_36_FIELD 36,36

#define SPR_INTERRUPT_MASK_SET_3__MASK_37_SHIFT 37
#define SPR_INTERRUPT_MASK_SET_3__MASK_37_WIDTH 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_37_RESET_VAL 1
#define SPR_INTERRUPT_MASK_SET_3__MASK_37_RMASK 0x1
#define SPR_INTERRUPT_MASK_SET_3__MASK_37_MASK  _64bit(0x2000000000)
#define SPR_INTERRUPT_MASK_SET_3__MASK_37_FIELD 37,37


/*
 * Interrupt Vector Base Protection Level 0.
 * This register specifies the Base Virtual Address for Interrupt Vectors for
 * protection level 0.  The actual Interrupt Vector Virtual Address is formed
 * by ORing the value in this register with the interrupt number shifted left
 * by 8 bits.
 */
#define SPR_INTERRUPT_VECTOR_BASE_0 0x2509

#define SPR_INTERRUPT_VECTOR_BASE_0__BASE_SHIFT 14
#define SPR_INTERRUPT_VECTOR_BASE_0__BASE_WIDTH 28
#define SPR_INTERRUPT_VECTOR_BASE_0__BASE_RESET_VAL 268431360
#define SPR_INTERRUPT_VECTOR_BASE_0__BASE_RMASK 0xfffffff
#define SPR_INTERRUPT_VECTOR_BASE_0__BASE_MASK  _64bit(0x3ffffffc000)
#define SPR_INTERRUPT_VECTOR_BASE_0__BASE_FIELD 14,41

#define SPR_INTERRUPT_VECTOR_BASE_0__BASE_EXT_SHIFT 42
#define SPR_INTERRUPT_VECTOR_BASE_0__BASE_EXT_WIDTH 22
#define SPR_INTERRUPT_VECTOR_BASE_0__BASE_EXT_RESET_VAL 4194303
#define SPR_INTERRUPT_VECTOR_BASE_0__BASE_EXT_RMASK 0x3fffff
#define SPR_INTERRUPT_VECTOR_BASE_0__BASE_EXT_MASK  _64bit(0xfffffc0000000000)
#define SPR_INTERRUPT_VECTOR_BASE_0__BASE_EXT_FIELD 42,63


/*
 * Interrupt Vector Base Protection Level 1.
 * This register specifies the Base Virtual Address for Interrupt Vectors for
 * protection level 1.  The actual Interrupt Vector Virtual Address is formed
 * by ORing the value in this register with the interrupt number shifted left
 * by 8 bits.
 */
#define SPR_INTERRUPT_VECTOR_BASE_1 0x2409

#define SPR_INTERRUPT_VECTOR_BASE_1__BASE_SHIFT 14
#define SPR_INTERRUPT_VECTOR_BASE_1__BASE_WIDTH 28
#define SPR_INTERRUPT_VECTOR_BASE_1__BASE_RESET_VAL 268432384
#define SPR_INTERRUPT_VECTOR_BASE_1__BASE_RMASK 0xfffffff
#define SPR_INTERRUPT_VECTOR_BASE_1__BASE_MASK  _64bit(0x3ffffffc000)
#define SPR_INTERRUPT_VECTOR_BASE_1__BASE_FIELD 14,41

#define SPR_INTERRUPT_VECTOR_BASE_1__BASE_EXT_SHIFT 42
#define SPR_INTERRUPT_VECTOR_BASE_1__BASE_EXT_WIDTH 22
#define SPR_INTERRUPT_VECTOR_BASE_1__BASE_EXT_RESET_VAL 4194303
#define SPR_INTERRUPT_VECTOR_BASE_1__BASE_EXT_RMASK 0x3fffff
#define SPR_INTERRUPT_VECTOR_BASE_1__BASE_EXT_MASK  _64bit(0xfffffc0000000000)
#define SPR_INTERRUPT_VECTOR_BASE_1__BASE_EXT_FIELD 42,63


/*
 * Interrupt Vector Base Protection Level 2.
 * This register specifies the Base Virtual Address for Interrupt Vectors for
 * protection level 2.  The actual Interrupt Vector Virtual Address is formed
 * by ORing the value in this register with the interrupt number shifted left
 * by 8 bits.
 */
#define SPR_INTERRUPT_VECTOR_BASE_2 0x2309

#define SPR_INTERRUPT_VECTOR_BASE_2__BASE_SHIFT 14
#define SPR_INTERRUPT_VECTOR_BASE_2__BASE_WIDTH 28
#define SPR_INTERRUPT_VECTOR_BASE_2__BASE_RESET_VAL 268433408
#define SPR_INTERRUPT_VECTOR_BASE_2__BASE_RMASK 0xfffffff
#define SPR_INTERRUPT_VECTOR_BASE_2__BASE_MASK  _64bit(0x3ffffffc000)
#define SPR_INTERRUPT_VECTOR_BASE_2__BASE_FIELD 14,41

#define SPR_INTERRUPT_VECTOR_BASE_2__BASE_EXT_SHIFT 42
#define SPR_INTERRUPT_VECTOR_BASE_2__BASE_EXT_WIDTH 22
#define SPR_INTERRUPT_VECTOR_BASE_2__BASE_EXT_RESET_VAL 4194303
#define SPR_INTERRUPT_VECTOR_BASE_2__BASE_EXT_RMASK 0x3fffff
#define SPR_INTERRUPT_VECTOR_BASE_2__BASE_EXT_MASK  _64bit(0xfffffc0000000000)
#define SPR_INTERRUPT_VECTOR_BASE_2__BASE_EXT_FIELD 42,63


/*
 * Interrupt Vector Base Protection Level 3.
 * This register specifies the Base Virtual Address for Interrupt Vectors for
 * protection level 3.  The actual Interrupt Vector Virtual Address is formed
 * by ORing the value in this register with the interrupt number shifted left
 * by 8 bits.
 */
#define SPR_INTERRUPT_VECTOR_BASE_3 0x2209

#define SPR_INTERRUPT_VECTOR_BASE_3__BASE_SHIFT 14
#define SPR_INTERRUPT_VECTOR_BASE_3__BASE_WIDTH 28
#define SPR_INTERRUPT_VECTOR_BASE_3__BASE_RESET_VAL 268434432
#define SPR_INTERRUPT_VECTOR_BASE_3__BASE_RMASK 0xfffffff
#define SPR_INTERRUPT_VECTOR_BASE_3__BASE_MASK  _64bit(0x3ffffffc000)
#define SPR_INTERRUPT_VECTOR_BASE_3__BASE_FIELD 14,41

#define SPR_INTERRUPT_VECTOR_BASE_3__BASE_EXT_SHIFT 42
#define SPR_INTERRUPT_VECTOR_BASE_3__BASE_EXT_WIDTH 22
#define SPR_INTERRUPT_VECTOR_BASE_3__BASE_EXT_RESET_VAL 4194303
#define SPR_INTERRUPT_VECTOR_BASE_3__BASE_EXT_RMASK 0x3fffff
#define SPR_INTERRUPT_VECTOR_BASE_3__BASE_EXT_MASK  _64bit(0xfffffc0000000000)
#define SPR_INTERRUPT_VECTOR_BASE_3__BASE_EXT_FIELD 42,63


/*
 * Interprocessor Interrupt Event 0.
 * This register holds the event status for Interprocessor Interrupt 0.  A
 * one in a bit position indicates that an IPI for that Event has been
 * received.  Each bit of this register is masked by the corresponding bit in
 * IPI_EVENT_MASK_0 SPR.
 */
#define SPR_IPI_EVENT_0 0x1f05

#define SPR_IPI_EVENT_0__EVENT_SHIFT 0
#define SPR_IPI_EVENT_0__EVENT_WIDTH 32
#define SPR_IPI_EVENT_0__EVENT_RESET_VAL 0
#define SPR_IPI_EVENT_0__EVENT_RMASK 0xffffffff
#define SPR_IPI_EVENT_0__EVENT_MASK  0xffffffff
#define SPR_IPI_EVENT_0__EVENT_FIELD 0,31


/*
 * Interprocessor Interrupt Event 1.
 * This register holds the event status for Interprocessor Interrupt 1.  A
 * one in a bit position indicates that an IPI for that Event has been
 * received.  Each bit of this register is masked by the corresponding bit in
 * IPI_EVENT_MASK_1 SPR.
 */
#define SPR_IPI_EVENT_1 0x1e05

#define SPR_IPI_EVENT_1__EVENT_SHIFT 0
#define SPR_IPI_EVENT_1__EVENT_WIDTH 32
#define SPR_IPI_EVENT_1__EVENT_RESET_VAL 0
#define SPR_IPI_EVENT_1__EVENT_RMASK 0xffffffff
#define SPR_IPI_EVENT_1__EVENT_MASK  0xffffffff
#define SPR_IPI_EVENT_1__EVENT_FIELD 0,31


/*
 * Interprocessor Interrupt Event 2.
 * This register holds the event status for Interprocessor Interrupt 2.  A
 * one in a bit position indicates that an IPI for that Event has been
 * received.  Each bit of this register is masked by the corresponding bit in
 * IPI_EVENT_MASK_2 SPR.
 */
#define SPR_IPI_EVENT_2 0x1d05

#define SPR_IPI_EVENT_2__EVENT_SHIFT 0
#define SPR_IPI_EVENT_2__EVENT_WIDTH 32
#define SPR_IPI_EVENT_2__EVENT_RESET_VAL 0
#define SPR_IPI_EVENT_2__EVENT_RMASK 0xffffffff
#define SPR_IPI_EVENT_2__EVENT_MASK  0xffffffff
#define SPR_IPI_EVENT_2__EVENT_FIELD 0,31


/*
 * Interprocessor Interrupt Event 3.
 * This register holds the event status for Interprocessor Interrupt 3.  A
 * one in a bit position indicates that an IPI for that Event has been
 * received.  Each bit of this register is masked by the corresponding bit in
 * IPI_EVENT_MASK_3 SPR.
 */
#define SPR_IPI_EVENT_3 0x1c05

#define SPR_IPI_EVENT_3__EVENT_SHIFT 0
#define SPR_IPI_EVENT_3__EVENT_WIDTH 32
#define SPR_IPI_EVENT_3__EVENT_RESET_VAL 0
#define SPR_IPI_EVENT_3__EVENT_RMASK 0xffffffff
#define SPR_IPI_EVENT_3__EVENT_MASK  0xffffffff
#define SPR_IPI_EVENT_3__EVENT_FIELD 0,31


/*
 * Interprocessor Interrupt Event Reset 0.
 * This register is used to dismiss Interprocessor Interrupt 0 Events.
 * Writing a 1 to a bit position resets the EVENT bit for that position.
 * Writing a 0 has no effect.
 */
#define SPR_IPI_EVENT_RESET_0 0x1f06

#define SPR_IPI_EVENT_RESET_0__EVENT_SHIFT 0
#define SPR_IPI_EVENT_RESET_0__EVENT_WIDTH 32
#define SPR_IPI_EVENT_RESET_0__EVENT_RESET_VAL 0
#define SPR_IPI_EVENT_RESET_0__EVENT_RMASK 0xffffffff
#define SPR_IPI_EVENT_RESET_0__EVENT_MASK  0xffffffff
#define SPR_IPI_EVENT_RESET_0__EVENT_FIELD 0,31


/*
 * Interprocessor Interrupt Event Reset 1.
 * This register is used to dismiss Interprocessor Interrupt 1 Events.
 * Writing a 1 to a bit position resets the EVENT bit for that position.
 * Writing a 0 has no effect.
 */
#define SPR_IPI_EVENT_RESET_1 0x1e06

#define SPR_IPI_EVENT_RESET_1__EVENT_SHIFT 0
#define SPR_IPI_EVENT_RESET_1__EVENT_WIDTH 32
#define SPR_IPI_EVENT_RESET_1__EVENT_RESET_VAL 0
#define SPR_IPI_EVENT_RESET_1__EVENT_RMASK 0xffffffff
#define SPR_IPI_EVENT_RESET_1__EVENT_MASK  0xffffffff
#define SPR_IPI_EVENT_RESET_1__EVENT_FIELD 0,31


/*
 * Interprocessor Interrupt Event Reset 2.
 * This register is used to dismiss Interprocessor Interrupt 2 Events.
 * Writing a 1 to a bit position resets the EVENT bit for that position.
 * Writing a 0 has no effect.
 */
#define SPR_IPI_EVENT_RESET_2 0x1d06

#define SPR_IPI_EVENT_RESET_2__EVENT_SHIFT 0
#define SPR_IPI_EVENT_RESET_2__EVENT_WIDTH 32
#define SPR_IPI_EVENT_RESET_2__EVENT_RESET_VAL 0
#define SPR_IPI_EVENT_RESET_2__EVENT_RMASK 0xffffffff
#define SPR_IPI_EVENT_RESET_2__EVENT_MASK  0xffffffff
#define SPR_IPI_EVENT_RESET_2__EVENT_FIELD 0,31


/*
 * Interprocessor Interrupt Event Reset 3.
 * This register is used to dismiss Interprocessor Interrupt 3 Events.
 * Writing a 1 to a bit position resets the EVENT bit for that position.
 * Writing a 0 has no effect.
 */
#define SPR_IPI_EVENT_RESET_3 0x1c06

#define SPR_IPI_EVENT_RESET_3__EVENT_SHIFT 0
#define SPR_IPI_EVENT_RESET_3__EVENT_WIDTH 32
#define SPR_IPI_EVENT_RESET_3__EVENT_RESET_VAL 0
#define SPR_IPI_EVENT_RESET_3__EVENT_RMASK 0xffffffff
#define SPR_IPI_EVENT_RESET_3__EVENT_MASK  0xffffffff
#define SPR_IPI_EVENT_RESET_3__EVENT_FIELD 0,31


/*
 * Interprocessor Interrupt Event Set 0.
 * This register is used to locally set Interprocessor Interrupt 0 Events
 * (note that Interprocessor Interrupts Events can also be set by remote
 * processors).  Writing a 1 to a bit position sets the EVENT bit for that
 * position.  Writing a 0 has no effect.
 */
#define SPR_IPI_EVENT_SET_0 0x1f07

#define SPR_IPI_EVENT_SET_0__EVENT_SHIFT 0
#define SPR_IPI_EVENT_SET_0__EVENT_WIDTH 32
#define SPR_IPI_EVENT_SET_0__EVENT_RESET_VAL 0
#define SPR_IPI_EVENT_SET_0__EVENT_RMASK 0xffffffff
#define SPR_IPI_EVENT_SET_0__EVENT_MASK  0xffffffff
#define SPR_IPI_EVENT_SET_0__EVENT_FIELD 0,31


/*
 * Interprocessor Interrupt Event Set 1.
 * This register is used to locally set Interprocessor Interrupt 1 Events
 * (note that Interprocessor Interrupts Events can also be set by remote
 * processors).  Writing a 1 to a bit position sets the EVENT bit for that
 * position.  Writing a 0 has no effect.
 */
#define SPR_IPI_EVENT_SET_1 0x1e07

#define SPR_IPI_EVENT_SET_1__EVENT_SHIFT 0
#define SPR_IPI_EVENT_SET_1__EVENT_WIDTH 32
#define SPR_IPI_EVENT_SET_1__EVENT_RESET_VAL 0
#define SPR_IPI_EVENT_SET_1__EVENT_RMASK 0xffffffff
#define SPR_IPI_EVENT_SET_1__EVENT_MASK  0xffffffff
#define SPR_IPI_EVENT_SET_1__EVENT_FIELD 0,31


/*
 * Interprocessor Interrupt Event Set 2.
 * This register is used to locally set Interprocessor Interrupt 2 Events
 * (note that Interprocessor Interrupts Events can also be set by remote
 * processors).  Writing a 1 to a bit position sets the EVENT bit for that
 * position.  Writing a 0 has no effect.
 */
#define SPR_IPI_EVENT_SET_2 0x1d07

#define SPR_IPI_EVENT_SET_2__EVENT_SHIFT 0
#define SPR_IPI_EVENT_SET_2__EVENT_WIDTH 32
#define SPR_IPI_EVENT_SET_2__EVENT_RESET_VAL 0
#define SPR_IPI_EVENT_SET_2__EVENT_RMASK 0xffffffff
#define SPR_IPI_EVENT_SET_2__EVENT_MASK  0xffffffff
#define SPR_IPI_EVENT_SET_2__EVENT_FIELD 0,31


/*
 * Interprocessor Interrupt Event Set 3.
 * This register is used to locally set Interprocessor Interrupt 3 Events
 * (note that Interprocessor Interrupts Events can also be set by remote
 * processors).  Writing a 1 to a bit position sets the EVENT bit for that
 * position.  Writing a 0 has no effect.
 */
#define SPR_IPI_EVENT_SET_3 0x1c07

#define SPR_IPI_EVENT_SET_3__EVENT_SHIFT 0
#define SPR_IPI_EVENT_SET_3__EVENT_WIDTH 32
#define SPR_IPI_EVENT_SET_3__EVENT_RESET_VAL 0
#define SPR_IPI_EVENT_SET_3__EVENT_RMASK 0xffffffff
#define SPR_IPI_EVENT_SET_3__EVENT_MASK  0xffffffff
#define SPR_IPI_EVENT_SET_3__EVENT_FIELD 0,31


/*
 * Interprocessor Interrupt Mask 0.
 * Mask for Interprocessor Interrupt Event 0.  A value of one in a bit
 * position masks the corresponding event interrupt.
 */
#define SPR_IPI_MASK_0 0x1f08

#define SPR_IPI_MASK_0__MASK_SHIFT 0
#define SPR_IPI_MASK_0__MASK_WIDTH 32
#define SPR_IPI_MASK_0__MASK_RESET_VAL 4294967295
#define SPR_IPI_MASK_0__MASK_RMASK 0xffffffff
#define SPR_IPI_MASK_0__MASK_MASK  0xffffffff
#define SPR_IPI_MASK_0__MASK_FIELD 0,31


/*
 * Interprocessor Interrupt Mask 1.
 * Mask for Interprocessor Interrupt Event 1.  A value of one in a bit
 * position masks the corresponding event interrupt.
 */
#define SPR_IPI_MASK_1 0x1e08

#define SPR_IPI_MASK_1__MASK_SHIFT 0
#define SPR_IPI_MASK_1__MASK_WIDTH 32
#define SPR_IPI_MASK_1__MASK_RESET_VAL 4294967295
#define SPR_IPI_MASK_1__MASK_RMASK 0xffffffff
#define SPR_IPI_MASK_1__MASK_MASK  0xffffffff
#define SPR_IPI_MASK_1__MASK_FIELD 0,31


/*
 * Interprocessor Interrupt Mask 2.
 * Mask for Interprocessor Interrupt Event 2.  A value of one in a bit
 * position masks the corresponding event interrupt.
 */
#define SPR_IPI_MASK_2 0x1d08

#define SPR_IPI_MASK_2__MASK_SHIFT 0
#define SPR_IPI_MASK_2__MASK_WIDTH 32
#define SPR_IPI_MASK_2__MASK_RESET_VAL 4294967295
#define SPR_IPI_MASK_2__MASK_RMASK 0xffffffff
#define SPR_IPI_MASK_2__MASK_MASK  0xffffffff
#define SPR_IPI_MASK_2__MASK_FIELD 0,31


/*
 * Interprocessor Interrupt Mask 3.
 * Mask for Interprocessor Interrupt Event 3.  A value of one in a bit
 * position masks the corresponding event interrupt.
 */
#define SPR_IPI_MASK_3 0x1c08

#define SPR_IPI_MASK_3__MASK_SHIFT 0
#define SPR_IPI_MASK_3__MASK_WIDTH 32
#define SPR_IPI_MASK_3__MASK_RESET_VAL 4294967295
#define SPR_IPI_MASK_3__MASK_RMASK 0xffffffff
#define SPR_IPI_MASK_3__MASK_MASK  0xffffffff
#define SPR_IPI_MASK_3__MASK_FIELD 0,31


/*
 * Interprocessor Interrupt Mask Reset 0.
 * Writing a value of one to a bit position resets the interprocessor
 * interrupt mask for that bit.  Writing a value of zero to a bit position
 * has no effect.
 */
#define SPR_IPI_MASK_RESET_0 0x1f09

#define SPR_IPI_MASK_RESET_0__MASK_SHIFT 0
#define SPR_IPI_MASK_RESET_0__MASK_WIDTH 32
#define SPR_IPI_MASK_RESET_0__MASK_RESET_VAL 4294967295
#define SPR_IPI_MASK_RESET_0__MASK_RMASK 0xffffffff
#define SPR_IPI_MASK_RESET_0__MASK_MASK  0xffffffff
#define SPR_IPI_MASK_RESET_0__MASK_FIELD 0,31


/*
 * Interprocessor Interrupt Mask Reset 1.
 * Writing a value of one to a bit position resets the interprocessor
 * interrupt mask for that bit.  Writing a value of zero to a bit position
 * has no effect.
 */
#define SPR_IPI_MASK_RESET_1 0x1e09

#define SPR_IPI_MASK_RESET_1__MASK_SHIFT 0
#define SPR_IPI_MASK_RESET_1__MASK_WIDTH 32
#define SPR_IPI_MASK_RESET_1__MASK_RESET_VAL 4294967295
#define SPR_IPI_MASK_RESET_1__MASK_RMASK 0xffffffff
#define SPR_IPI_MASK_RESET_1__MASK_MASK  0xffffffff
#define SPR_IPI_MASK_RESET_1__MASK_FIELD 0,31


/*
 * Interprocessor Interrupt Mask Reset 2.
 * Writing a value of one to a bit position resets the interprocessor
 * interrupt mask for that bit.  Writing a value of zero to a bit position
 * has no effect.
 */
#define SPR_IPI_MASK_RESET_2 0x1d09

#define SPR_IPI_MASK_RESET_2__MASK_SHIFT 0
#define SPR_IPI_MASK_RESET_2__MASK_WIDTH 32
#define SPR_IPI_MASK_RESET_2__MASK_RESET_VAL 4294967295
#define SPR_IPI_MASK_RESET_2__MASK_RMASK 0xffffffff
#define SPR_IPI_MASK_RESET_2__MASK_MASK  0xffffffff
#define SPR_IPI_MASK_RESET_2__MASK_FIELD 0,31


/*
 * Interprocessor Interrupt Mask Reset 3.
 * Writing a value of one to a bit position resets the interprocessor
 * interrupt mask for that bit.  Writing a value of zero to a bit position
 * has no effect.
 */
#define SPR_IPI_MASK_RESET_3 0x1c09

#define SPR_IPI_MASK_RESET_3__MASK_SHIFT 0
#define SPR_IPI_MASK_RESET_3__MASK_WIDTH 32
#define SPR_IPI_MASK_RESET_3__MASK_RESET_VAL 4294967295
#define SPR_IPI_MASK_RESET_3__MASK_RMASK 0xffffffff
#define SPR_IPI_MASK_RESET_3__MASK_MASK  0xffffffff
#define SPR_IPI_MASK_RESET_3__MASK_FIELD 0,31


/*
 * Interprocessor Interrupt Mask Set 0.
 * Writing a value of one to a bit position sets the interprocessor interrupt
 * mask for that bit.  Writing a value of zero to a bit position has no
 * effect.
 */
#define SPR_IPI_MASK_SET_0 0x1f0a

#define SPR_IPI_MASK_SET_0__MASK_SHIFT 0
#define SPR_IPI_MASK_SET_0__MASK_WIDTH 32
#define SPR_IPI_MASK_SET_0__MASK_RESET_VAL 4294967295
#define SPR_IPI_MASK_SET_0__MASK_RMASK 0xffffffff
#define SPR_IPI_MASK_SET_0__MASK_MASK  0xffffffff
#define SPR_IPI_MASK_SET_0__MASK_FIELD 0,31


/*
 * Interprocessor Interrupt Mask Set 1.
 * Writing a value of one to a bit position sets the interprocessor interrupt
 * mask for that bit.  Writing a value of zero to a bit position has no
 * effect.
 */
#define SPR_IPI_MASK_SET_1 0x1e0a

#define SPR_IPI_MASK_SET_1__MASK_SHIFT 0
#define SPR_IPI_MASK_SET_1__MASK_WIDTH 32
#define SPR_IPI_MASK_SET_1__MASK_RESET_VAL 4294967295
#define SPR_IPI_MASK_SET_1__MASK_RMASK 0xffffffff
#define SPR_IPI_MASK_SET_1__MASK_MASK  0xffffffff
#define SPR_IPI_MASK_SET_1__MASK_FIELD 0,31


/*
 * Interprocessor Interrupt Mask Set 2.
 * Writing a value of one to a bit position sets the interprocessor interrupt
 * mask for that bit.  Writing a value of zero to a bit position has no
 * effect.
 */
#define SPR_IPI_MASK_SET_2 0x1d0a

#define SPR_IPI_MASK_SET_2__MASK_SHIFT 0
#define SPR_IPI_MASK_SET_2__MASK_WIDTH 32
#define SPR_IPI_MASK_SET_2__MASK_RESET_VAL 4294967295
#define SPR_IPI_MASK_SET_2__MASK_RMASK 0xffffffff
#define SPR_IPI_MASK_SET_2__MASK_MASK  0xffffffff
#define SPR_IPI_MASK_SET_2__MASK_FIELD 0,31


/*
 * Interprocessor Interrupt Mask Set 3.
 * Writing a value of one to a bit position sets the interprocessor interrupt
 * mask for that bit.  Writing a value of zero to a bit position has no
 * effect.
 */
#define SPR_IPI_MASK_SET_3 0x1c0a

#define SPR_IPI_MASK_SET_3__MASK_SHIFT 0
#define SPR_IPI_MASK_SET_3__MASK_WIDTH 32
#define SPR_IPI_MASK_SET_3__MASK_RESET_VAL 4294967295
#define SPR_IPI_MASK_SET_3__MASK_RMASK 0xffffffff
#define SPR_IPI_MASK_SET_3__MASK_MASK  0xffffffff
#define SPR_IPI_MASK_SET_3__MASK_FIELD 0,31


/*
 * Instruction TLB entry ATTR.
 * This register is used to read and write the attributes of the main
 * processor instruction TLB Entry. Writing this register triggers the write
 * of the ITLB.
 */
#define SPR_ITLB_CURRENT_ATTR 0x0780

#define SPR_ITLB_CURRENT_ATTR__V_SHIFT 0
#define SPR_ITLB_CURRENT_ATTR__V_WIDTH 1
#define SPR_ITLB_CURRENT_ATTR__V_RESET_VAL 0
#define SPR_ITLB_CURRENT_ATTR__V_RMASK 0x1
#define SPR_ITLB_CURRENT_ATTR__V_MASK  0x1
#define SPR_ITLB_CURRENT_ATTR__V_FIELD 0,0

#define SPR_ITLB_CURRENT_ATTR__W_SHIFT 1
#define SPR_ITLB_CURRENT_ATTR__W_WIDTH 1
#define SPR_ITLB_CURRENT_ATTR__W_RESET_VAL 0
#define SPR_ITLB_CURRENT_ATTR__W_RMASK 0x1
#define SPR_ITLB_CURRENT_ATTR__W_MASK  0x2
#define SPR_ITLB_CURRENT_ATTR__W_FIELD 1,1

#define SPR_ITLB_CURRENT_ATTR__MPL_SHIFT 2
#define SPR_ITLB_CURRENT_ATTR__MPL_WIDTH 2
#define SPR_ITLB_CURRENT_ATTR__MPL_RESET_VAL 0
#define SPR_ITLB_CURRENT_ATTR__MPL_RMASK 0x3
#define SPR_ITLB_CURRENT_ATTR__MPL_MASK  0xc
#define SPR_ITLB_CURRENT_ATTR__MPL_FIELD 2,3

#define SPR_ITLB_CURRENT_ATTR__PS_SHIFT 4
#define SPR_ITLB_CURRENT_ATTR__PS_WIDTH 4
#define SPR_ITLB_CURRENT_ATTR__PS_RESET_VAL 0
#define SPR_ITLB_CURRENT_ATTR__PS_RMASK 0xf
#define SPR_ITLB_CURRENT_ATTR__PS_MASK  0xf0
#define SPR_ITLB_CURRENT_ATTR__PS_FIELD 4,7
#define SPR_ITLB_CURRENT_ATTR__PS_VAL_4K_PAGE 0x0
#define SPR_ITLB_CURRENT_ATTR__PS_VAL_16K_PAGE 0x1
#define SPR_ITLB_CURRENT_ATTR__PS_VAL_64K_PAGE 0x2
#define SPR_ITLB_CURRENT_ATTR__PS_VAL_256K_PAGE 0x3
#define SPR_ITLB_CURRENT_ATTR__PS_VAL_1M_PAGE 0x4
#define SPR_ITLB_CURRENT_ATTR__PS_VAL_4M_PAGE 0x5
#define SPR_ITLB_CURRENT_ATTR__PS_VAL_16M_PAGE 0x6
#define SPR_ITLB_CURRENT_ATTR__PS_VAL_64M_PAGE 0x7
#define SPR_ITLB_CURRENT_ATTR__PS_VAL_256M_PAGE 0x8
#define SPR_ITLB_CURRENT_ATTR__PS_VAL_1G_PAGE 0x9
#define SPR_ITLB_CURRENT_ATTR__PS_VAL_4G_PAGE 0xa
#define SPR_ITLB_CURRENT_ATTR__PS_VAL_16G_PAGE 0xb
#define SPR_ITLB_CURRENT_ATTR__PS_VAL_64G_PAGE 0xc

#define SPR_ITLB_CURRENT_ATTR__G_SHIFT 8
#define SPR_ITLB_CURRENT_ATTR__G_WIDTH 1
#define SPR_ITLB_CURRENT_ATTR__G_RESET_VAL 0
#define SPR_ITLB_CURRENT_ATTR__G_RMASK 0x1
#define SPR_ITLB_CURRENT_ATTR__G_MASK  0x100
#define SPR_ITLB_CURRENT_ATTR__G_FIELD 8,8

#define SPR_ITLB_CURRENT_ATTR__ASID_SHIFT 9
#define SPR_ITLB_CURRENT_ATTR__ASID_WIDTH 8
#define SPR_ITLB_CURRENT_ATTR__ASID_RESET_VAL 0
#define SPR_ITLB_CURRENT_ATTR__ASID_RMASK 0xff
#define SPR_ITLB_CURRENT_ATTR__ASID_MASK  0x1fe00
#define SPR_ITLB_CURRENT_ATTR__ASID_FIELD 9,16

#define SPR_ITLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_SHIFT 17
#define SPR_ITLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_WIDTH 2
#define SPR_ITLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_RESET_VAL 0
#define SPR_ITLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_RMASK 0x3
#define SPR_ITLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_MASK  0x60000
#define SPR_ITLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_FIELD 17,18
#define SPR_ITLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_COHERENT 0x0
#define SPR_ITLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_NONCOHERENT 0x1
#define SPR_ITLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_UNCACHEABLE 0x2
#define SPR_ITLB_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_MMIO 0x3

#define SPR_ITLB_CURRENT_ATTR__CACHE_HOME_MAPPING_SHIFT 19
#define SPR_ITLB_CURRENT_ATTR__CACHE_HOME_MAPPING_WIDTH 2
#define SPR_ITLB_CURRENT_ATTR__CACHE_HOME_MAPPING_RESET_VAL 0
#define SPR_ITLB_CURRENT_ATTR__CACHE_HOME_MAPPING_RMASK 0x3
#define SPR_ITLB_CURRENT_ATTR__CACHE_HOME_MAPPING_MASK  0x180000
#define SPR_ITLB_CURRENT_ATTR__CACHE_HOME_MAPPING_FIELD 19,20
#define SPR_ITLB_CURRENT_ATTR__CACHE_HOME_MAPPING_VAL_HASH 0x0
#define SPR_ITLB_CURRENT_ATTR__CACHE_HOME_MAPPING_VAL_TILE 0x3

#define SPR_ITLB_CURRENT_ATTR__NO_L1D_ALLOCATION_SHIFT 21
#define SPR_ITLB_CURRENT_ATTR__NO_L1D_ALLOCATION_WIDTH 1
#define SPR_ITLB_CURRENT_ATTR__NO_L1D_ALLOCATION_RESET_VAL 0
#define SPR_ITLB_CURRENT_ATTR__NO_L1D_ALLOCATION_RMASK 0x1
#define SPR_ITLB_CURRENT_ATTR__NO_L1D_ALLOCATION_MASK  0x200000
#define SPR_ITLB_CURRENT_ATTR__NO_L1D_ALLOCATION_FIELD 21,21

#define SPR_ITLB_CURRENT_ATTR__ADAPTIVE_ALLOCATION_SHIFT 22
#define SPR_ITLB_CURRENT_ATTR__ADAPTIVE_ALLOCATION_WIDTH 1
#define SPR_ITLB_CURRENT_ATTR__ADAPTIVE_ALLOCATION_RESET_VAL 0
#define SPR_ITLB_CURRENT_ATTR__ADAPTIVE_ALLOCATION_RMASK 0x1
#define SPR_ITLB_CURRENT_ATTR__ADAPTIVE_ALLOCATION_MASK  0x400000
#define SPR_ITLB_CURRENT_ATTR__ADAPTIVE_ALLOCATION_FIELD 22,22

#define SPR_ITLB_CURRENT_ATTR__PIN_SHIFT 23
#define SPR_ITLB_CURRENT_ATTR__PIN_WIDTH 1
#define SPR_ITLB_CURRENT_ATTR__PIN_RESET_VAL 0
#define SPR_ITLB_CURRENT_ATTR__PIN_RMASK 0x1
#define SPR_ITLB_CURRENT_ATTR__PIN_MASK  0x800000
#define SPR_ITLB_CURRENT_ATTR__PIN_FIELD 23,23

#define SPR_ITLB_CURRENT_ATTR__CACHE_PREFETCH_SHIFT 25
#define SPR_ITLB_CURRENT_ATTR__CACHE_PREFETCH_WIDTH 1
#define SPR_ITLB_CURRENT_ATTR__CACHE_PREFETCH_RESET_VAL 0
#define SPR_ITLB_CURRENT_ATTR__CACHE_PREFETCH_RMASK 0x1
#define SPR_ITLB_CURRENT_ATTR__CACHE_PREFETCH_MASK  0x2000000
#define SPR_ITLB_CURRENT_ATTR__CACHE_PREFETCH_FIELD 25,25

#define SPR_ITLB_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_SHIFT 26
#define SPR_ITLB_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_WIDTH 4
#define SPR_ITLB_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_RESET_VAL 0
#define SPR_ITLB_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_RMASK 0xf
#define SPR_ITLB_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_MASK  0x3c000000
#define SPR_ITLB_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_FIELD 26,29

#define SPR_ITLB_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_SHIFT 37
#define SPR_ITLB_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_WIDTH 4
#define SPR_ITLB_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_RESET_VAL 0
#define SPR_ITLB_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_RMASK 0xf
#define SPR_ITLB_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_MASK  _64bit(0x1e000000000)
#define SPR_ITLB_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_FIELD 37,40


/*
 * Instruction TLB entry PA.
 * This register is used to read and write the physical address of the main
 * processor instruction TLB Entry
 */
#define SPR_ITLB_CURRENT_PA 0x0781

#define SPR_ITLB_CURRENT_PA__PFN_SHIFT 12
#define SPR_ITLB_CURRENT_PA__PFN_WIDTH 28
#define SPR_ITLB_CURRENT_PA__PFN_RESET_VAL 0
#define SPR_ITLB_CURRENT_PA__PFN_RMASK 0xfffffff
#define SPR_ITLB_CURRENT_PA__PFN_MASK  _64bit(0xfffffff000)
#define SPR_ITLB_CURRENT_PA__PFN_FIELD 12,39


/*
 * Instruction TLB entry VA.
 * This register is used to read and write the virtual address of the main
 * processor instruction TLB Entry
 */
#define SPR_ITLB_CURRENT_VA 0x0782

#define SPR_ITLB_CURRENT_VA__VPN_SHIFT 12
#define SPR_ITLB_CURRENT_VA__VPN_WIDTH 30
#define SPR_ITLB_CURRENT_VA__VPN_RESET_VAL 0
#define SPR_ITLB_CURRENT_VA__VPN_RMASK 0x3fffffff
#define SPR_ITLB_CURRENT_VA__VPN_MASK  _64bit(0x3fffffff000)
#define SPR_ITLB_CURRENT_VA__VPN_FIELD 12,41


/*
 * Instruction TLB Index.
 * This register is used to specify which instruction TLB entry is read and
 * written by the ITLB_CURRENT_VA, PA and ATTR registers.  The top bit of
 * this register forces a read of the indexed TLB into the ITLB_CURRENT_VA,
 * PA and ATTR registers to occur.
 */
#define SPR_ITLB_INDEX 0x0783

#define SPR_ITLB_INDEX__INDEX_SHIFT 0
#define SPR_ITLB_INDEX__INDEX_WIDTH 4
#define SPR_ITLB_INDEX__INDEX_RESET_VAL 0
#define SPR_ITLB_INDEX__INDEX_RMASK 0xf
#define SPR_ITLB_INDEX__INDEX_MASK  0xf
#define SPR_ITLB_INDEX__INDEX_FIELD 0,3

#define SPR_ITLB_INDEX__L_SHIFT 62
#define SPR_ITLB_INDEX__L_WIDTH 1
#define SPR_ITLB_INDEX__L_RESET_VAL 0
#define SPR_ITLB_INDEX__L_RMASK 0x1
#define SPR_ITLB_INDEX__L_MASK  _64bit(0x4000000000000000)
#define SPR_ITLB_INDEX__L_FIELD 62,62

#define SPR_ITLB_INDEX__R_SHIFT 63
#define SPR_ITLB_INDEX__R_WIDTH 1
#define SPR_ITLB_INDEX__R_RESET_VAL 0
#define SPR_ITLB_INDEX__R_RMASK 0x1
#define SPR_ITLB_INDEX__R_MASK  _64bit(0x8000000000000000)
#define SPR_ITLB_INDEX__R_FIELD 63,63


/*
 * Instruction TLB Match Result.
 * This register contains the result of a ITLB probe.  Each bit represents
 * whether the corresponding ITLB entry matches the last ITLB probe.
 */
#define SPR_ITLB_MATCH_0 0x0784

#define SPR_ITLB_MATCH_0__ITLB_MATCH_0_SHIFT 0
#define SPR_ITLB_MATCH_0__ITLB_MATCH_0_WIDTH 16
#define SPR_ITLB_MATCH_0__ITLB_MATCH_0_RESET_VAL 0
#define SPR_ITLB_MATCH_0__ITLB_MATCH_0_RMASK 0xffff
#define SPR_ITLB_MATCH_0__ITLB_MATCH_0_MASK  0xffff
#define SPR_ITLB_MATCH_0__ITLB_MATCH_0_FIELD 0,15


/*
 * Instruction TLB Performance Monitor Configuration.
 * This register specifies information controlling the performance monitoring
 * for the instruction stream.
 */
#define SPR_ITLB_PERF 0x0785

#define SPR_ITLB_PERF__MATCH_ENTRIES_SHIFT 0
#define SPR_ITLB_PERF__MATCH_ENTRIES_WIDTH 32
#define SPR_ITLB_PERF__MATCH_ENTRIES_RESET_VAL 0
#define SPR_ITLB_PERF__MATCH_ENTRIES_RMASK 0xffffffff
#define SPR_ITLB_PERF__MATCH_ENTRIES_MASK  0xffffffff
#define SPR_ITLB_PERF__MATCH_ENTRIES_FIELD 0,31

#define SPR_ITLB_PERF__COUNT_WRITE_SHIFT 62
#define SPR_ITLB_PERF__COUNT_WRITE_WIDTH 1
#define SPR_ITLB_PERF__COUNT_WRITE_RESET_VAL 0
#define SPR_ITLB_PERF__COUNT_WRITE_RMASK 0x1
#define SPR_ITLB_PERF__COUNT_WRITE_MASK  _64bit(0x4000000000000000)
#define SPR_ITLB_PERF__COUNT_WRITE_FIELD 62,62

#define SPR_ITLB_PERF__COUNT_READ_SHIFT 63
#define SPR_ITLB_PERF__COUNT_READ_WIDTH 1
#define SPR_ITLB_PERF__COUNT_READ_RESET_VAL 0
#define SPR_ITLB_PERF__COUNT_READ_RMASK 0x1
#define SPR_ITLB_PERF__COUNT_READ_MASK  _64bit(0x8000000000000000)
#define SPR_ITLB_PERF__COUNT_READ_FIELD 63,63


/*
 * Instruction TLB Probe Address.
 * Writing to this register causes a ITLB probe to occur for the virtual
 * address written into this register.  The result of the probe is read in
 * ITLB_MATCH_0 SPR.  A drain instruction must be placed after the write to
 * ITLB_PR before reading ITLB_MATCH_0.
 */
#define SPR_ITLB_PR 0x0786

#define SPR_ITLB_PR__ITLB_PR_SHIFT 0
#define SPR_ITLB_PR__ITLB_PR_WIDTH 42
#define SPR_ITLB_PR__ITLB_PR_RESET_VAL 0
#define SPR_ITLB_PR__ITLB_PR_RMASK _64bit(0x3ffffffffff)
#define SPR_ITLB_PR__ITLB_PR_MASK  _64bit(0x3ffffffffff)
#define SPR_ITLB_PR__ITLB_PR_FIELD 0,41


/*
 * Instruction TLB TSB Address 0.
 * This register specifies the address of a TSB entry to access for the last
 * ITLB miss.
 */
#define SPR_ITLB_TSB_ADDR_0 0x0787

#define SPR_ITLB_TSB_ADDR_0__ADDR_SHIFT 0
#define SPR_ITLB_TSB_ADDR_0__ADDR_WIDTH 64
#define SPR_ITLB_TSB_ADDR_0__ADDR_RESET_VAL 0
#define SPR_ITLB_TSB_ADDR_0__ADDR_RMASK _64bit(0xffffffffffffffff)
#define SPR_ITLB_TSB_ADDR_0__ADDR_MASK  _64bit(0xffffffffffffffff)
#define SPR_ITLB_TSB_ADDR_0__ADDR_FIELD 0,63


/*
 * Instruction TLB TSB Address 1.
 * This register specifies the address of a TSB entry to access for the last
 * ITLB miss.
 */
#define SPR_ITLB_TSB_ADDR_1 0x0788

#define SPR_ITLB_TSB_ADDR_1__ADDR_SHIFT 0
#define SPR_ITLB_TSB_ADDR_1__ADDR_WIDTH 64
#define SPR_ITLB_TSB_ADDR_1__ADDR_RESET_VAL 0
#define SPR_ITLB_TSB_ADDR_1__ADDR_RMASK _64bit(0xffffffffffffffff)
#define SPR_ITLB_TSB_ADDR_1__ADDR_MASK  _64bit(0xffffffffffffffff)
#define SPR_ITLB_TSB_ADDR_1__ADDR_FIELD 0,63


/*
 * Instruction TLB TSB Base Address 0.
 * This register specifies the address of the TSB base and control bits for
 * TSB address calculation.
 */
#define SPR_ITLB_TSB_BASE_ADDR_0 0x0705

#define SPR_ITLB_TSB_BASE_ADDR_0__ENTRIES_SHIFT 0
#define SPR_ITLB_TSB_BASE_ADDR_0__ENTRIES_WIDTH 3
#define SPR_ITLB_TSB_BASE_ADDR_0__ENTRIES_RESET_VAL 0
#define SPR_ITLB_TSB_BASE_ADDR_0__ENTRIES_RMASK 0x7
#define SPR_ITLB_TSB_BASE_ADDR_0__ENTRIES_MASK  0x7
#define SPR_ITLB_TSB_BASE_ADDR_0__ENTRIES_FIELD 0,2

#define SPR_ITLB_TSB_BASE_ADDR_0__PS_SHIFT 4
#define SPR_ITLB_TSB_BASE_ADDR_0__PS_WIDTH 4
#define SPR_ITLB_TSB_BASE_ADDR_0__PS_RESET_VAL 0
#define SPR_ITLB_TSB_BASE_ADDR_0__PS_RMASK 0xf
#define SPR_ITLB_TSB_BASE_ADDR_0__PS_MASK  0xf0
#define SPR_ITLB_TSB_BASE_ADDR_0__PS_FIELD 4,7

#define SPR_ITLB_TSB_BASE_ADDR_0__SIZE_SHIFT 8
#define SPR_ITLB_TSB_BASE_ADDR_0__SIZE_WIDTH 2
#define SPR_ITLB_TSB_BASE_ADDR_0__SIZE_RESET_VAL 0
#define SPR_ITLB_TSB_BASE_ADDR_0__SIZE_RMASK 0x3
#define SPR_ITLB_TSB_BASE_ADDR_0__SIZE_MASK  0x300
#define SPR_ITLB_TSB_BASE_ADDR_0__SIZE_FIELD 8,9

#define SPR_ITLB_TSB_BASE_ADDR_0__TSB_BASE_HIGH_SHIFT 13
#define SPR_ITLB_TSB_BASE_ADDR_0__TSB_BASE_HIGH_WIDTH 29
#define SPR_ITLB_TSB_BASE_ADDR_0__TSB_BASE_HIGH_RESET_VAL 0
#define SPR_ITLB_TSB_BASE_ADDR_0__TSB_BASE_HIGH_RMASK 0x1fffffff
#define SPR_ITLB_TSB_BASE_ADDR_0__TSB_BASE_HIGH_MASK  _64bit(0x3ffffffe000)
#define SPR_ITLB_TSB_BASE_ADDR_0__TSB_BASE_HIGH_FIELD 13,41

#define SPR_ITLB_TSB_BASE_ADDR_0__BASE_EXT_SHIFT 42
#define SPR_ITLB_TSB_BASE_ADDR_0__BASE_EXT_WIDTH 22
#define SPR_ITLB_TSB_BASE_ADDR_0__BASE_EXT_RESET_VAL 0
#define SPR_ITLB_TSB_BASE_ADDR_0__BASE_EXT_RMASK 0x3fffff
#define SPR_ITLB_TSB_BASE_ADDR_0__BASE_EXT_MASK  _64bit(0xfffffc0000000000)
#define SPR_ITLB_TSB_BASE_ADDR_0__BASE_EXT_FIELD 42,63


/*
 * Instruction TLB TSB Base Address 1.
 * This register specifies the address of the TSB base and control bits for
 * TSB address calculation.
 */
#define SPR_ITLB_TSB_BASE_ADDR_1 0x0706

#define SPR_ITLB_TSB_BASE_ADDR_1__ENTRIES_SHIFT 0
#define SPR_ITLB_TSB_BASE_ADDR_1__ENTRIES_WIDTH 3
#define SPR_ITLB_TSB_BASE_ADDR_1__ENTRIES_RESET_VAL 0
#define SPR_ITLB_TSB_BASE_ADDR_1__ENTRIES_RMASK 0x7
#define SPR_ITLB_TSB_BASE_ADDR_1__ENTRIES_MASK  0x7
#define SPR_ITLB_TSB_BASE_ADDR_1__ENTRIES_FIELD 0,2

#define SPR_ITLB_TSB_BASE_ADDR_1__PS_SHIFT 4
#define SPR_ITLB_TSB_BASE_ADDR_1__PS_WIDTH 4
#define SPR_ITLB_TSB_BASE_ADDR_1__PS_RESET_VAL 0
#define SPR_ITLB_TSB_BASE_ADDR_1__PS_RMASK 0xf
#define SPR_ITLB_TSB_BASE_ADDR_1__PS_MASK  0xf0
#define SPR_ITLB_TSB_BASE_ADDR_1__PS_FIELD 4,7

#define SPR_ITLB_TSB_BASE_ADDR_1__SIZE_SHIFT 8
#define SPR_ITLB_TSB_BASE_ADDR_1__SIZE_WIDTH 2
#define SPR_ITLB_TSB_BASE_ADDR_1__SIZE_RESET_VAL 0
#define SPR_ITLB_TSB_BASE_ADDR_1__SIZE_RMASK 0x3
#define SPR_ITLB_TSB_BASE_ADDR_1__SIZE_MASK  0x300
#define SPR_ITLB_TSB_BASE_ADDR_1__SIZE_FIELD 8,9

#define SPR_ITLB_TSB_BASE_ADDR_1__TSB_BASE_HIGH_SHIFT 13
#define SPR_ITLB_TSB_BASE_ADDR_1__TSB_BASE_HIGH_WIDTH 29
#define SPR_ITLB_TSB_BASE_ADDR_1__TSB_BASE_HIGH_RESET_VAL 0
#define SPR_ITLB_TSB_BASE_ADDR_1__TSB_BASE_HIGH_RMASK 0x1fffffff
#define SPR_ITLB_TSB_BASE_ADDR_1__TSB_BASE_HIGH_MASK  _64bit(0x3ffffffe000)
#define SPR_ITLB_TSB_BASE_ADDR_1__TSB_BASE_HIGH_FIELD 13,41

#define SPR_ITLB_TSB_BASE_ADDR_1__BASE_EXT_SHIFT 42
#define SPR_ITLB_TSB_BASE_ADDR_1__BASE_EXT_WIDTH 22
#define SPR_ITLB_TSB_BASE_ADDR_1__BASE_EXT_RESET_VAL 0
#define SPR_ITLB_TSB_BASE_ADDR_1__BASE_EXT_RMASK 0x3fffff
#define SPR_ITLB_TSB_BASE_ADDR_1__BASE_EXT_MASK  _64bit(0xfffffc0000000000)
#define SPR_ITLB_TSB_BASE_ADDR_1__BASE_EXT_FIELD 42,63


/*
 * Instruction TLB entry ATTR on TSB fill match.
 * This register is used to read and write the attributes of the main
 * processor instruction TLB Entry. Writing this register triggers the write
 * of the ITLB if the data loaded into the ITLB_CURRENT registers matches the
 * address which is pointed at by EX_CONTEXT_{CPL}_1.PL.  Precisely, the TLB
 * is loaded if VPN(ITLB_CURRENT_ATTR.PS, EX_CONTEXT_{CPL}_0.PC) ==
 * VPN(ITLB_CURRENT_ATTR.PS, ITLB_CURRENT_VA) && ((I_ASID ==
 * ITLB_TSB_FILL_CURRENT_ATTR.ASID) || (ITLB_TSB_FILL_CURRENT_ATTR.G)) &&
 * (ITLB_TSB_FILL_CURRENT_ATTR_0.V) && (EX_CONTEXT_{CPL}_1.PL >=
 * ITLB_TSB_FILL_CURRENT_ATTR.MPL) && (ITLB_TSB_FILL_CURRENT_ATTR.ITLBV == 1)
 */
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR 0x0789

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__V_SHIFT 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__V_WIDTH 1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__V_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__V_RMASK 0x1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__V_MASK  0x1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__V_FIELD 0,0

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__W_SHIFT 1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__W_WIDTH 1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__W_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__W_RMASK 0x1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__W_MASK  0x2
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__W_FIELD 1,1

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MPL_SHIFT 2
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MPL_WIDTH 2
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MPL_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MPL_RMASK 0x3
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MPL_MASK  0xc
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MPL_FIELD 2,3

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_SHIFT 4
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_WIDTH 4
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_RMASK 0xf
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_MASK  0xf0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_FIELD 4,7
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_VAL_4K_PAGE 0x0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_VAL_16K_PAGE 0x1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_VAL_64K_PAGE 0x2
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_VAL_256K_PAGE 0x3
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_VAL_1M_PAGE 0x4
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_VAL_4M_PAGE 0x5
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_VAL_16M_PAGE 0x6
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_VAL_64M_PAGE 0x7
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_VAL_256M_PAGE 0x8
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_VAL_1G_PAGE 0x9
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_VAL_4G_PAGE 0xa
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_VAL_16G_PAGE 0xb
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PS_VAL_64G_PAGE 0xc

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__G_SHIFT 8
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__G_WIDTH 1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__G_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__G_RMASK 0x1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__G_MASK  0x100
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__G_FIELD 8,8

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ASID_SHIFT 9
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ASID_WIDTH 8
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ASID_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ASID_RMASK 0xff
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ASID_MASK  0x1fe00
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ASID_FIELD 9,16

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_SHIFT 17
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_WIDTH 2
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_RMASK 0x3
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_MASK  0x60000
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_FIELD 17,18
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_COHERENT 0x0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_NONCOHERENT 0x1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_UNCACHEABLE 0x2
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__MEMORY_ATTRIBUTE_VAL_MMIO 0x3

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_SHIFT 19
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_WIDTH 2
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_RMASK 0x3
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_MASK  0x180000
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_FIELD 19,20
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_VAL_HASH 0x0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__CACHE_HOME_MAPPING_VAL_TILE 0x3

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__NO_L1D_ALLOCATION_SHIFT 21
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__NO_L1D_ALLOCATION_WIDTH 1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__NO_L1D_ALLOCATION_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__NO_L1D_ALLOCATION_RMASK 0x1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__NO_L1D_ALLOCATION_MASK  0x200000
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__NO_L1D_ALLOCATION_FIELD 21,21

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ADAPTIVE_ALLOCATION_SHIFT 22
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ADAPTIVE_ALLOCATION_WIDTH 1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ADAPTIVE_ALLOCATION_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ADAPTIVE_ALLOCATION_RMASK 0x1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ADAPTIVE_ALLOCATION_MASK  0x400000
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ADAPTIVE_ALLOCATION_FIELD 22,22

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PIN_SHIFT 23
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PIN_WIDTH 1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PIN_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PIN_RMASK 0x1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PIN_MASK  0x800000
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__PIN_FIELD 23,23

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__CACHE_PREFETCH_SHIFT 25
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__CACHE_PREFETCH_WIDTH 1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__CACHE_PREFETCH_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__CACHE_PREFETCH_RMASK 0x1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__CACHE_PREFETCH_MASK  0x2000000
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__CACHE_PREFETCH_FIELD 25,25

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_SHIFT 26
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_WIDTH 4
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_RMASK 0xf
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_MASK  0x3c000000
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__LOCATION_Y_OR_PAGE_OFFSET_FIELD 26,29

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_SHIFT 37
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_WIDTH 4
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_RMASK 0xf
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_MASK  _64bit(0x1e000000000)
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__LOCATION_X_OR_PAGE_MASK_FIELD 37,40

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__DTLBV_SHIFT 48
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__DTLBV_WIDTH 1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__DTLBV_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__DTLBV_RMASK 0x1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__DTLBV_MASK  _64bit(0x1000000000000)
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__DTLBV_FIELD 48,48

#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ITLBV_SHIFT 49
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ITLBV_WIDTH 1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ITLBV_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ITLBV_RMASK 0x1
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ITLBV_MASK  _64bit(0x2000000000000)
#define SPR_ITLB_TSB_FILL_CURRENT_ATTR__ITLBV_FIELD 49,49


/*
 * Instruction TLB TSB Fill Match.
 * Indicates whether the last Instruction TSB_FILL write was installed in the
 * TLB.
 */
#define SPR_ITLB_TSB_FILL_MATCH 0x078a

#define SPR_ITLB_TSB_FILL_MATCH__MATCH_SHIFT 0
#define SPR_ITLB_TSB_FILL_MATCH__MATCH_WIDTH 1
#define SPR_ITLB_TSB_FILL_MATCH__MATCH_RESET_VAL 0
#define SPR_ITLB_TSB_FILL_MATCH__MATCH_RMASK 0x1
#define SPR_ITLB_TSB_FILL_MATCH__MATCH_MASK  0x1
#define SPR_ITLB_TSB_FILL_MATCH__MATCH_FIELD 0,0


/*
 * Instruction Address Attribute Register Entry.
 * This register specifies information controlling the conversion of a
 * virtual address to physical address when operating in physical memory mode
 * for the instruction stream.
 */
#define SPR_I_AAR 0x2681

#define SPR_I_AAR__PHYSICAL_MEMORY_MODE_SHIFT 0
#define SPR_I_AAR__PHYSICAL_MEMORY_MODE_WIDTH 1
#define SPR_I_AAR__PHYSICAL_MEMORY_MODE_RESET_VAL 1
#define SPR_I_AAR__PHYSICAL_MEMORY_MODE_RMASK 0x1
#define SPR_I_AAR__PHYSICAL_MEMORY_MODE_MASK  0x1
#define SPR_I_AAR__PHYSICAL_MEMORY_MODE_FIELD 0,0

#define SPR_I_AAR__MEMORY_ATTRIBUTE_SHIFT 17
#define SPR_I_AAR__MEMORY_ATTRIBUTE_WIDTH 2
#define SPR_I_AAR__MEMORY_ATTRIBUTE_RESET_VAL 0
#define SPR_I_AAR__MEMORY_ATTRIBUTE_RMASK 0x3
#define SPR_I_AAR__MEMORY_ATTRIBUTE_MASK  0x60000
#define SPR_I_AAR__MEMORY_ATTRIBUTE_FIELD 17,18
#define SPR_I_AAR__MEMORY_ATTRIBUTE_VAL_COHERENT 0x0
#define SPR_I_AAR__MEMORY_ATTRIBUTE_VAL_NONCOHERENT 0x1
#define SPR_I_AAR__MEMORY_ATTRIBUTE_VAL_UNCACHEABLE 0x2
#define SPR_I_AAR__MEMORY_ATTRIBUTE_VAL_MMIO 0x3

#define SPR_I_AAR__CACHE_HOME_MAPPING_SHIFT 19
#define SPR_I_AAR__CACHE_HOME_MAPPING_WIDTH 2
#define SPR_I_AAR__CACHE_HOME_MAPPING_RESET_VAL 0
#define SPR_I_AAR__CACHE_HOME_MAPPING_RMASK 0x3
#define SPR_I_AAR__CACHE_HOME_MAPPING_MASK  0x180000
#define SPR_I_AAR__CACHE_HOME_MAPPING_FIELD 19,20
#define SPR_I_AAR__CACHE_HOME_MAPPING_VAL_HASH 0x0
#define SPR_I_AAR__CACHE_HOME_MAPPING_VAL_TILE 0x3

#define SPR_I_AAR__NO_L1D_ALLOCATION_SHIFT 21
#define SPR_I_AAR__NO_L1D_ALLOCATION_WIDTH 1
#define SPR_I_AAR__NO_L1D_ALLOCATION_RESET_VAL 0
#define SPR_I_AAR__NO_L1D_ALLOCATION_RMASK 0x1
#define SPR_I_AAR__NO_L1D_ALLOCATION_MASK  0x200000
#define SPR_I_AAR__NO_L1D_ALLOCATION_FIELD 21,21

#define SPR_I_AAR__ADAPTIVE_ALLOCATION_SHIFT 22
#define SPR_I_AAR__ADAPTIVE_ALLOCATION_WIDTH 1
#define SPR_I_AAR__ADAPTIVE_ALLOCATION_RESET_VAL 0
#define SPR_I_AAR__ADAPTIVE_ALLOCATION_RMASK 0x1
#define SPR_I_AAR__ADAPTIVE_ALLOCATION_MASK  0x400000
#define SPR_I_AAR__ADAPTIVE_ALLOCATION_FIELD 22,22

#define SPR_I_AAR__PIN_SHIFT 23
#define SPR_I_AAR__PIN_WIDTH 1
#define SPR_I_AAR__PIN_RESET_VAL 0
#define SPR_I_AAR__PIN_RMASK 0x1
#define SPR_I_AAR__PIN_MASK  0x800000
#define SPR_I_AAR__PIN_FIELD 23,23

#define SPR_I_AAR__CACHE_PREFETCH_SHIFT 25
#define SPR_I_AAR__CACHE_PREFETCH_WIDTH 1
#define SPR_I_AAR__CACHE_PREFETCH_RESET_VAL 0
#define SPR_I_AAR__CACHE_PREFETCH_RMASK 0x1
#define SPR_I_AAR__CACHE_PREFETCH_MASK  0x2000000
#define SPR_I_AAR__CACHE_PREFETCH_FIELD 25,25

#define SPR_I_AAR__LOCATION_Y_OR_PAGE_OFFSET_SHIFT 26
#define SPR_I_AAR__LOCATION_Y_OR_PAGE_OFFSET_WIDTH 4
#define SPR_I_AAR__LOCATION_Y_OR_PAGE_OFFSET_RESET_VAL 0
#define SPR_I_AAR__LOCATION_Y_OR_PAGE_OFFSET_RMASK 0xf
#define SPR_I_AAR__LOCATION_Y_OR_PAGE_OFFSET_MASK  0x3c000000
#define SPR_I_AAR__LOCATION_Y_OR_PAGE_OFFSET_FIELD 26,29

#define SPR_I_AAR__LOCATION_X_OR_PAGE_MASK_SHIFT 37
#define SPR_I_AAR__LOCATION_X_OR_PAGE_MASK_WIDTH 4
#define SPR_I_AAR__LOCATION_X_OR_PAGE_MASK_RESET_VAL 0
#define SPR_I_AAR__LOCATION_X_OR_PAGE_MASK_RMASK 0xf
#define SPR_I_AAR__LOCATION_X_OR_PAGE_MASK_MASK  _64bit(0x1e000000000)
#define SPR_I_AAR__LOCATION_X_OR_PAGE_MASK_FIELD 37,40


/*
 * Instruction Address Space Identifier.
 * This register is specifies the ASID that is used for the instruction TLB
 * accesses.
 */
#define SPR_I_ASID 0x2805

#define SPR_I_ASID__I_ASID_SHIFT 0
#define SPR_I_ASID__I_ASID_WIDTH 8
#define SPR_I_ASID__I_ASID_RESET_VAL 0
#define SPR_I_ASID__I_ASID_RMASK 0xff
#define SPR_I_ASID__I_ASID_MASK  0xff
#define SPR_I_ASID__I_ASID_FIELD 0,7


/*
 * Level 1 ICache Pin Way 0.
 * This register enables pinning lines into way 0 of L1 ICache.  Each bit
 * controls 4 sets, bit 0 controls sets 0 through 3, bit 1 controls sets 4
 * through 7, ..., bit 63 controls sets 252 through 255.  For pinned sets,
 * the MRU update is inhibited so that way 0 is always MRU; thus way 1 is
 * always re-allocated on Icache misses.
 */
#define SPR_L1_I_PIN_WAY_0 0x261b

#define SPR_L1_I_PIN_WAY_0__GROUP_SHIFT 0
#define SPR_L1_I_PIN_WAY_0__GROUP_WIDTH 64
#define SPR_L1_I_PIN_WAY_0__GROUP_RESET_VAL 0
#define SPR_L1_I_PIN_WAY_0__GROUP_RMASK _64bit(0xffffffffffffffff)
#define SPR_L1_I_PIN_WAY_0__GROUP_MASK  _64bit(0xffffffffffffffff)
#define SPR_L1_I_PIN_WAY_0__GROUP_FIELD 0,63


/*
 * Last Interrupt Reason.
 * Contains the reason for the last two interrupts that have occurred.
 */
#define SPR_LAST_INTERRUPT_REASON 0x2a05

#define SPR_LAST_INTERRUPT_REASON__LAST_REASON_SHIFT 0
#define SPR_LAST_INTERRUPT_REASON__LAST_REASON_WIDTH 6
#define SPR_LAST_INTERRUPT_REASON__LAST_REASON_RESET_VAL 42
#define SPR_LAST_INTERRUPT_REASON__LAST_REASON_RMASK 0x3f
#define SPR_LAST_INTERRUPT_REASON__LAST_REASON_MASK  0x3f
#define SPR_LAST_INTERRUPT_REASON__LAST_REASON_FIELD 0,5

#define SPR_LAST_INTERRUPT_REASON__LAST_LAST_REASON_SHIFT 8
#define SPR_LAST_INTERRUPT_REASON__LAST_LAST_REASON_WIDTH 6
#define SPR_LAST_INTERRUPT_REASON__LAST_LAST_REASON_RESET_VAL 42
#define SPR_LAST_INTERRUPT_REASON__LAST_LAST_REASON_RMASK 0x3f
#define SPR_LAST_INTERRUPT_REASON__LAST_LAST_REASON_MASK  0x3f00
#define SPR_LAST_INTERRUPT_REASON__LAST_LAST_REASON_FIELD 8,13


/*
 * CBOX Memory Error Address.
 * This register specifies the physical address of the associated
 * MEM_ERROR_CBOX_STATUS entry.
 */
#define SPR_MEM_ERROR_CBOX_ADDR 0x0005

#define SPR_MEM_ERROR_CBOX_ADDR__MEM_ERROR_CBOX_ADDR_SHIFT 0
#define SPR_MEM_ERROR_CBOX_ADDR__MEM_ERROR_CBOX_ADDR_WIDTH 40
#define SPR_MEM_ERROR_CBOX_ADDR__MEM_ERROR_CBOX_ADDR_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_ADDR__MEM_ERROR_CBOX_ADDR_RMASK _64bit(0xffffffffff)
#define SPR_MEM_ERROR_CBOX_ADDR__MEM_ERROR_CBOX_ADDR_MASK  _64bit(0xffffffffff)
#define SPR_MEM_ERROR_CBOX_ADDR__MEM_ERROR_CBOX_ADDR_FIELD 0,39


/*
 * CBOX Memory Error Status.
 * This register specifies different Cbox errors. Every bit-field is cleared
 * by writing a 1 to it.
 */
#define SPR_MEM_ERROR_CBOX_STATUS 0x0006

#define SPR_MEM_ERROR_CBOX_STATUS__VALID_SHIFT 0
#define SPR_MEM_ERROR_CBOX_STATUS__VALID_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__VALID_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__VALID_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__VALID_MASK  0x1
#define SPR_MEM_ERROR_CBOX_STATUS__VALID_FIELD 0,0

#define SPR_MEM_ERROR_CBOX_STATUS__L2_DATA_CORRECTED_SHIFT 1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_DATA_CORRECTED_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_DATA_CORRECTED_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__L2_DATA_CORRECTED_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_DATA_CORRECTED_MASK  0x2
#define SPR_MEM_ERROR_CBOX_STATUS__L2_DATA_CORRECTED_FIELD 1,1

#define SPR_MEM_ERROR_CBOX_STATUS__L2_DATA_FATAL_SHIFT 2
#define SPR_MEM_ERROR_CBOX_STATUS__L2_DATA_FATAL_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_DATA_FATAL_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__L2_DATA_FATAL_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_DATA_FATAL_MASK  0x4
#define SPR_MEM_ERROR_CBOX_STATUS__L2_DATA_FATAL_FIELD 2,2

#define SPR_MEM_ERROR_CBOX_STATUS__L2_TAG_SHIFT 3
#define SPR_MEM_ERROR_CBOX_STATUS__L2_TAG_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_TAG_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__L2_TAG_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_TAG_MASK  0x8
#define SPR_MEM_ERROR_CBOX_STATUS__L2_TAG_FIELD 3,3

#define SPR_MEM_ERROR_CBOX_STATUS__L2_STATE_SHIFT 4
#define SPR_MEM_ERROR_CBOX_STATUS__L2_STATE_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_STATE_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__L2_STATE_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_STATE_MASK  0x10
#define SPR_MEM_ERROR_CBOX_STATUS__L2_STATE_FIELD 4,4

#define SPR_MEM_ERROR_CBOX_STATUS__L2_RDN_WRITE_SHIFT 5
#define SPR_MEM_ERROR_CBOX_STATUS__L2_RDN_WRITE_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_RDN_WRITE_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__L2_RDN_WRITE_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_RDN_WRITE_MASK  0x20
#define SPR_MEM_ERROR_CBOX_STATUS__L2_RDN_WRITE_FIELD 5,5

#define SPR_MEM_ERROR_CBOX_STATUS__L2_RDN_READ_SHIFT 6
#define SPR_MEM_ERROR_CBOX_STATUS__L2_RDN_READ_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_RDN_READ_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__L2_RDN_READ_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_RDN_READ_MASK  0x40
#define SPR_MEM_ERROR_CBOX_STATUS__L2_RDN_READ_FIELD 6,6

#define SPR_MEM_ERROR_CBOX_STATUS__L2_MAF_TIMEOUT_SHIFT 7
#define SPR_MEM_ERROR_CBOX_STATUS__L2_MAF_TIMEOUT_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_MAF_TIMEOUT_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__L2_MAF_TIMEOUT_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__L2_MAF_TIMEOUT_MASK  0x80
#define SPR_MEM_ERROR_CBOX_STATUS__L2_MAF_TIMEOUT_FIELD 7,7

#define SPR_MEM_ERROR_CBOX_STATUS__SHARE_INVALIDATION_SHIFT 8
#define SPR_MEM_ERROR_CBOX_STATUS__SHARE_INVALIDATION_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__SHARE_INVALIDATION_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__SHARE_INVALIDATION_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__SHARE_INVALIDATION_MASK  0x100
#define SPR_MEM_ERROR_CBOX_STATUS__SHARE_INVALIDATION_FIELD 8,8

#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_DATA_CORRECTED_SHIFT 9
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_DATA_CORRECTED_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_DATA_CORRECTED_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_DATA_CORRECTED_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_DATA_CORRECTED_MASK  0x200
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_DATA_CORRECTED_FIELD 9,9

#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_DATA_FATAL_SHIFT 10
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_DATA_FATAL_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_DATA_FATAL_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_DATA_FATAL_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_DATA_FATAL_MASK  0x400
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_DATA_FATAL_FIELD 10,10

#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_TAG_SHIFT 11
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_TAG_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_TAG_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_TAG_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_TAG_MASK  0x800
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_TAG_FIELD 11,11

#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_STATE_SHIFT 12
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_STATE_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_STATE_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_STATE_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_STATE_MASK  0x1000
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_STATE_FIELD 12,12

#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_RDN_WRITE_SHIFT 13
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_RDN_WRITE_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_RDN_WRITE_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_RDN_WRITE_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_RDN_WRITE_MASK  0x2000
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_RDN_WRITE_FIELD 13,13

#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_RDN_READ_SHIFT 14
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_RDN_READ_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_RDN_READ_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_RDN_READ_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_RDN_READ_MASK  0x4000
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_RDN_READ_FIELD 14,14

#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_MAF_TIMEOUT_SHIFT 15
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_MAF_TIMEOUT_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_MAF_TIMEOUT_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_MAF_TIMEOUT_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_MAF_TIMEOUT_MASK  0x8000
#define SPR_MEM_ERROR_CBOX_STATUS__INT_L2_MAF_TIMEOUT_FIELD 15,15

#define SPR_MEM_ERROR_CBOX_STATUS__INT_SHARE_INVALIDATION_SHIFT 16
#define SPR_MEM_ERROR_CBOX_STATUS__INT_SHARE_INVALIDATION_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_SHARE_INVALIDATION_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__INT_SHARE_INVALIDATION_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__INT_SHARE_INVALIDATION_MASK  0x10000
#define SPR_MEM_ERROR_CBOX_STATUS__INT_SHARE_INVALIDATION_FIELD 16,16

#define SPR_MEM_ERROR_CBOX_STATUS__OVERFLOW_SHIFT 17
#define SPR_MEM_ERROR_CBOX_STATUS__OVERFLOW_WIDTH 1
#define SPR_MEM_ERROR_CBOX_STATUS__OVERFLOW_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__OVERFLOW_RMASK 0x1
#define SPR_MEM_ERROR_CBOX_STATUS__OVERFLOW_MASK  0x20000
#define SPR_MEM_ERROR_CBOX_STATUS__OVERFLOW_FIELD 17,17

#define SPR_MEM_ERROR_CBOX_STATUS__INFO_WAY_SHIFT 18
#define SPR_MEM_ERROR_CBOX_STATUS__INFO_WAY_WIDTH 3
#define SPR_MEM_ERROR_CBOX_STATUS__INFO_WAY_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__INFO_WAY_RMASK 0x7
#define SPR_MEM_ERROR_CBOX_STATUS__INFO_WAY_MASK  0x1c0000
#define SPR_MEM_ERROR_CBOX_STATUS__INFO_WAY_FIELD 18,20

#define SPR_MEM_ERROR_CBOX_STATUS__INFO_SHIFT 21
#define SPR_MEM_ERROR_CBOX_STATUS__INFO_WIDTH 16
#define SPR_MEM_ERROR_CBOX_STATUS__INFO_RESET_VAL 0
#define SPR_MEM_ERROR_CBOX_STATUS__INFO_RMASK 0xffff
#define SPR_MEM_ERROR_CBOX_STATUS__INFO_MASK  _64bit(0x1fffe00000)
#define SPR_MEM_ERROR_CBOX_STATUS__INFO_FIELD 21,36


/*
 * Memory Error Enable.
 * This register enables particular memory error reasons to cause a memory
 * error interrupt.  When a one, a particular reason is enabled.
 */
#define SPR_MEM_ERROR_ENABLE 0x0007

#define SPR_MEM_ERROR_ENABLE__XDN_DEMUX_SHIFT 0
#define SPR_MEM_ERROR_ENABLE__XDN_DEMUX_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__XDN_DEMUX_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__XDN_DEMUX_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__XDN_DEMUX_MASK  0x1
#define SPR_MEM_ERROR_ENABLE__XDN_DEMUX_FIELD 0,0

#define SPR_MEM_ERROR_ENABLE__L1_I_SHIFT 1
#define SPR_MEM_ERROR_ENABLE__L1_I_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__L1_I_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__L1_I_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__L1_I_MASK  0x2
#define SPR_MEM_ERROR_ENABLE__L1_I_FIELD 1,1

#define SPR_MEM_ERROR_ENABLE__ITLB_MULTI_MATCH_SHIFT 2
#define SPR_MEM_ERROR_ENABLE__ITLB_MULTI_MATCH_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__ITLB_MULTI_MATCH_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__ITLB_MULTI_MATCH_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__ITLB_MULTI_MATCH_MASK  0x4
#define SPR_MEM_ERROR_ENABLE__ITLB_MULTI_MATCH_FIELD 2,2

#define SPR_MEM_ERROR_ENABLE__ILLEGAL_ITLB_ENTRY_SHIFT 3
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_ITLB_ENTRY_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_ITLB_ENTRY_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_ITLB_ENTRY_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_ITLB_ENTRY_MASK  0x8
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_ITLB_ENTRY_FIELD 3,3

#define SPR_MEM_ERROR_ENABLE__L1_D_DATA_SHIFT 4
#define SPR_MEM_ERROR_ENABLE__L1_D_DATA_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__L1_D_DATA_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__L1_D_DATA_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__L1_D_DATA_MASK  0x10
#define SPR_MEM_ERROR_ENABLE__L1_D_DATA_FIELD 4,4

#define SPR_MEM_ERROR_ENABLE__L1_D_TAG_SHIFT 5
#define SPR_MEM_ERROR_ENABLE__L1_D_TAG_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__L1_D_TAG_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__L1_D_TAG_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__L1_D_TAG_MASK  0x20
#define SPR_MEM_ERROR_ENABLE__L1_D_TAG_FIELD 5,5

#define SPR_MEM_ERROR_ENABLE__DTLB_MULTI_MATCH_SHIFT 6
#define SPR_MEM_ERROR_ENABLE__DTLB_MULTI_MATCH_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__DTLB_MULTI_MATCH_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__DTLB_MULTI_MATCH_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__DTLB_MULTI_MATCH_MASK  0x40
#define SPR_MEM_ERROR_ENABLE__DTLB_MULTI_MATCH_FIELD 6,6

#define SPR_MEM_ERROR_ENABLE__ILLEGAL_DTLB_ENTRY_SHIFT 7
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_DTLB_ENTRY_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_DTLB_ENTRY_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_DTLB_ENTRY_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_DTLB_ENTRY_MASK  0x80
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_DTLB_ENTRY_FIELD 7,7

#define SPR_MEM_ERROR_ENABLE__ILLEGAL_ATOMIC_ATTRIBUTE_SHIFT 8
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_ATOMIC_ATTRIBUTE_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_ATOMIC_ATTRIBUTE_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_ATOMIC_ATTRIBUTE_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_ATOMIC_ATTRIBUTE_MASK  0x100
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_ATOMIC_ATTRIBUTE_FIELD 8,8

#define SPR_MEM_ERROR_ENABLE__ILLEGAL_OPCODE_ATTRIBUTE_SHIFT 9
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_OPCODE_ATTRIBUTE_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_OPCODE_ATTRIBUTE_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_OPCODE_ATTRIBUTE_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_OPCODE_ATTRIBUTE_MASK  0x200
#define SPR_MEM_ERROR_ENABLE__ILLEGAL_OPCODE_ATTRIBUTE_FIELD 9,9

#define SPR_MEM_ERROR_ENABLE__L2_DATA_CORRECTED_SHIFT 10
#define SPR_MEM_ERROR_ENABLE__L2_DATA_CORRECTED_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__L2_DATA_CORRECTED_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__L2_DATA_CORRECTED_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__L2_DATA_CORRECTED_MASK  0x400
#define SPR_MEM_ERROR_ENABLE__L2_DATA_CORRECTED_FIELD 10,10

#define SPR_MEM_ERROR_ENABLE__L2_DATA_FATAL_SHIFT 11
#define SPR_MEM_ERROR_ENABLE__L2_DATA_FATAL_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__L2_DATA_FATAL_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__L2_DATA_FATAL_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__L2_DATA_FATAL_MASK  0x800
#define SPR_MEM_ERROR_ENABLE__L2_DATA_FATAL_FIELD 11,11

#define SPR_MEM_ERROR_ENABLE__L2_TAG_SHIFT 12
#define SPR_MEM_ERROR_ENABLE__L2_TAG_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__L2_TAG_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__L2_TAG_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__L2_TAG_MASK  0x1000
#define SPR_MEM_ERROR_ENABLE__L2_TAG_FIELD 12,12

#define SPR_MEM_ERROR_ENABLE__L2_STATE_SHIFT 13
#define SPR_MEM_ERROR_ENABLE__L2_STATE_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__L2_STATE_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__L2_STATE_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__L2_STATE_MASK  0x2000
#define SPR_MEM_ERROR_ENABLE__L2_STATE_FIELD 13,13

#define SPR_MEM_ERROR_ENABLE__L2_RDN_WRITE_SHIFT 14
#define SPR_MEM_ERROR_ENABLE__L2_RDN_WRITE_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__L2_RDN_WRITE_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__L2_RDN_WRITE_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__L2_RDN_WRITE_MASK  0x4000
#define SPR_MEM_ERROR_ENABLE__L2_RDN_WRITE_FIELD 14,14

#define SPR_MEM_ERROR_ENABLE__L2_RDN_READ_SHIFT 15
#define SPR_MEM_ERROR_ENABLE__L2_RDN_READ_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__L2_RDN_READ_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__L2_RDN_READ_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__L2_RDN_READ_MASK  0x8000
#define SPR_MEM_ERROR_ENABLE__L2_RDN_READ_FIELD 15,15

#define SPR_MEM_ERROR_ENABLE__L2_MAF_TIMEOUT_SHIFT 16
#define SPR_MEM_ERROR_ENABLE__L2_MAF_TIMEOUT_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__L2_MAF_TIMEOUT_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__L2_MAF_TIMEOUT_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__L2_MAF_TIMEOUT_MASK  0x10000
#define SPR_MEM_ERROR_ENABLE__L2_MAF_TIMEOUT_FIELD 16,16

#define SPR_MEM_ERROR_ENABLE__SHARE_INVALIDATION_SHIFT 17
#define SPR_MEM_ERROR_ENABLE__SHARE_INVALIDATION_WIDTH 1
#define SPR_MEM_ERROR_ENABLE__SHARE_INVALIDATION_RESET_VAL 0
#define SPR_MEM_ERROR_ENABLE__SHARE_INVALIDATION_RMASK 0x1
#define SPR_MEM_ERROR_ENABLE__SHARE_INVALIDATION_MASK  0x20000
#define SPR_MEM_ERROR_ENABLE__SHARE_INVALIDATION_FIELD 17,17


/*
 * MBOX Memory Error Address.
 * This register specifies the physical address or the DTLB hit-vector of the
 * associated MEM_ERROR_MBOX_STATUS entry.
 */
#define SPR_MEM_ERROR_MBOX_ADDR 0x0008

#define SPR_MEM_ERROR_MBOX_ADDR__MEM_ERROR_MBOX_ADDR_SHIFT 0
#define SPR_MEM_ERROR_MBOX_ADDR__MEM_ERROR_MBOX_ADDR_WIDTH 40
#define SPR_MEM_ERROR_MBOX_ADDR__MEM_ERROR_MBOX_ADDR_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_ADDR__MEM_ERROR_MBOX_ADDR_RMASK _64bit(0xffffffffff)
#define SPR_MEM_ERROR_MBOX_ADDR__MEM_ERROR_MBOX_ADDR_MASK  _64bit(0xffffffffff)
#define SPR_MEM_ERROR_MBOX_ADDR__MEM_ERROR_MBOX_ADDR_FIELD 0,39


/*
 * MBOX Memory Error Status.
 * This register specifies different Mbox errors. Every bit-field is cleared
 * by writing a 1 to it.
 */
#define SPR_MEM_ERROR_MBOX_STATUS 0x0009

#define SPR_MEM_ERROR_MBOX_STATUS__VALID_SHIFT 0
#define SPR_MEM_ERROR_MBOX_STATUS__VALID_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__VALID_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__VALID_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__VALID_MASK  0x1
#define SPR_MEM_ERROR_MBOX_STATUS__VALID_FIELD 0,0

#define SPR_MEM_ERROR_MBOX_STATUS__L1_D_DATA_SHIFT 1
#define SPR_MEM_ERROR_MBOX_STATUS__L1_D_DATA_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__L1_D_DATA_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__L1_D_DATA_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__L1_D_DATA_MASK  0x2
#define SPR_MEM_ERROR_MBOX_STATUS__L1_D_DATA_FIELD 1,1

#define SPR_MEM_ERROR_MBOX_STATUS__L1_D_TAG_SHIFT 2
#define SPR_MEM_ERROR_MBOX_STATUS__L1_D_TAG_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__L1_D_TAG_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__L1_D_TAG_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__L1_D_TAG_MASK  0x4
#define SPR_MEM_ERROR_MBOX_STATUS__L1_D_TAG_FIELD 2,2

#define SPR_MEM_ERROR_MBOX_STATUS__DTLB_MULTI_MATCH_SHIFT 3
#define SPR_MEM_ERROR_MBOX_STATUS__DTLB_MULTI_MATCH_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__DTLB_MULTI_MATCH_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__DTLB_MULTI_MATCH_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__DTLB_MULTI_MATCH_MASK  0x8
#define SPR_MEM_ERROR_MBOX_STATUS__DTLB_MULTI_MATCH_FIELD 3,3

#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_DTLB_ENTRY_SHIFT 4
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_DTLB_ENTRY_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_DTLB_ENTRY_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_DTLB_ENTRY_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_DTLB_ENTRY_MASK  0x10
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_DTLB_ENTRY_FIELD 4,4

#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_ATOMIC_ATTRIBUTE_SHIFT 5
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_ATOMIC_ATTRIBUTE_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_ATOMIC_ATTRIBUTE_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_ATOMIC_ATTRIBUTE_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_ATOMIC_ATTRIBUTE_MASK  0x20
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_ATOMIC_ATTRIBUTE_FIELD 5,5

#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_OPCODE_ATTRIBUTE_SHIFT 6
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_OPCODE_ATTRIBUTE_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_OPCODE_ATTRIBUTE_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_OPCODE_ATTRIBUTE_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_OPCODE_ATTRIBUTE_MASK  0x40
#define SPR_MEM_ERROR_MBOX_STATUS__ILLEGAL_OPCODE_ATTRIBUTE_FIELD 6,6

#define SPR_MEM_ERROR_MBOX_STATUS__INT_L1_D_DATA_SHIFT 7
#define SPR_MEM_ERROR_MBOX_STATUS__INT_L1_D_DATA_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__INT_L1_D_DATA_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__INT_L1_D_DATA_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__INT_L1_D_DATA_MASK  0x80
#define SPR_MEM_ERROR_MBOX_STATUS__INT_L1_D_DATA_FIELD 7,7

#define SPR_MEM_ERROR_MBOX_STATUS__INT_L1_D_TAG_SHIFT 8
#define SPR_MEM_ERROR_MBOX_STATUS__INT_L1_D_TAG_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__INT_L1_D_TAG_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__INT_L1_D_TAG_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__INT_L1_D_TAG_MASK  0x100
#define SPR_MEM_ERROR_MBOX_STATUS__INT_L1_D_TAG_FIELD 8,8

#define SPR_MEM_ERROR_MBOX_STATUS__INT_DTLB_MULTI_MATCH_SHIFT 9
#define SPR_MEM_ERROR_MBOX_STATUS__INT_DTLB_MULTI_MATCH_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__INT_DTLB_MULTI_MATCH_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__INT_DTLB_MULTI_MATCH_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__INT_DTLB_MULTI_MATCH_MASK  0x200
#define SPR_MEM_ERROR_MBOX_STATUS__INT_DTLB_MULTI_MATCH_FIELD 9,9

#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_DTLB_ENTRY_SHIFT 10
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_DTLB_ENTRY_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_DTLB_ENTRY_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_DTLB_ENTRY_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_DTLB_ENTRY_MASK  0x400
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_DTLB_ENTRY_FIELD 10,10

#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_ATOMIC_ATTRIBUTE_SHIFT 11
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_ATOMIC_ATTRIBUTE_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_ATOMIC_ATTRIBUTE_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_ATOMIC_ATTRIBUTE_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_ATOMIC_ATTRIBUTE_MASK  0x800
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_ATOMIC_ATTRIBUTE_FIELD 11,11

#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_OPCODE_ATTRIBUTE_SHIFT 12
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_OPCODE_ATTRIBUTE_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_OPCODE_ATTRIBUTE_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_OPCODE_ATTRIBUTE_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_OPCODE_ATTRIBUTE_MASK  0x1000
#define SPR_MEM_ERROR_MBOX_STATUS__INT_ILLEGAL_OPCODE_ATTRIBUTE_FIELD 12,12

#define SPR_MEM_ERROR_MBOX_STATUS__OVERFLOW_SHIFT 13
#define SPR_MEM_ERROR_MBOX_STATUS__OVERFLOW_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__OVERFLOW_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__OVERFLOW_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__OVERFLOW_MASK  0x2000
#define SPR_MEM_ERROR_MBOX_STATUS__OVERFLOW_FIELD 13,13

#define SPR_MEM_ERROR_MBOX_STATUS__WAY0_ERROR_SHIFT 14
#define SPR_MEM_ERROR_MBOX_STATUS__WAY0_ERROR_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__WAY0_ERROR_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__WAY0_ERROR_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__WAY0_ERROR_MASK  0x4000
#define SPR_MEM_ERROR_MBOX_STATUS__WAY0_ERROR_FIELD 14,14

#define SPR_MEM_ERROR_MBOX_STATUS__WAY1_ERROR_SHIFT 15
#define SPR_MEM_ERROR_MBOX_STATUS__WAY1_ERROR_WIDTH 1
#define SPR_MEM_ERROR_MBOX_STATUS__WAY1_ERROR_RESET_VAL 0
#define SPR_MEM_ERROR_MBOX_STATUS__WAY1_ERROR_RMASK 0x1
#define SPR_MEM_ERROR_MBOX_STATUS__WAY1_ERROR_MASK  0x8000
#define SPR_MEM_ERROR_MBOX_STATUS__WAY1_ERROR_FIELD 15,15


/*
 * Mem Route Order.
 * This register specifies x-y or y-x routing for the QDN, RDN and SDN.
 */
#define SPR_MEM_ROUTE_ORDER 0x261c

#define SPR_MEM_ROUTE_ORDER__QDN_ROUTE_X_FIRST_SHIFT 0
#define SPR_MEM_ROUTE_ORDER__QDN_ROUTE_X_FIRST_WIDTH 1
#define SPR_MEM_ROUTE_ORDER__QDN_ROUTE_X_FIRST_RESET_VAL 0
#define SPR_MEM_ROUTE_ORDER__QDN_ROUTE_X_FIRST_RMASK 0x1
#define SPR_MEM_ROUTE_ORDER__QDN_ROUTE_X_FIRST_MASK  0x1
#define SPR_MEM_ROUTE_ORDER__QDN_ROUTE_X_FIRST_FIELD 0,0

#define SPR_MEM_ROUTE_ORDER__RDN_ROUTE_X_FIRST_SHIFT 1
#define SPR_MEM_ROUTE_ORDER__RDN_ROUTE_X_FIRST_WIDTH 1
#define SPR_MEM_ROUTE_ORDER__RDN_ROUTE_X_FIRST_RESET_VAL 1
#define SPR_MEM_ROUTE_ORDER__RDN_ROUTE_X_FIRST_RMASK 0x1
#define SPR_MEM_ROUTE_ORDER__RDN_ROUTE_X_FIRST_MASK  0x2
#define SPR_MEM_ROUTE_ORDER__RDN_ROUTE_X_FIRST_FIELD 1,1

#define SPR_MEM_ROUTE_ORDER__SDN_ROUTE_X_FIRST_SHIFT 2
#define SPR_MEM_ROUTE_ORDER__SDN_ROUTE_X_FIRST_WIDTH 1
#define SPR_MEM_ROUTE_ORDER__SDN_ROUTE_X_FIRST_RESET_VAL 0
#define SPR_MEM_ROUTE_ORDER__SDN_ROUTE_X_FIRST_RMASK 0x1
#define SPR_MEM_ROUTE_ORDER__SDN_ROUTE_X_FIRST_MASK  0x4
#define SPR_MEM_ROUTE_ORDER__SDN_ROUTE_X_FIRST_FIELD 2,2


/*
 * Memory Stripe Configuration.
 * This register indicates the memory stripe configuration. The memory
 * controller location specified by CBOX_MMAP_0/1/2/3 is chosen by a two-bit
 * vector generated by a hashing function using physical address bits
 * selected by the register.
 */
#define SPR_MEM_STRIPE_CONFIG 0x261d

#define SPR_MEM_STRIPE_CONFIG__MODE0_SHIFT 0
#define SPR_MEM_STRIPE_CONFIG__MODE0_WIDTH 2
#define SPR_MEM_STRIPE_CONFIG__MODE0_RESET_VAL 0
#define SPR_MEM_STRIPE_CONFIG__MODE0_RMASK 0x3
#define SPR_MEM_STRIPE_CONFIG__MODE0_MASK  0x3
#define SPR_MEM_STRIPE_CONFIG__MODE0_FIELD 0,1

#define SPR_MEM_STRIPE_CONFIG__MODE1_SHIFT 2
#define SPR_MEM_STRIPE_CONFIG__MODE1_WIDTH 2
#define SPR_MEM_STRIPE_CONFIG__MODE1_RESET_VAL 0
#define SPR_MEM_STRIPE_CONFIG__MODE1_RMASK 0x3
#define SPR_MEM_STRIPE_CONFIG__MODE1_MASK  0xc
#define SPR_MEM_STRIPE_CONFIG__MODE1_FIELD 2,3

#define SPR_MEM_STRIPE_CONFIG__MODE2_SHIFT 4
#define SPR_MEM_STRIPE_CONFIG__MODE2_WIDTH 2
#define SPR_MEM_STRIPE_CONFIG__MODE2_RESET_VAL 0
#define SPR_MEM_STRIPE_CONFIG__MODE2_RMASK 0x3
#define SPR_MEM_STRIPE_CONFIG__MODE2_MASK  0x30
#define SPR_MEM_STRIPE_CONFIG__MODE2_FIELD 4,5

#define SPR_MEM_STRIPE_CONFIG__MODE3_SHIFT 6
#define SPR_MEM_STRIPE_CONFIG__MODE3_WIDTH 2
#define SPR_MEM_STRIPE_CONFIG__MODE3_RESET_VAL 0
#define SPR_MEM_STRIPE_CONFIG__MODE3_RMASK 0x3
#define SPR_MEM_STRIPE_CONFIG__MODE3_MASK  0xc0
#define SPR_MEM_STRIPE_CONFIG__MODE3_FIELD 6,7

#define SPR_MEM_STRIPE_CONFIG__HASH_ENABLE_SHIFT 8
#define SPR_MEM_STRIPE_CONFIG__HASH_ENABLE_WIDTH 3
#define SPR_MEM_STRIPE_CONFIG__HASH_ENABLE_RESET_VAL 0
#define SPR_MEM_STRIPE_CONFIG__HASH_ENABLE_RMASK 0x7
#define SPR_MEM_STRIPE_CONFIG__HASH_ENABLE_MASK  0x700
#define SPR_MEM_STRIPE_CONFIG__HASH_ENABLE_FIELD 8,10


/*
 * Minimum Protection Level for Auxiliary Performance Counters.
 * This register specifies the protection level that handles auxiliary
 * performance counter interrupts.
 */
#define SPR_MPL_AUX_PERF_COUNT 0x2104

#define SPR_MPL_AUX_PERF_COUNT__MPL_SHIFT 0
#define SPR_MPL_AUX_PERF_COUNT__MPL_WIDTH 2
#define SPR_MPL_AUX_PERF_COUNT__MPL_RESET_VAL 3
#define SPR_MPL_AUX_PERF_COUNT__MPL_RMASK 0x3
#define SPR_MPL_AUX_PERF_COUNT__MPL_MASK  0x3
#define SPR_MPL_AUX_PERF_COUNT__MPL_FIELD 0,1


/*
 * MPL_AUX_PERF_COUNT Set to Protection Level 0.
 * Writing a one to this register sets MPL_AUX_PERF_COUNT to 0
 */
#define SPR_MPL_AUX_PERF_COUNT_SET_0 0x2100

#define SPR_MPL_AUX_PERF_COUNT_SET_0__SET_SHIFT 0
#define SPR_MPL_AUX_PERF_COUNT_SET_0__SET_WIDTH 1
#define SPR_MPL_AUX_PERF_COUNT_SET_0__SET_RESET_VAL 0
#define SPR_MPL_AUX_PERF_COUNT_SET_0__SET_RMASK 0x1
#define SPR_MPL_AUX_PERF_COUNT_SET_0__SET_MASK  0x1
#define SPR_MPL_AUX_PERF_COUNT_SET_0__SET_FIELD 0,0


/*
 * MPL_AUX_PERF_COUNT Set to Protection Level 1.
 * Writing a one to this register sets MPL_AUX_PERF_COUNT to 1
 */
#define SPR_MPL_AUX_PERF_COUNT_SET_1 0x2101

#define SPR_MPL_AUX_PERF_COUNT_SET_1__SET_SHIFT 0
#define SPR_MPL_AUX_PERF_COUNT_SET_1__SET_WIDTH 1
#define SPR_MPL_AUX_PERF_COUNT_SET_1__SET_RESET_VAL 0
#define SPR_MPL_AUX_PERF_COUNT_SET_1__SET_RMASK 0x1
#define SPR_MPL_AUX_PERF_COUNT_SET_1__SET_MASK  0x1
#define SPR_MPL_AUX_PERF_COUNT_SET_1__SET_FIELD 0,0


/*
 * MPL_AUX_PERF_COUNT Set to Protection Level 2.
 * Writing a one to this register sets MPL_AUX_PERF_COUNT to 2
 */
#define SPR_MPL_AUX_PERF_COUNT_SET_2 0x2102

#define SPR_MPL_AUX_PERF_COUNT_SET_2__SET_SHIFT 0
#define SPR_MPL_AUX_PERF_COUNT_SET_2__SET_WIDTH 1
#define SPR_MPL_AUX_PERF_COUNT_SET_2__SET_RESET_VAL 0
#define SPR_MPL_AUX_PERF_COUNT_SET_2__SET_RMASK 0x1
#define SPR_MPL_AUX_PERF_COUNT_SET_2__SET_MASK  0x1
#define SPR_MPL_AUX_PERF_COUNT_SET_2__SET_FIELD 0,0


/*
 * MPL_AUX_PERF_COUNT Set to Protection Level 3.
 * Writing a one to this register sets MPL_AUX_PERF_COUNT to 3
 */
#define SPR_MPL_AUX_PERF_COUNT_SET_3 0x2103

#define SPR_MPL_AUX_PERF_COUNT_SET_3__SET_SHIFT 0
#define SPR_MPL_AUX_PERF_COUNT_SET_3__SET_WIDTH 1
#define SPR_MPL_AUX_PERF_COUNT_SET_3__SET_RESET_VAL 0
#define SPR_MPL_AUX_PERF_COUNT_SET_3__SET_RMASK 0x1
#define SPR_MPL_AUX_PERF_COUNT_SET_3__SET_MASK  0x1
#define SPR_MPL_AUX_PERF_COUNT_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Auxiliary Tile Timer.
 * This register specifies the minimum protection level needed to
 * administratively access the auxiliary tile timer and it serves as the
 * protection level that handles auxiliary tile timer interrupt.
 */
#define SPR_MPL_AUX_TILE_TIMER 0x1704

#define SPR_MPL_AUX_TILE_TIMER__MPL_SHIFT 0
#define SPR_MPL_AUX_TILE_TIMER__MPL_WIDTH 2
#define SPR_MPL_AUX_TILE_TIMER__MPL_RESET_VAL 3
#define SPR_MPL_AUX_TILE_TIMER__MPL_RMASK 0x3
#define SPR_MPL_AUX_TILE_TIMER__MPL_MASK  0x3
#define SPR_MPL_AUX_TILE_TIMER__MPL_FIELD 0,1


/*
 * MPL_AUX_TILE_TIMER Set to Protection Level 0.
 * Writing a one to this register sets MPL_AUX_TILE_TIMER to 0
 */
#define SPR_MPL_AUX_TILE_TIMER_SET_0 0x1700

#define SPR_MPL_AUX_TILE_TIMER_SET_0__SET_SHIFT 0
#define SPR_MPL_AUX_TILE_TIMER_SET_0__SET_WIDTH 1
#define SPR_MPL_AUX_TILE_TIMER_SET_0__SET_RESET_VAL 0
#define SPR_MPL_AUX_TILE_TIMER_SET_0__SET_RMASK 0x1
#define SPR_MPL_AUX_TILE_TIMER_SET_0__SET_MASK  0x1
#define SPR_MPL_AUX_TILE_TIMER_SET_0__SET_FIELD 0,0


/*
 * MPL_AUX_TILE_TIMER Set to Protection Level 1.
 * Writing a one to this register sets MPL_AUX_TILE_TIMER to 1
 */
#define SPR_MPL_AUX_TILE_TIMER_SET_1 0x1701

#define SPR_MPL_AUX_TILE_TIMER_SET_1__SET_SHIFT 0
#define SPR_MPL_AUX_TILE_TIMER_SET_1__SET_WIDTH 1
#define SPR_MPL_AUX_TILE_TIMER_SET_1__SET_RESET_VAL 0
#define SPR_MPL_AUX_TILE_TIMER_SET_1__SET_RMASK 0x1
#define SPR_MPL_AUX_TILE_TIMER_SET_1__SET_MASK  0x1
#define SPR_MPL_AUX_TILE_TIMER_SET_1__SET_FIELD 0,0


/*
 * MPL_AUX_TILE_TIMER Set to Protection Level 2.
 * Writing a one to this register sets MPL_AUX_TILE_TIMER to 2
 */
#define SPR_MPL_AUX_TILE_TIMER_SET_2 0x1702

#define SPR_MPL_AUX_TILE_TIMER_SET_2__SET_SHIFT 0
#define SPR_MPL_AUX_TILE_TIMER_SET_2__SET_WIDTH 1
#define SPR_MPL_AUX_TILE_TIMER_SET_2__SET_RESET_VAL 0
#define SPR_MPL_AUX_TILE_TIMER_SET_2__SET_RMASK 0x1
#define SPR_MPL_AUX_TILE_TIMER_SET_2__SET_MASK  0x1
#define SPR_MPL_AUX_TILE_TIMER_SET_2__SET_FIELD 0,0


/*
 * MPL_AUX_TILE_TIMER Set to Protection Level 3.
 * Writing a one to this register sets MPL_AUX_TILE_TIMER to 3
 */
#define SPR_MPL_AUX_TILE_TIMER_SET_3 0x1703

#define SPR_MPL_AUX_TILE_TIMER_SET_3__SET_SHIFT 0
#define SPR_MPL_AUX_TILE_TIMER_SET_3__SET_WIDTH 1
#define SPR_MPL_AUX_TILE_TIMER_SET_3__SET_RESET_VAL 0
#define SPR_MPL_AUX_TILE_TIMER_SET_3__SET_RMASK 0x1
#define SPR_MPL_AUX_TILE_TIMER_SET_3__SET_MASK  0x1
#define SPR_MPL_AUX_TILE_TIMER_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Boot Access.
 * This register specifies the protection level needed to administratively
 * access the boot level controls.
 */
#define SPR_MPL_BOOT_ACCESS 0x2604

#define SPR_MPL_BOOT_ACCESS__MPL_SHIFT 0
#define SPR_MPL_BOOT_ACCESS__MPL_WIDTH 2
#define SPR_MPL_BOOT_ACCESS__MPL_RESET_VAL 3
#define SPR_MPL_BOOT_ACCESS__MPL_RMASK 0x3
#define SPR_MPL_BOOT_ACCESS__MPL_MASK  0x3
#define SPR_MPL_BOOT_ACCESS__MPL_FIELD 0,1


/*
 * MPL_BOOT_ACCESS Set to Protection Level 0.
 * Writing a one to this register sets MPL_BOOT_ACCESS to 0
 */
#define SPR_MPL_BOOT_ACCESS_SET_0 0x2600

#define SPR_MPL_BOOT_ACCESS_SET_0__SET_SHIFT 0
#define SPR_MPL_BOOT_ACCESS_SET_0__SET_WIDTH 1
#define SPR_MPL_BOOT_ACCESS_SET_0__SET_RESET_VAL 0
#define SPR_MPL_BOOT_ACCESS_SET_0__SET_RMASK 0x1
#define SPR_MPL_BOOT_ACCESS_SET_0__SET_MASK  0x1
#define SPR_MPL_BOOT_ACCESS_SET_0__SET_FIELD 0,0


/*
 * MPL_BOOT_ACCESS Set to Protection Level 1.
 * Writing a one to this register sets MPL_BOOT_ACCESS to 1
 */
#define SPR_MPL_BOOT_ACCESS_SET_1 0x2601

#define SPR_MPL_BOOT_ACCESS_SET_1__SET_SHIFT 0
#define SPR_MPL_BOOT_ACCESS_SET_1__SET_WIDTH 1
#define SPR_MPL_BOOT_ACCESS_SET_1__SET_RESET_VAL 0
#define SPR_MPL_BOOT_ACCESS_SET_1__SET_RMASK 0x1
#define SPR_MPL_BOOT_ACCESS_SET_1__SET_MASK  0x1
#define SPR_MPL_BOOT_ACCESS_SET_1__SET_FIELD 0,0


/*
 * MPL_BOOT_ACCESS Set to Protection Level 2.
 * Writing a one to this register sets MPL_BOOT_ACCESS to 2
 */
#define SPR_MPL_BOOT_ACCESS_SET_2 0x2602

#define SPR_MPL_BOOT_ACCESS_SET_2__SET_SHIFT 0
#define SPR_MPL_BOOT_ACCESS_SET_2__SET_WIDTH 1
#define SPR_MPL_BOOT_ACCESS_SET_2__SET_RESET_VAL 0
#define SPR_MPL_BOOT_ACCESS_SET_2__SET_RMASK 0x1
#define SPR_MPL_BOOT_ACCESS_SET_2__SET_MASK  0x1
#define SPR_MPL_BOOT_ACCESS_SET_2__SET_FIELD 0,0


/*
 * MPL_BOOT_ACCESS Set to Protection Level 3.
 * Writing a one to this register sets MPL_BOOT_ACCESS to 3
 */
#define SPR_MPL_BOOT_ACCESS_SET_3 0x2603

#define SPR_MPL_BOOT_ACCESS_SET_3__SET_SHIFT 0
#define SPR_MPL_BOOT_ACCESS_SET_3__SET_WIDTH 1
#define SPR_MPL_BOOT_ACCESS_SET_3__SET_RESET_VAL 0
#define SPR_MPL_BOOT_ACCESS_SET_3__SET_RMASK 0x1
#define SPR_MPL_BOOT_ACCESS_SET_3__SET_MASK  0x1
#define SPR_MPL_BOOT_ACCESS_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Double Fault Interrupt.
 * This register specifies the protection level that handles double fault
 * interrupts.
 */
#define SPR_MPL_DOUBLE_FAULT 0x2a04

#define SPR_MPL_DOUBLE_FAULT__MPL_SHIFT 0
#define SPR_MPL_DOUBLE_FAULT__MPL_WIDTH 2
#define SPR_MPL_DOUBLE_FAULT__MPL_RESET_VAL 3
#define SPR_MPL_DOUBLE_FAULT__MPL_RMASK 0x3
#define SPR_MPL_DOUBLE_FAULT__MPL_MASK  0x3
#define SPR_MPL_DOUBLE_FAULT__MPL_FIELD 0,1


/*
 * MPL_DOUBLE_FAULT Set to Protection Level 0.
 * Writing a one to this register sets MPL_DOUBLE_FAULT to 0
 */
#define SPR_MPL_DOUBLE_FAULT_SET_0 0x2a00

#define SPR_MPL_DOUBLE_FAULT_SET_0__SET_SHIFT 0
#define SPR_MPL_DOUBLE_FAULT_SET_0__SET_WIDTH 1
#define SPR_MPL_DOUBLE_FAULT_SET_0__SET_RESET_VAL 0
#define SPR_MPL_DOUBLE_FAULT_SET_0__SET_RMASK 0x1
#define SPR_MPL_DOUBLE_FAULT_SET_0__SET_MASK  0x1
#define SPR_MPL_DOUBLE_FAULT_SET_0__SET_FIELD 0,0


/*
 * MPL_DOUBLE_FAULT Set to Protection Level 1.
 * Writing a one to this register sets MPL_DOUBLE_FAULT to 1
 */
#define SPR_MPL_DOUBLE_FAULT_SET_1 0x2a01

#define SPR_MPL_DOUBLE_FAULT_SET_1__SET_SHIFT 0
#define SPR_MPL_DOUBLE_FAULT_SET_1__SET_WIDTH 1
#define SPR_MPL_DOUBLE_FAULT_SET_1__SET_RESET_VAL 0
#define SPR_MPL_DOUBLE_FAULT_SET_1__SET_RMASK 0x1
#define SPR_MPL_DOUBLE_FAULT_SET_1__SET_MASK  0x1
#define SPR_MPL_DOUBLE_FAULT_SET_1__SET_FIELD 0,0


/*
 * MPL_DOUBLE_FAULT Set to Protection Level 2.
 * Writing a one to this register sets MPL_DOUBLE_FAULT to 2
 */
#define SPR_MPL_DOUBLE_FAULT_SET_2 0x2a02

#define SPR_MPL_DOUBLE_FAULT_SET_2__SET_SHIFT 0
#define SPR_MPL_DOUBLE_FAULT_SET_2__SET_WIDTH 1
#define SPR_MPL_DOUBLE_FAULT_SET_2__SET_RESET_VAL 0
#define SPR_MPL_DOUBLE_FAULT_SET_2__SET_RMASK 0x1
#define SPR_MPL_DOUBLE_FAULT_SET_2__SET_MASK  0x1
#define SPR_MPL_DOUBLE_FAULT_SET_2__SET_FIELD 0,0


/*
 * MPL_DOUBLE_FAULT Set to Protection Level 3.
 * Writing a one to this register sets MPL_DOUBLE_FAULT to 3
 */
#define SPR_MPL_DOUBLE_FAULT_SET_3 0x2a03

#define SPR_MPL_DOUBLE_FAULT_SET_3__SET_SHIFT 0
#define SPR_MPL_DOUBLE_FAULT_SET_3__SET_WIDTH 1
#define SPR_MPL_DOUBLE_FAULT_SET_3__SET_RESET_VAL 0
#define SPR_MPL_DOUBLE_FAULT_SET_3__SET_RMASK 0x1
#define SPR_MPL_DOUBLE_FAULT_SET_3__SET_MASK  0x1
#define SPR_MPL_DOUBLE_FAULT_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for DTLB Access Violation.
 * This register specifies the minimum protection level associated with a
 * data translation lookaside buffer access violation.
 */
#define SPR_MPL_DTLB_ACCESS 0x1304

#define SPR_MPL_DTLB_ACCESS__MPL_SHIFT 0
#define SPR_MPL_DTLB_ACCESS__MPL_WIDTH 2
#define SPR_MPL_DTLB_ACCESS__MPL_RESET_VAL 3
#define SPR_MPL_DTLB_ACCESS__MPL_RMASK 0x3
#define SPR_MPL_DTLB_ACCESS__MPL_MASK  0x3
#define SPR_MPL_DTLB_ACCESS__MPL_FIELD 0,1


/*
 * MPL_DTLB_ACCESS Set to Protection Level 0.
 * Writing a one to this register sets MPL_DTLB_ACCESS to 0
 */
#define SPR_MPL_DTLB_ACCESS_SET_0 0x1300

#define SPR_MPL_DTLB_ACCESS_SET_0__SET_SHIFT 0
#define SPR_MPL_DTLB_ACCESS_SET_0__SET_WIDTH 1
#define SPR_MPL_DTLB_ACCESS_SET_0__SET_RESET_VAL 0
#define SPR_MPL_DTLB_ACCESS_SET_0__SET_RMASK 0x1
#define SPR_MPL_DTLB_ACCESS_SET_0__SET_MASK  0x1
#define SPR_MPL_DTLB_ACCESS_SET_0__SET_FIELD 0,0


/*
 * MPL_DTLB_ACCESS Set to Protection Level 1.
 * Writing a one to this register sets MPL_DTLB_ACCESS to 1
 */
#define SPR_MPL_DTLB_ACCESS_SET_1 0x1301

#define SPR_MPL_DTLB_ACCESS_SET_1__SET_SHIFT 0
#define SPR_MPL_DTLB_ACCESS_SET_1__SET_WIDTH 1
#define SPR_MPL_DTLB_ACCESS_SET_1__SET_RESET_VAL 0
#define SPR_MPL_DTLB_ACCESS_SET_1__SET_RMASK 0x1
#define SPR_MPL_DTLB_ACCESS_SET_1__SET_MASK  0x1
#define SPR_MPL_DTLB_ACCESS_SET_1__SET_FIELD 0,0


/*
 * MPL_DTLB_ACCESS Set to Protection Level 2.
 * Writing a one to this register sets MPL_DTLB_ACCESS to 2
 */
#define SPR_MPL_DTLB_ACCESS_SET_2 0x1302

#define SPR_MPL_DTLB_ACCESS_SET_2__SET_SHIFT 0
#define SPR_MPL_DTLB_ACCESS_SET_2__SET_WIDTH 1
#define SPR_MPL_DTLB_ACCESS_SET_2__SET_RESET_VAL 0
#define SPR_MPL_DTLB_ACCESS_SET_2__SET_RMASK 0x1
#define SPR_MPL_DTLB_ACCESS_SET_2__SET_MASK  0x1
#define SPR_MPL_DTLB_ACCESS_SET_2__SET_FIELD 0,0


/*
 * MPL_DTLB_ACCESS Set to Protection Level 3.
 * Writing a one to this register sets MPL_DTLB_ACCESS to 3
 */
#define SPR_MPL_DTLB_ACCESS_SET_3 0x1303

#define SPR_MPL_DTLB_ACCESS_SET_3__SET_SHIFT 0
#define SPR_MPL_DTLB_ACCESS_SET_3__SET_WIDTH 1
#define SPR_MPL_DTLB_ACCESS_SET_3__SET_RESET_VAL 0
#define SPR_MPL_DTLB_ACCESS_SET_3__SET_RMASK 0x1
#define SPR_MPL_DTLB_ACCESS_SET_3__SET_MASK  0x1
#define SPR_MPL_DTLB_ACCESS_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for DTLB Miss.
 * This register specifies the minimum protection level associated with a
 * data translation lookaside buffer miss and specifies the minimum
 * protection level needed to administratively access the data translation
 * lookaside buffer.
 */
#define SPR_MPL_DTLB_MISS 0x1204

#define SPR_MPL_DTLB_MISS__MPL_SHIFT 0
#define SPR_MPL_DTLB_MISS__MPL_WIDTH 2
#define SPR_MPL_DTLB_MISS__MPL_RESET_VAL 3
#define SPR_MPL_DTLB_MISS__MPL_RMASK 0x3
#define SPR_MPL_DTLB_MISS__MPL_MASK  0x3
#define SPR_MPL_DTLB_MISS__MPL_FIELD 0,1


/*
 * MPL_DTLB_MISS Set to Protection Level 0.
 * Writing a one to this register sets MPL_DTLB_MISS to 0
 */
#define SPR_MPL_DTLB_MISS_SET_0 0x1200

#define SPR_MPL_DTLB_MISS_SET_0__SET_SHIFT 0
#define SPR_MPL_DTLB_MISS_SET_0__SET_WIDTH 1
#define SPR_MPL_DTLB_MISS_SET_0__SET_RESET_VAL 0
#define SPR_MPL_DTLB_MISS_SET_0__SET_RMASK 0x1
#define SPR_MPL_DTLB_MISS_SET_0__SET_MASK  0x1
#define SPR_MPL_DTLB_MISS_SET_0__SET_FIELD 0,0


/*
 * MPL_DTLB_MISS Set to Protection Level 1.
 * Writing a one to this register sets MPL_DTLB_MISS to 1
 */
#define SPR_MPL_DTLB_MISS_SET_1 0x1201

#define SPR_MPL_DTLB_MISS_SET_1__SET_SHIFT 0
#define SPR_MPL_DTLB_MISS_SET_1__SET_WIDTH 1
#define SPR_MPL_DTLB_MISS_SET_1__SET_RESET_VAL 0
#define SPR_MPL_DTLB_MISS_SET_1__SET_RMASK 0x1
#define SPR_MPL_DTLB_MISS_SET_1__SET_MASK  0x1
#define SPR_MPL_DTLB_MISS_SET_1__SET_FIELD 0,0


/*
 * MPL_DTLB_MISS Set to Protection Level 2.
 * Writing a one to this register sets MPL_DTLB_MISS to 2
 */
#define SPR_MPL_DTLB_MISS_SET_2 0x1202

#define SPR_MPL_DTLB_MISS_SET_2__SET_SHIFT 0
#define SPR_MPL_DTLB_MISS_SET_2__SET_WIDTH 1
#define SPR_MPL_DTLB_MISS_SET_2__SET_RESET_VAL 0
#define SPR_MPL_DTLB_MISS_SET_2__SET_RMASK 0x1
#define SPR_MPL_DTLB_MISS_SET_2__SET_MASK  0x1
#define SPR_MPL_DTLB_MISS_SET_2__SET_FIELD 0,0


/*
 * MPL_DTLB_MISS Set to Protection Level 3.
 * Writing a one to this register sets MPL_DTLB_MISS to 3
 */
#define SPR_MPL_DTLB_MISS_SET_3 0x1203

#define SPR_MPL_DTLB_MISS_SET_3__SET_SHIFT 0
#define SPR_MPL_DTLB_MISS_SET_3__SET_WIDTH 1
#define SPR_MPL_DTLB_MISS_SET_3__SET_RESET_VAL 0
#define SPR_MPL_DTLB_MISS_SET_3__SET_RMASK 0x1
#define SPR_MPL_DTLB_MISS_SET_3__SET_MASK  0x1
#define SPR_MPL_DTLB_MISS_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Data Address Space Identifier Access.
 * This register specifies the protection level needed to administratively
 * access the data address space identifier.
 */
#define SPR_MPL_D_ASID 0x2904

#define SPR_MPL_D_ASID__MPL_SHIFT 0
#define SPR_MPL_D_ASID__MPL_WIDTH 2
#define SPR_MPL_D_ASID__MPL_RESET_VAL 3
#define SPR_MPL_D_ASID__MPL_RMASK 0x3
#define SPR_MPL_D_ASID__MPL_MASK  0x3
#define SPR_MPL_D_ASID__MPL_FIELD 0,1


/*
 * MPL_D_ASID Set to Protection Level 0.
 * Writing a one to this register sets MPL_D_ASID to 0
 */
#define SPR_MPL_D_ASID_SET_0 0x2900

#define SPR_MPL_D_ASID_SET_0__SET_SHIFT 0
#define SPR_MPL_D_ASID_SET_0__SET_WIDTH 1
#define SPR_MPL_D_ASID_SET_0__SET_RESET_VAL 0
#define SPR_MPL_D_ASID_SET_0__SET_RMASK 0x1
#define SPR_MPL_D_ASID_SET_0__SET_MASK  0x1
#define SPR_MPL_D_ASID_SET_0__SET_FIELD 0,0


/*
 * MPL_D_ASID Set to Protection Level 1.
 * Writing a one to this register sets MPL_D_ASID to 1
 */
#define SPR_MPL_D_ASID_SET_1 0x2901

#define SPR_MPL_D_ASID_SET_1__SET_SHIFT 0
#define SPR_MPL_D_ASID_SET_1__SET_WIDTH 1
#define SPR_MPL_D_ASID_SET_1__SET_RESET_VAL 0
#define SPR_MPL_D_ASID_SET_1__SET_RMASK 0x1
#define SPR_MPL_D_ASID_SET_1__SET_MASK  0x1
#define SPR_MPL_D_ASID_SET_1__SET_FIELD 0,0


/*
 * MPL_D_ASID Set to Protection Level 2.
 * Writing a one to this register sets MPL_D_ASID to 2
 */
#define SPR_MPL_D_ASID_SET_2 0x2902

#define SPR_MPL_D_ASID_SET_2__SET_SHIFT 0
#define SPR_MPL_D_ASID_SET_2__SET_WIDTH 1
#define SPR_MPL_D_ASID_SET_2__SET_RESET_VAL 0
#define SPR_MPL_D_ASID_SET_2__SET_RMASK 0x1
#define SPR_MPL_D_ASID_SET_2__SET_MASK  0x1
#define SPR_MPL_D_ASID_SET_2__SET_FIELD 0,0


/*
 * MPL_D_ASID Set to Protection Level 3.
 * Writing a one to this register sets MPL_D_ASID to 3
 */
#define SPR_MPL_D_ASID_SET_3 0x2903

#define SPR_MPL_D_ASID_SET_3__SET_SHIFT 0
#define SPR_MPL_D_ASID_SET_3__SET_WIDTH 1
#define SPR_MPL_D_ASID_SET_3__SET_RESET_VAL 0
#define SPR_MPL_D_ASID_SET_3__SET_RMASK 0x1
#define SPR_MPL_D_ASID_SET_3__SET_MASK  0x1
#define SPR_MPL_D_ASID_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for a General Protection Violation.
 * This register specifies the protection level that a GPV is minimally
 * handled at.  It also protects the GPV_REASON spr.
 */
#define SPR_MPL_GPV 0x0904

#define SPR_MPL_GPV__MPL_SHIFT 0
#define SPR_MPL_GPV__MPL_WIDTH 2
#define SPR_MPL_GPV__MPL_RESET_VAL 3
#define SPR_MPL_GPV__MPL_RMASK 0x3
#define SPR_MPL_GPV__MPL_MASK  0x3
#define SPR_MPL_GPV__MPL_FIELD 0,1


/*
 * MPL_GPV Set to Protection Level 0.
 * Writing a one to this register sets MPL_GPV to 0
 */
#define SPR_MPL_GPV_SET_0 0x0900

#define SPR_MPL_GPV_SET_0__SET_SHIFT 0
#define SPR_MPL_GPV_SET_0__SET_WIDTH 1
#define SPR_MPL_GPV_SET_0__SET_RESET_VAL 0
#define SPR_MPL_GPV_SET_0__SET_RMASK 0x1
#define SPR_MPL_GPV_SET_0__SET_MASK  0x1
#define SPR_MPL_GPV_SET_0__SET_FIELD 0,0


/*
 * MPL_GPV Set to Protection Level 1.
 * Writing a one to this register sets MPL_GPV to 1
 */
#define SPR_MPL_GPV_SET_1 0x0901

#define SPR_MPL_GPV_SET_1__SET_SHIFT 0
#define SPR_MPL_GPV_SET_1__SET_WIDTH 1
#define SPR_MPL_GPV_SET_1__SET_RESET_VAL 0
#define SPR_MPL_GPV_SET_1__SET_RMASK 0x1
#define SPR_MPL_GPV_SET_1__SET_MASK  0x1
#define SPR_MPL_GPV_SET_1__SET_FIELD 0,0


/*
 * MPL_GPV Set to Protection Level 2.
 * Writing a one to this register sets MPL_GPV to 2
 */
#define SPR_MPL_GPV_SET_2 0x0902

#define SPR_MPL_GPV_SET_2__SET_SHIFT 0
#define SPR_MPL_GPV_SET_2__SET_WIDTH 1
#define SPR_MPL_GPV_SET_2__SET_RESET_VAL 0
#define SPR_MPL_GPV_SET_2__SET_RMASK 0x1
#define SPR_MPL_GPV_SET_2__SET_MASK  0x1
#define SPR_MPL_GPV_SET_2__SET_FIELD 0,0


/*
 * MPL_GPV Set to Protection Level 3.
 * Writing a one to this register sets MPL_GPV to 3
 */
#define SPR_MPL_GPV_SET_3 0x0903

#define SPR_MPL_GPV_SET_3__SET_SHIFT 0
#define SPR_MPL_GPV_SET_3__SET_WIDTH 1
#define SPR_MPL_GPV_SET_3__SET_RESET_VAL 0
#define SPR_MPL_GPV_SET_3__SET_RMASK 0x1
#define SPR_MPL_GPV_SET_3__SET_MASK  0x1
#define SPR_MPL_GPV_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for a I/O Dynamic Network Access Violation.
 * This register specifies the minimum protection level needed to
 * administratively access I/O dynamic network control state and it serves as
 * the protection level to handle illegal I/O dynamic network accesses.
 */
#define SPR_MPL_IDN_ACCESS 0x0a04

#define SPR_MPL_IDN_ACCESS__MPL_SHIFT 0
#define SPR_MPL_IDN_ACCESS__MPL_WIDTH 2
#define SPR_MPL_IDN_ACCESS__MPL_RESET_VAL 3
#define SPR_MPL_IDN_ACCESS__MPL_RMASK 0x3
#define SPR_MPL_IDN_ACCESS__MPL_MASK  0x3
#define SPR_MPL_IDN_ACCESS__MPL_FIELD 0,1


/*
 * MPL_IDN_ACCESS Set to Protection Level 0.
 * Writing a one to this register sets MPL_IDN_ACCESS to 0
 */
#define SPR_MPL_IDN_ACCESS_SET_0 0x0a00

#define SPR_MPL_IDN_ACCESS_SET_0__SET_SHIFT 0
#define SPR_MPL_IDN_ACCESS_SET_0__SET_WIDTH 1
#define SPR_MPL_IDN_ACCESS_SET_0__SET_RESET_VAL 0
#define SPR_MPL_IDN_ACCESS_SET_0__SET_RMASK 0x1
#define SPR_MPL_IDN_ACCESS_SET_0__SET_MASK  0x1
#define SPR_MPL_IDN_ACCESS_SET_0__SET_FIELD 0,0


/*
 * MPL_IDN_ACCESS Set to Protection Level 1.
 * Writing a one to this register sets MPL_IDN_ACCESS to 1
 */
#define SPR_MPL_IDN_ACCESS_SET_1 0x0a01

#define SPR_MPL_IDN_ACCESS_SET_1__SET_SHIFT 0
#define SPR_MPL_IDN_ACCESS_SET_1__SET_WIDTH 1
#define SPR_MPL_IDN_ACCESS_SET_1__SET_RESET_VAL 0
#define SPR_MPL_IDN_ACCESS_SET_1__SET_RMASK 0x1
#define SPR_MPL_IDN_ACCESS_SET_1__SET_MASK  0x1
#define SPR_MPL_IDN_ACCESS_SET_1__SET_FIELD 0,0


/*
 * MPL_IDN_ACCESS Set to Protection Level 2.
 * Writing a one to this register sets MPL_IDN_ACCESS to 2
 */
#define SPR_MPL_IDN_ACCESS_SET_2 0x0a02

#define SPR_MPL_IDN_ACCESS_SET_2__SET_SHIFT 0
#define SPR_MPL_IDN_ACCESS_SET_2__SET_WIDTH 1
#define SPR_MPL_IDN_ACCESS_SET_2__SET_RESET_VAL 0
#define SPR_MPL_IDN_ACCESS_SET_2__SET_RMASK 0x1
#define SPR_MPL_IDN_ACCESS_SET_2__SET_MASK  0x1
#define SPR_MPL_IDN_ACCESS_SET_2__SET_FIELD 0,0


/*
 * MPL_IDN_ACCESS Set to Protection Level 3.
 * Writing a one to this register sets MPL_IDN_ACCESS to 3
 */
#define SPR_MPL_IDN_ACCESS_SET_3 0x0a03

#define SPR_MPL_IDN_ACCESS_SET_3__SET_SHIFT 0
#define SPR_MPL_IDN_ACCESS_SET_3__SET_WIDTH 1
#define SPR_MPL_IDN_ACCESS_SET_3__SET_RESET_VAL 0
#define SPR_MPL_IDN_ACCESS_SET_3__SET_RMASK 0x1
#define SPR_MPL_IDN_ACCESS_SET_3__SET_MASK  0x1
#define SPR_MPL_IDN_ACCESS_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for I/O Dynamic Network Available.
 * This register specifies the protection level that handles I/O dynamic
 * network available interrupts.
 */
#define SPR_MPL_IDN_AVAIL 0x1a04

#define SPR_MPL_IDN_AVAIL__MPL_SHIFT 0
#define SPR_MPL_IDN_AVAIL__MPL_WIDTH 2
#define SPR_MPL_IDN_AVAIL__MPL_RESET_VAL 3
#define SPR_MPL_IDN_AVAIL__MPL_RMASK 0x3
#define SPR_MPL_IDN_AVAIL__MPL_MASK  0x3
#define SPR_MPL_IDN_AVAIL__MPL_FIELD 0,1


/*
 * MPL_IDN_AVAIL Set to Protection Level 0.
 * Writing a one to this register sets MPL_IDN_AVAIL to 0
 */
#define SPR_MPL_IDN_AVAIL_SET_0 0x1a00

#define SPR_MPL_IDN_AVAIL_SET_0__SET_SHIFT 0
#define SPR_MPL_IDN_AVAIL_SET_0__SET_WIDTH 1
#define SPR_MPL_IDN_AVAIL_SET_0__SET_RESET_VAL 0
#define SPR_MPL_IDN_AVAIL_SET_0__SET_RMASK 0x1
#define SPR_MPL_IDN_AVAIL_SET_0__SET_MASK  0x1
#define SPR_MPL_IDN_AVAIL_SET_0__SET_FIELD 0,0


/*
 * MPL_IDN_AVAIL Set to Protection Level 1.
 * Writing a one to this register sets MPL_IDN_AVAIL to 1
 */
#define SPR_MPL_IDN_AVAIL_SET_1 0x1a01

#define SPR_MPL_IDN_AVAIL_SET_1__SET_SHIFT 0
#define SPR_MPL_IDN_AVAIL_SET_1__SET_WIDTH 1
#define SPR_MPL_IDN_AVAIL_SET_1__SET_RESET_VAL 0
#define SPR_MPL_IDN_AVAIL_SET_1__SET_RMASK 0x1
#define SPR_MPL_IDN_AVAIL_SET_1__SET_MASK  0x1
#define SPR_MPL_IDN_AVAIL_SET_1__SET_FIELD 0,0


/*
 * MPL_IDN_AVAIL Set to Protection Level 2.
 * Writing a one to this register sets MPL_IDN_AVAIL to 2
 */
#define SPR_MPL_IDN_AVAIL_SET_2 0x1a02

#define SPR_MPL_IDN_AVAIL_SET_2__SET_SHIFT 0
#define SPR_MPL_IDN_AVAIL_SET_2__SET_WIDTH 1
#define SPR_MPL_IDN_AVAIL_SET_2__SET_RESET_VAL 0
#define SPR_MPL_IDN_AVAIL_SET_2__SET_RMASK 0x1
#define SPR_MPL_IDN_AVAIL_SET_2__SET_MASK  0x1
#define SPR_MPL_IDN_AVAIL_SET_2__SET_FIELD 0,0


/*
 * MPL_IDN_AVAIL Set to Protection Level 3.
 * Writing a one to this register sets MPL_IDN_AVAIL to 3
 */
#define SPR_MPL_IDN_AVAIL_SET_3 0x1a03

#define SPR_MPL_IDN_AVAIL_SET_3__SET_SHIFT 0
#define SPR_MPL_IDN_AVAIL_SET_3__SET_WIDTH 1
#define SPR_MPL_IDN_AVAIL_SET_3__SET_RESET_VAL 0
#define SPR_MPL_IDN_AVAIL_SET_3__SET_RMASK 0x1
#define SPR_MPL_IDN_AVAIL_SET_3__SET_MASK  0x1
#define SPR_MPL_IDN_AVAIL_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for I/O Dynamic Network Complete Interrupt.
 * This register specifies the minimum protection level associated with a I/O
 * dynamic network complete interrupt.
 */
#define SPR_MPL_IDN_COMPLETE 0x0504

#define SPR_MPL_IDN_COMPLETE__MPL_SHIFT 0
#define SPR_MPL_IDN_COMPLETE__MPL_WIDTH 2
#define SPR_MPL_IDN_COMPLETE__MPL_RESET_VAL 3
#define SPR_MPL_IDN_COMPLETE__MPL_RMASK 0x3
#define SPR_MPL_IDN_COMPLETE__MPL_MASK  0x3
#define SPR_MPL_IDN_COMPLETE__MPL_FIELD 0,1


/*
 * MPL_IDN_COMPLETE Set to Protection Level 0.
 * Writing a one to this register sets MPL_IDN_COMPLETE to 0
 */
#define SPR_MPL_IDN_COMPLETE_SET_0 0x0500

#define SPR_MPL_IDN_COMPLETE_SET_0__SET_SHIFT 0
#define SPR_MPL_IDN_COMPLETE_SET_0__SET_WIDTH 1
#define SPR_MPL_IDN_COMPLETE_SET_0__SET_RESET_VAL 0
#define SPR_MPL_IDN_COMPLETE_SET_0__SET_RMASK 0x1
#define SPR_MPL_IDN_COMPLETE_SET_0__SET_MASK  0x1
#define SPR_MPL_IDN_COMPLETE_SET_0__SET_FIELD 0,0


/*
 * MPL_IDN_COMPLETE Set to Protection Level 1.
 * Writing a one to this register sets MPL_IDN_COMPLETE to 1
 */
#define SPR_MPL_IDN_COMPLETE_SET_1 0x0501

#define SPR_MPL_IDN_COMPLETE_SET_1__SET_SHIFT 0
#define SPR_MPL_IDN_COMPLETE_SET_1__SET_WIDTH 1
#define SPR_MPL_IDN_COMPLETE_SET_1__SET_RESET_VAL 0
#define SPR_MPL_IDN_COMPLETE_SET_1__SET_RMASK 0x1
#define SPR_MPL_IDN_COMPLETE_SET_1__SET_MASK  0x1
#define SPR_MPL_IDN_COMPLETE_SET_1__SET_FIELD 0,0


/*
 * MPL_IDN_COMPLETE Set to Protection Level 2.
 * Writing a one to this register sets MPL_IDN_COMPLETE to 2
 */
#define SPR_MPL_IDN_COMPLETE_SET_2 0x0502

#define SPR_MPL_IDN_COMPLETE_SET_2__SET_SHIFT 0
#define SPR_MPL_IDN_COMPLETE_SET_2__SET_WIDTH 1
#define SPR_MPL_IDN_COMPLETE_SET_2__SET_RESET_VAL 0
#define SPR_MPL_IDN_COMPLETE_SET_2__SET_RMASK 0x1
#define SPR_MPL_IDN_COMPLETE_SET_2__SET_MASK  0x1
#define SPR_MPL_IDN_COMPLETE_SET_2__SET_FIELD 0,0


/*
 * MPL_IDN_COMPLETE Set to Protection Level 3.
 * Writing a one to this register sets MPL_IDN_COMPLETE to 3
 */
#define SPR_MPL_IDN_COMPLETE_SET_3 0x0503

#define SPR_MPL_IDN_COMPLETE_SET_3__SET_SHIFT 0
#define SPR_MPL_IDN_COMPLETE_SET_3__SET_WIDTH 1
#define SPR_MPL_IDN_COMPLETE_SET_3__SET_RESET_VAL 0
#define SPR_MPL_IDN_COMPLETE_SET_3__SET_RMASK 0x1
#define SPR_MPL_IDN_COMPLETE_SET_3__SET_MASK  0x1
#define SPR_MPL_IDN_COMPLETE_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for I/O Dynamic Network Firewall Violation.
 * This register specifies the minimum protection level needed to
 * administratively access the I/O dynamic network firewall controls and it
 * serves as the protection level that handles I/O dynamic network firewall
 * violation interrupts.
 */
#define SPR_MPL_IDN_FIREWALL 0x1404

#define SPR_MPL_IDN_FIREWALL__MPL_SHIFT 0
#define SPR_MPL_IDN_FIREWALL__MPL_WIDTH 2
#define SPR_MPL_IDN_FIREWALL__MPL_RESET_VAL 3
#define SPR_MPL_IDN_FIREWALL__MPL_RMASK 0x3
#define SPR_MPL_IDN_FIREWALL__MPL_MASK  0x3
#define SPR_MPL_IDN_FIREWALL__MPL_FIELD 0,1


/*
 * MPL_IDN_FIREWALL Set to Protection Level 0.
 * Writing a one to this register sets MPL_IDN_FIREWALL to 0
 */
#define SPR_MPL_IDN_FIREWALL_SET_0 0x1400

#define SPR_MPL_IDN_FIREWALL_SET_0__SET_SHIFT 0
#define SPR_MPL_IDN_FIREWALL_SET_0__SET_WIDTH 1
#define SPR_MPL_IDN_FIREWALL_SET_0__SET_RESET_VAL 0
#define SPR_MPL_IDN_FIREWALL_SET_0__SET_RMASK 0x1
#define SPR_MPL_IDN_FIREWALL_SET_0__SET_MASK  0x1
#define SPR_MPL_IDN_FIREWALL_SET_0__SET_FIELD 0,0


/*
 * MPL_IDN_FIREWALL Set to Protection Level 1.
 * Writing a one to this register sets MPL_IDN_FIREWALL to 1
 */
#define SPR_MPL_IDN_FIREWALL_SET_1 0x1401

#define SPR_MPL_IDN_FIREWALL_SET_1__SET_SHIFT 0
#define SPR_MPL_IDN_FIREWALL_SET_1__SET_WIDTH 1
#define SPR_MPL_IDN_FIREWALL_SET_1__SET_RESET_VAL 0
#define SPR_MPL_IDN_FIREWALL_SET_1__SET_RMASK 0x1
#define SPR_MPL_IDN_FIREWALL_SET_1__SET_MASK  0x1
#define SPR_MPL_IDN_FIREWALL_SET_1__SET_FIELD 0,0


/*
 * MPL_IDN_FIREWALL Set to Protection Level 2.
 * Writing a one to this register sets MPL_IDN_FIREWALL to 2
 */
#define SPR_MPL_IDN_FIREWALL_SET_2 0x1402

#define SPR_MPL_IDN_FIREWALL_SET_2__SET_SHIFT 0
#define SPR_MPL_IDN_FIREWALL_SET_2__SET_WIDTH 1
#define SPR_MPL_IDN_FIREWALL_SET_2__SET_RESET_VAL 0
#define SPR_MPL_IDN_FIREWALL_SET_2__SET_RMASK 0x1
#define SPR_MPL_IDN_FIREWALL_SET_2__SET_MASK  0x1
#define SPR_MPL_IDN_FIREWALL_SET_2__SET_FIELD 0,0


/*
 * MPL_IDN_FIREWALL Set to Protection Level 3.
 * Writing a one to this register sets MPL_IDN_FIREWALL to 3
 */
#define SPR_MPL_IDN_FIREWALL_SET_3 0x1403

#define SPR_MPL_IDN_FIREWALL_SET_3__SET_SHIFT 0
#define SPR_MPL_IDN_FIREWALL_SET_3__SET_WIDTH 1
#define SPR_MPL_IDN_FIREWALL_SET_3__SET_RESET_VAL 0
#define SPR_MPL_IDN_FIREWALL_SET_3__SET_RMASK 0x1
#define SPR_MPL_IDN_FIREWALL_SET_3__SET_MASK  0x1
#define SPR_MPL_IDN_FIREWALL_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for I/O Dynamic Network Timer.
 * This register specifies the minimum protection level needed to
 * administratively access the I/O dynamic network controls and it serves as
 * the protection level that handles I/O dynamic network timer interrupts.
 */
#define SPR_MPL_IDN_TIMER 0x1804

#define SPR_MPL_IDN_TIMER__MPL_SHIFT 0
#define SPR_MPL_IDN_TIMER__MPL_WIDTH 2
#define SPR_MPL_IDN_TIMER__MPL_RESET_VAL 3
#define SPR_MPL_IDN_TIMER__MPL_RMASK 0x3
#define SPR_MPL_IDN_TIMER__MPL_MASK  0x3
#define SPR_MPL_IDN_TIMER__MPL_FIELD 0,1


/*
 * MPL_IDN_TIMER Set to Protection Level 0.
 * Writing a one to this register sets MPL_IDN_TIMER to 0
 */
#define SPR_MPL_IDN_TIMER_SET_0 0x1800

#define SPR_MPL_IDN_TIMER_SET_0__SET_SHIFT 0
#define SPR_MPL_IDN_TIMER_SET_0__SET_WIDTH 1
#define SPR_MPL_IDN_TIMER_SET_0__SET_RESET_VAL 0
#define SPR_MPL_IDN_TIMER_SET_0__SET_RMASK 0x1
#define SPR_MPL_IDN_TIMER_SET_0__SET_MASK  0x1
#define SPR_MPL_IDN_TIMER_SET_0__SET_FIELD 0,0


/*
 * MPL_IDN_TIMER Set to Protection Level 1.
 * Writing a one to this register sets MPL_IDN_TIMER to 1
 */
#define SPR_MPL_IDN_TIMER_SET_1 0x1801

#define SPR_MPL_IDN_TIMER_SET_1__SET_SHIFT 0
#define SPR_MPL_IDN_TIMER_SET_1__SET_WIDTH 1
#define SPR_MPL_IDN_TIMER_SET_1__SET_RESET_VAL 0
#define SPR_MPL_IDN_TIMER_SET_1__SET_RMASK 0x1
#define SPR_MPL_IDN_TIMER_SET_1__SET_MASK  0x1
#define SPR_MPL_IDN_TIMER_SET_1__SET_FIELD 0,0


/*
 * MPL_IDN_TIMER Set to Protection Level 2.
 * Writing a one to this register sets MPL_IDN_TIMER to 2
 */
#define SPR_MPL_IDN_TIMER_SET_2 0x1802

#define SPR_MPL_IDN_TIMER_SET_2__SET_SHIFT 0
#define SPR_MPL_IDN_TIMER_SET_2__SET_WIDTH 1
#define SPR_MPL_IDN_TIMER_SET_2__SET_RESET_VAL 0
#define SPR_MPL_IDN_TIMER_SET_2__SET_RMASK 0x1
#define SPR_MPL_IDN_TIMER_SET_2__SET_MASK  0x1
#define SPR_MPL_IDN_TIMER_SET_2__SET_FIELD 0,0


/*
 * MPL_IDN_TIMER Set to Protection Level 3.
 * Writing a one to this register sets MPL_IDN_TIMER to 3
 */
#define SPR_MPL_IDN_TIMER_SET_3 0x1803

#define SPR_MPL_IDN_TIMER_SET_3__SET_SHIFT 0
#define SPR_MPL_IDN_TIMER_SET_3__SET_WIDTH 1
#define SPR_MPL_IDN_TIMER_SET_3__SET_RESET_VAL 0
#define SPR_MPL_IDN_TIMER_SET_3__SET_RMASK 0x1
#define SPR_MPL_IDN_TIMER_SET_3__SET_MASK  0x1
#define SPR_MPL_IDN_TIMER_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for a Illegal Instruction.
 * This register specifies the protection level that a illegal instruction
 * interrupt is minimally handled at.
 */
#define SPR_MPL_ILL 0x0804

#define SPR_MPL_ILL__MPL_SHIFT 0
#define SPR_MPL_ILL__MPL_WIDTH 2
#define SPR_MPL_ILL__MPL_RESET_VAL 3
#define SPR_MPL_ILL__MPL_RMASK 0x3
#define SPR_MPL_ILL__MPL_MASK  0x3
#define SPR_MPL_ILL__MPL_FIELD 0,1


/*
 * MPL_ILL Set to Protection Level 0.
 * Writing a one to this register sets MPL_ILL to 0
 */
#define SPR_MPL_ILL_SET_0 0x0800

#define SPR_MPL_ILL_SET_0__SET_SHIFT 0
#define SPR_MPL_ILL_SET_0__SET_WIDTH 1
#define SPR_MPL_ILL_SET_0__SET_RESET_VAL 0
#define SPR_MPL_ILL_SET_0__SET_RMASK 0x1
#define SPR_MPL_ILL_SET_0__SET_MASK  0x1
#define SPR_MPL_ILL_SET_0__SET_FIELD 0,0


/*
 * MPL_ILL Set to Protection Level 1.
 * Writing a one to this register sets MPL_ILL to 1
 */
#define SPR_MPL_ILL_SET_1 0x0801

#define SPR_MPL_ILL_SET_1__SET_SHIFT 0
#define SPR_MPL_ILL_SET_1__SET_WIDTH 1
#define SPR_MPL_ILL_SET_1__SET_RESET_VAL 0
#define SPR_MPL_ILL_SET_1__SET_RMASK 0x1
#define SPR_MPL_ILL_SET_1__SET_MASK  0x1
#define SPR_MPL_ILL_SET_1__SET_FIELD 0,0


/*
 * MPL_ILL Set to Protection Level 2.
 * Writing a one to this register sets MPL_ILL to 2
 */
#define SPR_MPL_ILL_SET_2 0x0802

#define SPR_MPL_ILL_SET_2__SET_SHIFT 0
#define SPR_MPL_ILL_SET_2__SET_WIDTH 1
#define SPR_MPL_ILL_SET_2__SET_RESET_VAL 0
#define SPR_MPL_ILL_SET_2__SET_RMASK 0x1
#define SPR_MPL_ILL_SET_2__SET_MASK  0x1
#define SPR_MPL_ILL_SET_2__SET_FIELD 0,0


/*
 * MPL_ILL Set to Protection Level 3.
 * Writing a one to this register sets MPL_ILL to 3
 */
#define SPR_MPL_ILL_SET_3 0x0803

#define SPR_MPL_ILL_SET_3__SET_SHIFT 0
#define SPR_MPL_ILL_SET_3__SET_WIDTH 1
#define SPR_MPL_ILL_SET_3__SET_RESET_VAL 0
#define SPR_MPL_ILL_SET_3__SET_RMASK 0x1
#define SPR_MPL_ILL_SET_3__SET_MASK  0x1
#define SPR_MPL_ILL_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for a Illegal Translation.
 * This register specifies the protection level that a illegal translation
 * interrupt is minimally handled at.
 */
#define SPR_MPL_ILL_TRANS 0x1004

#define SPR_MPL_ILL_TRANS__MPL_SHIFT 0
#define SPR_MPL_ILL_TRANS__MPL_WIDTH 2
#define SPR_MPL_ILL_TRANS__MPL_RESET_VAL 3
#define SPR_MPL_ILL_TRANS__MPL_RMASK 0x3
#define SPR_MPL_ILL_TRANS__MPL_MASK  0x3
#define SPR_MPL_ILL_TRANS__MPL_FIELD 0,1


/*
 * MPL_ILL_TRANS Set to Protection Level 0.
 * Writing a one to this register sets MPL_ILL_TRANS to 0
 */
#define SPR_MPL_ILL_TRANS_SET_0 0x1000

#define SPR_MPL_ILL_TRANS_SET_0__SET_SHIFT 0
#define SPR_MPL_ILL_TRANS_SET_0__SET_WIDTH 1
#define SPR_MPL_ILL_TRANS_SET_0__SET_RESET_VAL 0
#define SPR_MPL_ILL_TRANS_SET_0__SET_RMASK 0x1
#define SPR_MPL_ILL_TRANS_SET_0__SET_MASK  0x1
#define SPR_MPL_ILL_TRANS_SET_0__SET_FIELD 0,0


/*
 * MPL_ILL_TRANS Set to Protection Level 1.
 * Writing a one to this register sets MPL_ILL_TRANS to 1
 */
#define SPR_MPL_ILL_TRANS_SET_1 0x1001

#define SPR_MPL_ILL_TRANS_SET_1__SET_SHIFT 0
#define SPR_MPL_ILL_TRANS_SET_1__SET_WIDTH 1
#define SPR_MPL_ILL_TRANS_SET_1__SET_RESET_VAL 0
#define SPR_MPL_ILL_TRANS_SET_1__SET_RMASK 0x1
#define SPR_MPL_ILL_TRANS_SET_1__SET_MASK  0x1
#define SPR_MPL_ILL_TRANS_SET_1__SET_FIELD 0,0


/*
 * MPL_ILL_TRANS Set to Protection Level 2.
 * Writing a one to this register sets MPL_ILL_TRANS to 2
 */
#define SPR_MPL_ILL_TRANS_SET_2 0x1002

#define SPR_MPL_ILL_TRANS_SET_2__SET_SHIFT 0
#define SPR_MPL_ILL_TRANS_SET_2__SET_WIDTH 1
#define SPR_MPL_ILL_TRANS_SET_2__SET_RESET_VAL 0
#define SPR_MPL_ILL_TRANS_SET_2__SET_RMASK 0x1
#define SPR_MPL_ILL_TRANS_SET_2__SET_MASK  0x1
#define SPR_MPL_ILL_TRANS_SET_2__SET_FIELD 0,0


/*
 * MPL_ILL_TRANS Set to Protection Level 3.
 * Writing a one to this register sets MPL_ILL_TRANS to 3
 */
#define SPR_MPL_ILL_TRANS_SET_3 0x1003

#define SPR_MPL_ILL_TRANS_SET_3__SET_SHIFT 0
#define SPR_MPL_ILL_TRANS_SET_3__SET_WIDTH 1
#define SPR_MPL_ILL_TRANS_SET_3__SET_RESET_VAL 0
#define SPR_MPL_ILL_TRANS_SET_3__SET_RMASK 0x1
#define SPR_MPL_ILL_TRANS_SET_3__SET_MASK  0x1
#define SPR_MPL_ILL_TRANS_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Interrupt Control 0.
 * This register specifies the protection level that handles interrupt
 * control 0 interrupts.
 */
#define SPR_MPL_INTCTRL_0 0x2504

#define SPR_MPL_INTCTRL_0__MPL_SHIFT 0
#define SPR_MPL_INTCTRL_0__MPL_WIDTH 2
#define SPR_MPL_INTCTRL_0__MPL_RESET_VAL 3
#define SPR_MPL_INTCTRL_0__MPL_RMASK 0x3
#define SPR_MPL_INTCTRL_0__MPL_MASK  0x3
#define SPR_MPL_INTCTRL_0__MPL_FIELD 0,1


/*
 * MPL_INTCTRL_0 Set to Protection Level 0.
 * Writing a one to this register sets MPL_INTCTRL_0 to 0
 */
#define SPR_MPL_INTCTRL_0_SET_0 0x2500

#define SPR_MPL_INTCTRL_0_SET_0__SET_SHIFT 0
#define SPR_MPL_INTCTRL_0_SET_0__SET_WIDTH 1
#define SPR_MPL_INTCTRL_0_SET_0__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_0_SET_0__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_0_SET_0__SET_MASK  0x1
#define SPR_MPL_INTCTRL_0_SET_0__SET_FIELD 0,0


/*
 * MPL_INTCTRL_0 Set to Protection Level 1.
 * Writing a one to this register sets MPL_INTCTRL_0 to 1
 */
#define SPR_MPL_INTCTRL_0_SET_1 0x2501

#define SPR_MPL_INTCTRL_0_SET_1__SET_SHIFT 0
#define SPR_MPL_INTCTRL_0_SET_1__SET_WIDTH 1
#define SPR_MPL_INTCTRL_0_SET_1__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_0_SET_1__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_0_SET_1__SET_MASK  0x1
#define SPR_MPL_INTCTRL_0_SET_1__SET_FIELD 0,0


/*
 * MPL_INTCTRL_0 Set to Protection Level 2.
 * Writing a one to this register sets MPL_INTCTRL_0 to 2
 */
#define SPR_MPL_INTCTRL_0_SET_2 0x2502

#define SPR_MPL_INTCTRL_0_SET_2__SET_SHIFT 0
#define SPR_MPL_INTCTRL_0_SET_2__SET_WIDTH 1
#define SPR_MPL_INTCTRL_0_SET_2__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_0_SET_2__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_0_SET_2__SET_MASK  0x1
#define SPR_MPL_INTCTRL_0_SET_2__SET_FIELD 0,0


/*
 * MPL_INTCTRL_0 Set to Protection Level 3.
 * Writing a one to this register sets MPL_INTCTRL_0 to 3
 */
#define SPR_MPL_INTCTRL_0_SET_3 0x2503

#define SPR_MPL_INTCTRL_0_SET_3__SET_SHIFT 0
#define SPR_MPL_INTCTRL_0_SET_3__SET_WIDTH 1
#define SPR_MPL_INTCTRL_0_SET_3__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_0_SET_3__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_0_SET_3__SET_MASK  0x1
#define SPR_MPL_INTCTRL_0_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Interrupt Control 1.
 * This register specifies the protection level that handles interrupt
 * control 1 interrupts.
 */
#define SPR_MPL_INTCTRL_1 0x2404

#define SPR_MPL_INTCTRL_1__MPL_SHIFT 0
#define SPR_MPL_INTCTRL_1__MPL_WIDTH 2
#define SPR_MPL_INTCTRL_1__MPL_RESET_VAL 3
#define SPR_MPL_INTCTRL_1__MPL_RMASK 0x3
#define SPR_MPL_INTCTRL_1__MPL_MASK  0x3
#define SPR_MPL_INTCTRL_1__MPL_FIELD 0,1


/*
 * MPL_INTCTRL_1 Set to Protection Level 0.
 * Writing a one to this register sets MPL_INTCTRL_1 to 0
 */
#define SPR_MPL_INTCTRL_1_SET_0 0x2400

#define SPR_MPL_INTCTRL_1_SET_0__SET_SHIFT 0
#define SPR_MPL_INTCTRL_1_SET_0__SET_WIDTH 1
#define SPR_MPL_INTCTRL_1_SET_0__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_1_SET_0__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_1_SET_0__SET_MASK  0x1
#define SPR_MPL_INTCTRL_1_SET_0__SET_FIELD 0,0


/*
 * MPL_INTCTRL_1 Set to Protection Level 1.
 * Writing a one to this register sets MPL_INTCTRL_1 to 1
 */
#define SPR_MPL_INTCTRL_1_SET_1 0x2401

#define SPR_MPL_INTCTRL_1_SET_1__SET_SHIFT 0
#define SPR_MPL_INTCTRL_1_SET_1__SET_WIDTH 1
#define SPR_MPL_INTCTRL_1_SET_1__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_1_SET_1__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_1_SET_1__SET_MASK  0x1
#define SPR_MPL_INTCTRL_1_SET_1__SET_FIELD 0,0


/*
 * MPL_INTCTRL_1 Set to Protection Level 2.
 * Writing a one to this register sets MPL_INTCTRL_1 to 2
 */
#define SPR_MPL_INTCTRL_1_SET_2 0x2402

#define SPR_MPL_INTCTRL_1_SET_2__SET_SHIFT 0
#define SPR_MPL_INTCTRL_1_SET_2__SET_WIDTH 1
#define SPR_MPL_INTCTRL_1_SET_2__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_1_SET_2__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_1_SET_2__SET_MASK  0x1
#define SPR_MPL_INTCTRL_1_SET_2__SET_FIELD 0,0


/*
 * MPL_INTCTRL_1 Set to Protection Level 3.
 * Writing a one to this register sets MPL_INTCTRL_1 to 3
 */
#define SPR_MPL_INTCTRL_1_SET_3 0x2403

#define SPR_MPL_INTCTRL_1_SET_3__SET_SHIFT 0
#define SPR_MPL_INTCTRL_1_SET_3__SET_WIDTH 1
#define SPR_MPL_INTCTRL_1_SET_3__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_1_SET_3__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_1_SET_3__SET_MASK  0x1
#define SPR_MPL_INTCTRL_1_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Interrupt Control 2.
 * This register specifies the protection level that handles interrupt
 * control 2 interrupts.
 */
#define SPR_MPL_INTCTRL_2 0x2304

#define SPR_MPL_INTCTRL_2__MPL_SHIFT 0
#define SPR_MPL_INTCTRL_2__MPL_WIDTH 2
#define SPR_MPL_INTCTRL_2__MPL_RESET_VAL 3
#define SPR_MPL_INTCTRL_2__MPL_RMASK 0x3
#define SPR_MPL_INTCTRL_2__MPL_MASK  0x3
#define SPR_MPL_INTCTRL_2__MPL_FIELD 0,1


/*
 * MPL_INTCTRL_2 Set to Protection Level 0.
 * Writing a one to this register sets MPL_INTCTRL_2 to 0
 */
#define SPR_MPL_INTCTRL_2_SET_0 0x2300

#define SPR_MPL_INTCTRL_2_SET_0__SET_SHIFT 0
#define SPR_MPL_INTCTRL_2_SET_0__SET_WIDTH 1
#define SPR_MPL_INTCTRL_2_SET_0__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_2_SET_0__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_2_SET_0__SET_MASK  0x1
#define SPR_MPL_INTCTRL_2_SET_0__SET_FIELD 0,0


/*
 * MPL_INTCTRL_2 Set to Protection Level 1.
 * Writing a one to this register sets MPL_INTCTRL_2 to 1
 */
#define SPR_MPL_INTCTRL_2_SET_1 0x2301

#define SPR_MPL_INTCTRL_2_SET_1__SET_SHIFT 0
#define SPR_MPL_INTCTRL_2_SET_1__SET_WIDTH 1
#define SPR_MPL_INTCTRL_2_SET_1__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_2_SET_1__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_2_SET_1__SET_MASK  0x1
#define SPR_MPL_INTCTRL_2_SET_1__SET_FIELD 0,0


/*
 * MPL_INTCTRL_2 Set to Protection Level 2.
 * Writing a one to this register sets MPL_INTCTRL_2 to 2
 */
#define SPR_MPL_INTCTRL_2_SET_2 0x2302

#define SPR_MPL_INTCTRL_2_SET_2__SET_SHIFT 0
#define SPR_MPL_INTCTRL_2_SET_2__SET_WIDTH 1
#define SPR_MPL_INTCTRL_2_SET_2__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_2_SET_2__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_2_SET_2__SET_MASK  0x1
#define SPR_MPL_INTCTRL_2_SET_2__SET_FIELD 0,0


/*
 * MPL_INTCTRL_2 Set to Protection Level 3.
 * Writing a one to this register sets MPL_INTCTRL_2 to 3
 */
#define SPR_MPL_INTCTRL_2_SET_3 0x2303

#define SPR_MPL_INTCTRL_2_SET_3__SET_SHIFT 0
#define SPR_MPL_INTCTRL_2_SET_3__SET_WIDTH 1
#define SPR_MPL_INTCTRL_2_SET_3__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_2_SET_3__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_2_SET_3__SET_MASK  0x1
#define SPR_MPL_INTCTRL_2_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Interrupt Control 3.
 * This register specifies the protection level that handles interrupt
 * control 3 interrupts.
 */
#define SPR_MPL_INTCTRL_3 0x2204

#define SPR_MPL_INTCTRL_3__MPL_SHIFT 0
#define SPR_MPL_INTCTRL_3__MPL_WIDTH 2
#define SPR_MPL_INTCTRL_3__MPL_RESET_VAL 3
#define SPR_MPL_INTCTRL_3__MPL_RMASK 0x3
#define SPR_MPL_INTCTRL_3__MPL_MASK  0x3
#define SPR_MPL_INTCTRL_3__MPL_FIELD 0,1


/*
 * MPL_INTCTRL_3 Set to Protection Level 0.
 * Writing a one to this register sets MPL_INTCTRL_3 to 0
 */
#define SPR_MPL_INTCTRL_3_SET_0 0x2200

#define SPR_MPL_INTCTRL_3_SET_0__SET_SHIFT 0
#define SPR_MPL_INTCTRL_3_SET_0__SET_WIDTH 1
#define SPR_MPL_INTCTRL_3_SET_0__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_3_SET_0__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_3_SET_0__SET_MASK  0x1
#define SPR_MPL_INTCTRL_3_SET_0__SET_FIELD 0,0


/*
 * MPL_INTCTRL_3 Set to Protection Level 1.
 * Writing a one to this register sets MPL_INTCTRL_3 to 1
 */
#define SPR_MPL_INTCTRL_3_SET_1 0x2201

#define SPR_MPL_INTCTRL_3_SET_1__SET_SHIFT 0
#define SPR_MPL_INTCTRL_3_SET_1__SET_WIDTH 1
#define SPR_MPL_INTCTRL_3_SET_1__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_3_SET_1__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_3_SET_1__SET_MASK  0x1
#define SPR_MPL_INTCTRL_3_SET_1__SET_FIELD 0,0


/*
 * MPL_INTCTRL_3 Set to Protection Level 2.
 * Writing a one to this register sets MPL_INTCTRL_3 to 2
 */
#define SPR_MPL_INTCTRL_3_SET_2 0x2202

#define SPR_MPL_INTCTRL_3_SET_2__SET_SHIFT 0
#define SPR_MPL_INTCTRL_3_SET_2__SET_WIDTH 1
#define SPR_MPL_INTCTRL_3_SET_2__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_3_SET_2__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_3_SET_2__SET_MASK  0x1
#define SPR_MPL_INTCTRL_3_SET_2__SET_FIELD 0,0


/*
 * MPL_INTCTRL_3 Set to Protection Level 3.
 * Writing a one to this register sets MPL_INTCTRL_3 to 3
 */
#define SPR_MPL_INTCTRL_3_SET_3 0x2203

#define SPR_MPL_INTCTRL_3_SET_3__SET_SHIFT 0
#define SPR_MPL_INTCTRL_3_SET_3__SET_WIDTH 1
#define SPR_MPL_INTCTRL_3_SET_3__SET_RESET_VAL 0
#define SPR_MPL_INTCTRL_3_SET_3__SET_RMASK 0x1
#define SPR_MPL_INTCTRL_3_SET_3__SET_MASK  0x1
#define SPR_MPL_INTCTRL_3_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Interprocessor Interrupt 0.
 * This register specifies the minimum protection level associated with a
 * interprocessor interrupt 0.
 */
#define SPR_MPL_IPI_0 0x1f04

#define SPR_MPL_IPI_0__MPL_SHIFT 0
#define SPR_MPL_IPI_0__MPL_WIDTH 2
#define SPR_MPL_IPI_0__MPL_RESET_VAL 3
#define SPR_MPL_IPI_0__MPL_RMASK 0x3
#define SPR_MPL_IPI_0__MPL_MASK  0x3
#define SPR_MPL_IPI_0__MPL_FIELD 0,1


/*
 * MPL_IPI_0 Set to Protection Level 0.
 * Writing a one to this register sets MPL_IPI_0 to 0
 */
#define SPR_MPL_IPI_0_SET_0 0x1f00

#define SPR_MPL_IPI_0_SET_0__SET_SHIFT 0
#define SPR_MPL_IPI_0_SET_0__SET_WIDTH 1
#define SPR_MPL_IPI_0_SET_0__SET_RESET_VAL 0
#define SPR_MPL_IPI_0_SET_0__SET_RMASK 0x1
#define SPR_MPL_IPI_0_SET_0__SET_MASK  0x1
#define SPR_MPL_IPI_0_SET_0__SET_FIELD 0,0


/*
 * MPL_IPI_0 Set to Protection Level 1.
 * Writing a one to this register sets MPL_IPI_0 to 1
 */
#define SPR_MPL_IPI_0_SET_1 0x1f01

#define SPR_MPL_IPI_0_SET_1__SET_SHIFT 0
#define SPR_MPL_IPI_0_SET_1__SET_WIDTH 1
#define SPR_MPL_IPI_0_SET_1__SET_RESET_VAL 0
#define SPR_MPL_IPI_0_SET_1__SET_RMASK 0x1
#define SPR_MPL_IPI_0_SET_1__SET_MASK  0x1
#define SPR_MPL_IPI_0_SET_1__SET_FIELD 0,0


/*
 * MPL_IPI_0 Set to Protection Level 2.
 * Writing a one to this register sets MPL_IPI_0 to 2
 */
#define SPR_MPL_IPI_0_SET_2 0x1f02

#define SPR_MPL_IPI_0_SET_2__SET_SHIFT 0
#define SPR_MPL_IPI_0_SET_2__SET_WIDTH 1
#define SPR_MPL_IPI_0_SET_2__SET_RESET_VAL 0
#define SPR_MPL_IPI_0_SET_2__SET_RMASK 0x1
#define SPR_MPL_IPI_0_SET_2__SET_MASK  0x1
#define SPR_MPL_IPI_0_SET_2__SET_FIELD 0,0


/*
 * MPL_IPI_0 Set to Protection Level 3.
 * Writing a one to this register sets MPL_IPI_0 to 3
 */
#define SPR_MPL_IPI_0_SET_3 0x1f03

#define SPR_MPL_IPI_0_SET_3__SET_SHIFT 0
#define SPR_MPL_IPI_0_SET_3__SET_WIDTH 1
#define SPR_MPL_IPI_0_SET_3__SET_RESET_VAL 0
#define SPR_MPL_IPI_0_SET_3__SET_RMASK 0x1
#define SPR_MPL_IPI_0_SET_3__SET_MASK  0x1
#define SPR_MPL_IPI_0_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Interprocessor Interrupt 1.
 * This register specifies the minimum protection level associated with a
 * interprocessor interrupt 1.
 */
#define SPR_MPL_IPI_1 0x1e04

#define SPR_MPL_IPI_1__MPL_SHIFT 0
#define SPR_MPL_IPI_1__MPL_WIDTH 2
#define SPR_MPL_IPI_1__MPL_RESET_VAL 3
#define SPR_MPL_IPI_1__MPL_RMASK 0x3
#define SPR_MPL_IPI_1__MPL_MASK  0x3
#define SPR_MPL_IPI_1__MPL_FIELD 0,1


/*
 * MPL_IPI_1 Set to Protection Level 0.
 * Writing a one to this register sets MPL_IPI_1 to 0
 */
#define SPR_MPL_IPI_1_SET_0 0x1e00

#define SPR_MPL_IPI_1_SET_0__SET_SHIFT 0
#define SPR_MPL_IPI_1_SET_0__SET_WIDTH 1
#define SPR_MPL_IPI_1_SET_0__SET_RESET_VAL 0
#define SPR_MPL_IPI_1_SET_0__SET_RMASK 0x1
#define SPR_MPL_IPI_1_SET_0__SET_MASK  0x1
#define SPR_MPL_IPI_1_SET_0__SET_FIELD 0,0


/*
 * MPL_IPI_1 Set to Protection Level 1.
 * Writing a one to this register sets MPL_IPI_1 to 1
 */
#define SPR_MPL_IPI_1_SET_1 0x1e01

#define SPR_MPL_IPI_1_SET_1__SET_SHIFT 0
#define SPR_MPL_IPI_1_SET_1__SET_WIDTH 1
#define SPR_MPL_IPI_1_SET_1__SET_RESET_VAL 0
#define SPR_MPL_IPI_1_SET_1__SET_RMASK 0x1
#define SPR_MPL_IPI_1_SET_1__SET_MASK  0x1
#define SPR_MPL_IPI_1_SET_1__SET_FIELD 0,0


/*
 * MPL_IPI_1 Set to Protection Level 2.
 * Writing a one to this register sets MPL_IPI_1 to 2
 */
#define SPR_MPL_IPI_1_SET_2 0x1e02

#define SPR_MPL_IPI_1_SET_2__SET_SHIFT 0
#define SPR_MPL_IPI_1_SET_2__SET_WIDTH 1
#define SPR_MPL_IPI_1_SET_2__SET_RESET_VAL 0
#define SPR_MPL_IPI_1_SET_2__SET_RMASK 0x1
#define SPR_MPL_IPI_1_SET_2__SET_MASK  0x1
#define SPR_MPL_IPI_1_SET_2__SET_FIELD 0,0


/*
 * MPL_IPI_1 Set to Protection Level 3.
 * Writing a one to this register sets MPL_IPI_1 to 3
 */
#define SPR_MPL_IPI_1_SET_3 0x1e03

#define SPR_MPL_IPI_1_SET_3__SET_SHIFT 0
#define SPR_MPL_IPI_1_SET_3__SET_WIDTH 1
#define SPR_MPL_IPI_1_SET_3__SET_RESET_VAL 0
#define SPR_MPL_IPI_1_SET_3__SET_RMASK 0x1
#define SPR_MPL_IPI_1_SET_3__SET_MASK  0x1
#define SPR_MPL_IPI_1_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Interprocessor Interrupt 2.
 * This register specifies the minimum protection level associated with a
 * interprocessor interrupt 2.
 */
#define SPR_MPL_IPI_2 0x1d04

#define SPR_MPL_IPI_2__MPL_SHIFT 0
#define SPR_MPL_IPI_2__MPL_WIDTH 2
#define SPR_MPL_IPI_2__MPL_RESET_VAL 3
#define SPR_MPL_IPI_2__MPL_RMASK 0x3
#define SPR_MPL_IPI_2__MPL_MASK  0x3
#define SPR_MPL_IPI_2__MPL_FIELD 0,1


/*
 * MPL_IPI_2 Set to Protection Level 0.
 * Writing a one to this register sets MPL_IPI_2 to 0
 */
#define SPR_MPL_IPI_2_SET_0 0x1d00

#define SPR_MPL_IPI_2_SET_0__SET_SHIFT 0
#define SPR_MPL_IPI_2_SET_0__SET_WIDTH 1
#define SPR_MPL_IPI_2_SET_0__SET_RESET_VAL 0
#define SPR_MPL_IPI_2_SET_0__SET_RMASK 0x1
#define SPR_MPL_IPI_2_SET_0__SET_MASK  0x1
#define SPR_MPL_IPI_2_SET_0__SET_FIELD 0,0


/*
 * MPL_IPI_2 Set to Protection Level 1.
 * Writing a one to this register sets MPL_IPI_2 to 1
 */
#define SPR_MPL_IPI_2_SET_1 0x1d01

#define SPR_MPL_IPI_2_SET_1__SET_SHIFT 0
#define SPR_MPL_IPI_2_SET_1__SET_WIDTH 1
#define SPR_MPL_IPI_2_SET_1__SET_RESET_VAL 0
#define SPR_MPL_IPI_2_SET_1__SET_RMASK 0x1
#define SPR_MPL_IPI_2_SET_1__SET_MASK  0x1
#define SPR_MPL_IPI_2_SET_1__SET_FIELD 0,0


/*
 * MPL_IPI_2 Set to Protection Level 2.
 * Writing a one to this register sets MPL_IPI_2 to 2
 */
#define SPR_MPL_IPI_2_SET_2 0x1d02

#define SPR_MPL_IPI_2_SET_2__SET_SHIFT 0
#define SPR_MPL_IPI_2_SET_2__SET_WIDTH 1
#define SPR_MPL_IPI_2_SET_2__SET_RESET_VAL 0
#define SPR_MPL_IPI_2_SET_2__SET_RMASK 0x1
#define SPR_MPL_IPI_2_SET_2__SET_MASK  0x1
#define SPR_MPL_IPI_2_SET_2__SET_FIELD 0,0


/*
 * MPL_IPI_2 Set to Protection Level 3.
 * Writing a one to this register sets MPL_IPI_2 to 3
 */
#define SPR_MPL_IPI_2_SET_3 0x1d03

#define SPR_MPL_IPI_2_SET_3__SET_SHIFT 0
#define SPR_MPL_IPI_2_SET_3__SET_WIDTH 1
#define SPR_MPL_IPI_2_SET_3__SET_RESET_VAL 0
#define SPR_MPL_IPI_2_SET_3__SET_RMASK 0x1
#define SPR_MPL_IPI_2_SET_3__SET_MASK  0x1
#define SPR_MPL_IPI_2_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Interprocessor Interrupt 3.
 * This register specifies the minimum protection level associated with a
 * interprocessor interrupt 3.
 */
#define SPR_MPL_IPI_3 0x1c04

#define SPR_MPL_IPI_3__MPL_SHIFT 0
#define SPR_MPL_IPI_3__MPL_WIDTH 2
#define SPR_MPL_IPI_3__MPL_RESET_VAL 3
#define SPR_MPL_IPI_3__MPL_RMASK 0x3
#define SPR_MPL_IPI_3__MPL_MASK  0x3
#define SPR_MPL_IPI_3__MPL_FIELD 0,1


/*
 * MPL_IPI_3 Set to Protection Level 0.
 * Writing a one to this register sets MPL_IPI_3 to 0
 */
#define SPR_MPL_IPI_3_SET_0 0x1c00

#define SPR_MPL_IPI_3_SET_0__SET_SHIFT 0
#define SPR_MPL_IPI_3_SET_0__SET_WIDTH 1
#define SPR_MPL_IPI_3_SET_0__SET_RESET_VAL 0
#define SPR_MPL_IPI_3_SET_0__SET_RMASK 0x1
#define SPR_MPL_IPI_3_SET_0__SET_MASK  0x1
#define SPR_MPL_IPI_3_SET_0__SET_FIELD 0,0


/*
 * MPL_IPI_3 Set to Protection Level 1.
 * Writing a one to this register sets MPL_IPI_3 to 1
 */
#define SPR_MPL_IPI_3_SET_1 0x1c01

#define SPR_MPL_IPI_3_SET_1__SET_SHIFT 0
#define SPR_MPL_IPI_3_SET_1__SET_WIDTH 1
#define SPR_MPL_IPI_3_SET_1__SET_RESET_VAL 0
#define SPR_MPL_IPI_3_SET_1__SET_RMASK 0x1
#define SPR_MPL_IPI_3_SET_1__SET_MASK  0x1
#define SPR_MPL_IPI_3_SET_1__SET_FIELD 0,0


/*
 * MPL_IPI_3 Set to Protection Level 2.
 * Writing a one to this register sets MPL_IPI_3 to 2
 */
#define SPR_MPL_IPI_3_SET_2 0x1c02

#define SPR_MPL_IPI_3_SET_2__SET_SHIFT 0
#define SPR_MPL_IPI_3_SET_2__SET_WIDTH 1
#define SPR_MPL_IPI_3_SET_2__SET_RESET_VAL 0
#define SPR_MPL_IPI_3_SET_2__SET_RMASK 0x1
#define SPR_MPL_IPI_3_SET_2__SET_MASK  0x1
#define SPR_MPL_IPI_3_SET_2__SET_FIELD 0,0


/*
 * MPL_IPI_3 Set to Protection Level 3.
 * Writing a one to this register sets MPL_IPI_3 to 3
 */
#define SPR_MPL_IPI_3_SET_3 0x1c03

#define SPR_MPL_IPI_3_SET_3__SET_SHIFT 0
#define SPR_MPL_IPI_3_SET_3__SET_WIDTH 1
#define SPR_MPL_IPI_3_SET_3__SET_RESET_VAL 0
#define SPR_MPL_IPI_3_SET_3__SET_RMASK 0x1
#define SPR_MPL_IPI_3_SET_3__SET_MASK  0x1
#define SPR_MPL_IPI_3_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for ITLB Miss.
 * This register specifies the minimum protection level needed to
 * administratively access the ITLB and it serves as the protection level to
 * handle an ITLB miss from a lower protection level.
 */
#define SPR_MPL_ITLB_MISS 0x0704

#define SPR_MPL_ITLB_MISS__MPL_SHIFT 0
#define SPR_MPL_ITLB_MISS__MPL_WIDTH 2
#define SPR_MPL_ITLB_MISS__MPL_RESET_VAL 3
#define SPR_MPL_ITLB_MISS__MPL_RMASK 0x3
#define SPR_MPL_ITLB_MISS__MPL_MASK  0x3
#define SPR_MPL_ITLB_MISS__MPL_FIELD 0,1


/*
 * MPL_ITLB_MISS Set to Protection Level 0.
 * Writing a one to this register sets MPL_ITLB_MISS to 0
 */
#define SPR_MPL_ITLB_MISS_SET_0 0x0700

#define SPR_MPL_ITLB_MISS_SET_0__SET_SHIFT 0
#define SPR_MPL_ITLB_MISS_SET_0__SET_WIDTH 1
#define SPR_MPL_ITLB_MISS_SET_0__SET_RESET_VAL 0
#define SPR_MPL_ITLB_MISS_SET_0__SET_RMASK 0x1
#define SPR_MPL_ITLB_MISS_SET_0__SET_MASK  0x1
#define SPR_MPL_ITLB_MISS_SET_0__SET_FIELD 0,0


/*
 * MPL_ITLB_MISS Set to Protection Level 1.
 * Writing a one to this register sets MPL_ITLB_MISS to 1
 */
#define SPR_MPL_ITLB_MISS_SET_1 0x0701

#define SPR_MPL_ITLB_MISS_SET_1__SET_SHIFT 0
#define SPR_MPL_ITLB_MISS_SET_1__SET_WIDTH 1
#define SPR_MPL_ITLB_MISS_SET_1__SET_RESET_VAL 0
#define SPR_MPL_ITLB_MISS_SET_1__SET_RMASK 0x1
#define SPR_MPL_ITLB_MISS_SET_1__SET_MASK  0x1
#define SPR_MPL_ITLB_MISS_SET_1__SET_FIELD 0,0


/*
 * MPL_ITLB_MISS Set to Protection Level 2.
 * Writing a one to this register sets MPL_ITLB_MISS to 2
 */
#define SPR_MPL_ITLB_MISS_SET_2 0x0702

#define SPR_MPL_ITLB_MISS_SET_2__SET_SHIFT 0
#define SPR_MPL_ITLB_MISS_SET_2__SET_WIDTH 1
#define SPR_MPL_ITLB_MISS_SET_2__SET_RESET_VAL 0
#define SPR_MPL_ITLB_MISS_SET_2__SET_RMASK 0x1
#define SPR_MPL_ITLB_MISS_SET_2__SET_MASK  0x1
#define SPR_MPL_ITLB_MISS_SET_2__SET_FIELD 0,0


/*
 * MPL_ITLB_MISS Set to Protection Level 3.
 * Writing a one to this register sets MPL_ITLB_MISS to 3
 */
#define SPR_MPL_ITLB_MISS_SET_3 0x0703

#define SPR_MPL_ITLB_MISS_SET_3__SET_SHIFT 0
#define SPR_MPL_ITLB_MISS_SET_3__SET_WIDTH 1
#define SPR_MPL_ITLB_MISS_SET_3__SET_RESET_VAL 0
#define SPR_MPL_ITLB_MISS_SET_3__SET_RMASK 0x1
#define SPR_MPL_ITLB_MISS_SET_3__SET_MASK  0x1
#define SPR_MPL_ITLB_MISS_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Instruction Address Space Identifier Access.
 * This register specifies the protection level needed to administratively
 * access the instruction address space identifier.
 */
#define SPR_MPL_I_ASID 0x2804

#define SPR_MPL_I_ASID__MPL_SHIFT 0
#define SPR_MPL_I_ASID__MPL_WIDTH 2
#define SPR_MPL_I_ASID__MPL_RESET_VAL 3
#define SPR_MPL_I_ASID__MPL_RMASK 0x3
#define SPR_MPL_I_ASID__MPL_MASK  0x3
#define SPR_MPL_I_ASID__MPL_FIELD 0,1


/*
 * MPL_I_ASID Set to Protection Level 0.
 * Writing a one to this register sets MPL_I_ASID to 0
 */
#define SPR_MPL_I_ASID_SET_0 0x2800

#define SPR_MPL_I_ASID_SET_0__SET_SHIFT 0
#define SPR_MPL_I_ASID_SET_0__SET_WIDTH 1
#define SPR_MPL_I_ASID_SET_0__SET_RESET_VAL 0
#define SPR_MPL_I_ASID_SET_0__SET_RMASK 0x1
#define SPR_MPL_I_ASID_SET_0__SET_MASK  0x1
#define SPR_MPL_I_ASID_SET_0__SET_FIELD 0,0


/*
 * MPL_I_ASID Set to Protection Level 1.
 * Writing a one to this register sets MPL_I_ASID to 1
 */
#define SPR_MPL_I_ASID_SET_1 0x2801

#define SPR_MPL_I_ASID_SET_1__SET_SHIFT 0
#define SPR_MPL_I_ASID_SET_1__SET_WIDTH 1
#define SPR_MPL_I_ASID_SET_1__SET_RESET_VAL 0
#define SPR_MPL_I_ASID_SET_1__SET_RMASK 0x1
#define SPR_MPL_I_ASID_SET_1__SET_MASK  0x1
#define SPR_MPL_I_ASID_SET_1__SET_FIELD 0,0


/*
 * MPL_I_ASID Set to Protection Level 2.
 * Writing a one to this register sets MPL_I_ASID to 2
 */
#define SPR_MPL_I_ASID_SET_2 0x2802

#define SPR_MPL_I_ASID_SET_2__SET_SHIFT 0
#define SPR_MPL_I_ASID_SET_2__SET_WIDTH 1
#define SPR_MPL_I_ASID_SET_2__SET_RESET_VAL 0
#define SPR_MPL_I_ASID_SET_2__SET_RMASK 0x1
#define SPR_MPL_I_ASID_SET_2__SET_MASK  0x1
#define SPR_MPL_I_ASID_SET_2__SET_FIELD 0,0


/*
 * MPL_I_ASID Set to Protection Level 3.
 * Writing a one to this register sets MPL_I_ASID to 3
 */
#define SPR_MPL_I_ASID_SET_3 0x2803

#define SPR_MPL_I_ASID_SET_3__SET_SHIFT 0
#define SPR_MPL_I_ASID_SET_3__SET_WIDTH 1
#define SPR_MPL_I_ASID_SET_3__SET_RESET_VAL 0
#define SPR_MPL_I_ASID_SET_3__SET_RMASK 0x1
#define SPR_MPL_I_ASID_SET_3__SET_MASK  0x1
#define SPR_MPL_I_ASID_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for a Memory Error Interrupt.
 * This register specifies the minimum protection level needed to
 * administratively access the memory error interrupt state and it serves as
 * the protection level to handle a memory error interrupt.
 */
#define SPR_MPL_MEM_ERROR 0x0004

#define SPR_MPL_MEM_ERROR__MPL_SHIFT 0
#define SPR_MPL_MEM_ERROR__MPL_WIDTH 2
#define SPR_MPL_MEM_ERROR__MPL_RESET_VAL 3
#define SPR_MPL_MEM_ERROR__MPL_RMASK 0x3
#define SPR_MPL_MEM_ERROR__MPL_MASK  0x3
#define SPR_MPL_MEM_ERROR__MPL_FIELD 0,1


/*
 * MPL_MEM_ERROR Set to Protection Level 0.
 * Writing a one to this register sets MPL_MEM_ERROR to 0
 */
#define SPR_MPL_MEM_ERROR_SET_0 0x0000

#define SPR_MPL_MEM_ERROR_SET_0__SET_SHIFT 0
#define SPR_MPL_MEM_ERROR_SET_0__SET_WIDTH 1
#define SPR_MPL_MEM_ERROR_SET_0__SET_RESET_VAL 0
#define SPR_MPL_MEM_ERROR_SET_0__SET_RMASK 0x1
#define SPR_MPL_MEM_ERROR_SET_0__SET_MASK  0x1
#define SPR_MPL_MEM_ERROR_SET_0__SET_FIELD 0,0


/*
 * MPL_MEM_ERROR Set to Protection Level 1.
 * Writing a one to this register sets MPL_MEM_ERROR to 1
 */
#define SPR_MPL_MEM_ERROR_SET_1 0x0001

#define SPR_MPL_MEM_ERROR_SET_1__SET_SHIFT 0
#define SPR_MPL_MEM_ERROR_SET_1__SET_WIDTH 1
#define SPR_MPL_MEM_ERROR_SET_1__SET_RESET_VAL 0
#define SPR_MPL_MEM_ERROR_SET_1__SET_RMASK 0x1
#define SPR_MPL_MEM_ERROR_SET_1__SET_MASK  0x1
#define SPR_MPL_MEM_ERROR_SET_1__SET_FIELD 0,0


/*
 * MPL_MEM_ERROR Set to Protection Level 2.
 * Writing a one to this register sets MPL_MEM_ERROR to 2
 */
#define SPR_MPL_MEM_ERROR_SET_2 0x0002

#define SPR_MPL_MEM_ERROR_SET_2__SET_SHIFT 0
#define SPR_MPL_MEM_ERROR_SET_2__SET_WIDTH 1
#define SPR_MPL_MEM_ERROR_SET_2__SET_RESET_VAL 0
#define SPR_MPL_MEM_ERROR_SET_2__SET_RMASK 0x1
#define SPR_MPL_MEM_ERROR_SET_2__SET_MASK  0x1
#define SPR_MPL_MEM_ERROR_SET_2__SET_FIELD 0,0


/*
 * MPL_MEM_ERROR Set to Protection Level 3.
 * Writing a one to this register sets MPL_MEM_ERROR to 3
 */
#define SPR_MPL_MEM_ERROR_SET_3 0x0003

#define SPR_MPL_MEM_ERROR_SET_3__SET_SHIFT 0
#define SPR_MPL_MEM_ERROR_SET_3__SET_WIDTH 1
#define SPR_MPL_MEM_ERROR_SET_3__SET_RESET_VAL 0
#define SPR_MPL_MEM_ERROR_SET_3__SET_RMASK 0x1
#define SPR_MPL_MEM_ERROR_SET_3__SET_MASK  0x1
#define SPR_MPL_MEM_ERROR_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Performance Counters.
 * This register specifies the protection level that handles performance
 * counter interrupts.
 */
#define SPR_MPL_PERF_COUNT 0x2004

#define SPR_MPL_PERF_COUNT__MPL_SHIFT 0
#define SPR_MPL_PERF_COUNT__MPL_WIDTH 2
#define SPR_MPL_PERF_COUNT__MPL_RESET_VAL 3
#define SPR_MPL_PERF_COUNT__MPL_RMASK 0x3
#define SPR_MPL_PERF_COUNT__MPL_MASK  0x3
#define SPR_MPL_PERF_COUNT__MPL_FIELD 0,1


/*
 * MPL_PERF_COUNT Set to Protection Level 0.
 * Writing a one to this register sets MPL_PERF_COUNT to 0
 */
#define SPR_MPL_PERF_COUNT_SET_0 0x2000

#define SPR_MPL_PERF_COUNT_SET_0__SET_SHIFT 0
#define SPR_MPL_PERF_COUNT_SET_0__SET_WIDTH 1
#define SPR_MPL_PERF_COUNT_SET_0__SET_RESET_VAL 0
#define SPR_MPL_PERF_COUNT_SET_0__SET_RMASK 0x1
#define SPR_MPL_PERF_COUNT_SET_0__SET_MASK  0x1
#define SPR_MPL_PERF_COUNT_SET_0__SET_FIELD 0,0


/*
 * MPL_PERF_COUNT Set to Protection Level 1.
 * Writing a one to this register sets MPL_PERF_COUNT to 1
 */
#define SPR_MPL_PERF_COUNT_SET_1 0x2001

#define SPR_MPL_PERF_COUNT_SET_1__SET_SHIFT 0
#define SPR_MPL_PERF_COUNT_SET_1__SET_WIDTH 1
#define SPR_MPL_PERF_COUNT_SET_1__SET_RESET_VAL 0
#define SPR_MPL_PERF_COUNT_SET_1__SET_RMASK 0x1
#define SPR_MPL_PERF_COUNT_SET_1__SET_MASK  0x1
#define SPR_MPL_PERF_COUNT_SET_1__SET_FIELD 0,0


/*
 * MPL_PERF_COUNT Set to Protection Level 2.
 * Writing a one to this register sets MPL_PERF_COUNT to 2
 */
#define SPR_MPL_PERF_COUNT_SET_2 0x2002

#define SPR_MPL_PERF_COUNT_SET_2__SET_SHIFT 0
#define SPR_MPL_PERF_COUNT_SET_2__SET_WIDTH 1
#define SPR_MPL_PERF_COUNT_SET_2__SET_RESET_VAL 0
#define SPR_MPL_PERF_COUNT_SET_2__SET_RMASK 0x1
#define SPR_MPL_PERF_COUNT_SET_2__SET_MASK  0x1
#define SPR_MPL_PERF_COUNT_SET_2__SET_FIELD 0,0


/*
 * MPL_PERF_COUNT Set to Protection Level 3.
 * Writing a one to this register sets MPL_PERF_COUNT to 3
 */
#define SPR_MPL_PERF_COUNT_SET_3 0x2003

#define SPR_MPL_PERF_COUNT_SET_3__SET_SHIFT 0
#define SPR_MPL_PERF_COUNT_SET_3__SET_WIDTH 1
#define SPR_MPL_PERF_COUNT_SET_3__SET_RESET_VAL 0
#define SPR_MPL_PERF_COUNT_SET_3__SET_RMASK 0x1
#define SPR_MPL_PERF_COUNT_SET_3__SET_MASK  0x1
#define SPR_MPL_PERF_COUNT_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Single Step Interrupt 0.
 * This register specifies the minimum protection level associated with a
 * single step interrupt 0.
 */
#define SPR_MPL_SINGLE_STEP_0 0x0404

#define SPR_MPL_SINGLE_STEP_0__MPL_SHIFT 0
#define SPR_MPL_SINGLE_STEP_0__MPL_WIDTH 2
#define SPR_MPL_SINGLE_STEP_0__MPL_RESET_VAL 3
#define SPR_MPL_SINGLE_STEP_0__MPL_RMASK 0x3
#define SPR_MPL_SINGLE_STEP_0__MPL_MASK  0x3
#define SPR_MPL_SINGLE_STEP_0__MPL_FIELD 0,1


/*
 * MPL_SINGLE_STEP_0 Set to Protection Level 0.
 * Writing a one to this register sets MPL_SINGLE_STEP_0 to 0
 */
#define SPR_MPL_SINGLE_STEP_0_SET_0 0x0400

#define SPR_MPL_SINGLE_STEP_0_SET_0__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_0_SET_0__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_0_SET_0__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_0_SET_0__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_0_SET_0__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_0_SET_0__SET_FIELD 0,0


/*
 * MPL_SINGLE_STEP_0 Set to Protection Level 1.
 * Writing a one to this register sets MPL_SINGLE_STEP_0 to 1
 */
#define SPR_MPL_SINGLE_STEP_0_SET_1 0x0401

#define SPR_MPL_SINGLE_STEP_0_SET_1__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_0_SET_1__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_0_SET_1__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_0_SET_1__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_0_SET_1__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_0_SET_1__SET_FIELD 0,0


/*
 * MPL_SINGLE_STEP_0 Set to Protection Level 2.
 * Writing a one to this register sets MPL_SINGLE_STEP_0 to 2
 */
#define SPR_MPL_SINGLE_STEP_0_SET_2 0x0402

#define SPR_MPL_SINGLE_STEP_0_SET_2__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_0_SET_2__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_0_SET_2__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_0_SET_2__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_0_SET_2__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_0_SET_2__SET_FIELD 0,0


/*
 * MPL_SINGLE_STEP_0 Set to Protection Level 3.
 * Writing a one to this register sets MPL_SINGLE_STEP_0 to 3
 */
#define SPR_MPL_SINGLE_STEP_0_SET_3 0x0403

#define SPR_MPL_SINGLE_STEP_0_SET_3__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_0_SET_3__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_0_SET_3__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_0_SET_3__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_0_SET_3__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_0_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Single Step Interrupt 1.
 * This register specifies the minimum protection level associated with a
 * single step interrupt 1.
 */
#define SPR_MPL_SINGLE_STEP_1 0x0304

#define SPR_MPL_SINGLE_STEP_1__MPL_SHIFT 0
#define SPR_MPL_SINGLE_STEP_1__MPL_WIDTH 2
#define SPR_MPL_SINGLE_STEP_1__MPL_RESET_VAL 3
#define SPR_MPL_SINGLE_STEP_1__MPL_RMASK 0x3
#define SPR_MPL_SINGLE_STEP_1__MPL_MASK  0x3
#define SPR_MPL_SINGLE_STEP_1__MPL_FIELD 0,1


/*
 * MPL_SINGLE_STEP_1 Set to Protection Level 0.
 * Writing a one to this register sets MPL_SINGLE_STEP_1 to 0
 */
#define SPR_MPL_SINGLE_STEP_1_SET_0 0x0300

#define SPR_MPL_SINGLE_STEP_1_SET_0__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_1_SET_0__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_1_SET_0__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_1_SET_0__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_1_SET_0__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_1_SET_0__SET_FIELD 0,0


/*
 * MPL_SINGLE_STEP_1 Set to Protection Level 1.
 * Writing a one to this register sets MPL_SINGLE_STEP_1 to 1
 */
#define SPR_MPL_SINGLE_STEP_1_SET_1 0x0301

#define SPR_MPL_SINGLE_STEP_1_SET_1__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_1_SET_1__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_1_SET_1__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_1_SET_1__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_1_SET_1__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_1_SET_1__SET_FIELD 0,0


/*
 * MPL_SINGLE_STEP_1 Set to Protection Level 2.
 * Writing a one to this register sets MPL_SINGLE_STEP_1 to 2
 */
#define SPR_MPL_SINGLE_STEP_1_SET_2 0x0302

#define SPR_MPL_SINGLE_STEP_1_SET_2__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_1_SET_2__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_1_SET_2__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_1_SET_2__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_1_SET_2__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_1_SET_2__SET_FIELD 0,0


/*
 * MPL_SINGLE_STEP_1 Set to Protection Level 3.
 * Writing a one to this register sets MPL_SINGLE_STEP_1 to 3
 */
#define SPR_MPL_SINGLE_STEP_1_SET_3 0x0303

#define SPR_MPL_SINGLE_STEP_1_SET_3__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_1_SET_3__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_1_SET_3__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_1_SET_3__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_1_SET_3__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_1_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Single Step Interrupt 2.
 * This register specifies the minimum protection level associated with a
 * single step interrupt 2.
 */
#define SPR_MPL_SINGLE_STEP_2 0x0204

#define SPR_MPL_SINGLE_STEP_2__MPL_SHIFT 0
#define SPR_MPL_SINGLE_STEP_2__MPL_WIDTH 2
#define SPR_MPL_SINGLE_STEP_2__MPL_RESET_VAL 3
#define SPR_MPL_SINGLE_STEP_2__MPL_RMASK 0x3
#define SPR_MPL_SINGLE_STEP_2__MPL_MASK  0x3
#define SPR_MPL_SINGLE_STEP_2__MPL_FIELD 0,1


/*
 * MPL_SINGLE_STEP_2 Set to Protection Level 0.
 * Writing a one to this register sets MPL_SINGLE_STEP_2 to 0
 */
#define SPR_MPL_SINGLE_STEP_2_SET_0 0x0200

#define SPR_MPL_SINGLE_STEP_2_SET_0__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_2_SET_0__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_2_SET_0__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_2_SET_0__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_2_SET_0__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_2_SET_0__SET_FIELD 0,0


/*
 * MPL_SINGLE_STEP_2 Set to Protection Level 1.
 * Writing a one to this register sets MPL_SINGLE_STEP_2 to 1
 */
#define SPR_MPL_SINGLE_STEP_2_SET_1 0x0201

#define SPR_MPL_SINGLE_STEP_2_SET_1__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_2_SET_1__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_2_SET_1__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_2_SET_1__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_2_SET_1__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_2_SET_1__SET_FIELD 0,0


/*
 * MPL_SINGLE_STEP_2 Set to Protection Level 2.
 * Writing a one to this register sets MPL_SINGLE_STEP_2 to 2
 */
#define SPR_MPL_SINGLE_STEP_2_SET_2 0x0202

#define SPR_MPL_SINGLE_STEP_2_SET_2__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_2_SET_2__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_2_SET_2__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_2_SET_2__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_2_SET_2__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_2_SET_2__SET_FIELD 0,0


/*
 * MPL_SINGLE_STEP_2 Set to Protection Level 3.
 * Writing a one to this register sets MPL_SINGLE_STEP_2 to 3
 */
#define SPR_MPL_SINGLE_STEP_2_SET_3 0x0203

#define SPR_MPL_SINGLE_STEP_2_SET_3__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_2_SET_3__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_2_SET_3__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_2_SET_3__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_2_SET_3__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_2_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Single Step Interrupt 3.
 * This register specifies the minimum protection level associated with a
 * single step interrupt 3.
 */
#define SPR_MPL_SINGLE_STEP_3 0x0104

#define SPR_MPL_SINGLE_STEP_3__MPL_SHIFT 0
#define SPR_MPL_SINGLE_STEP_3__MPL_WIDTH 2
#define SPR_MPL_SINGLE_STEP_3__MPL_RESET_VAL 3
#define SPR_MPL_SINGLE_STEP_3__MPL_RMASK 0x3
#define SPR_MPL_SINGLE_STEP_3__MPL_MASK  0x3
#define SPR_MPL_SINGLE_STEP_3__MPL_FIELD 0,1


/*
 * MPL_SINGLE_STEP_3 Set to Protection Level 0.
 * Writing a one to this register sets MPL_SINGLE_STEP_3 to 0
 */
#define SPR_MPL_SINGLE_STEP_3_SET_0 0x0100

#define SPR_MPL_SINGLE_STEP_3_SET_0__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_3_SET_0__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_3_SET_0__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_3_SET_0__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_3_SET_0__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_3_SET_0__SET_FIELD 0,0


/*
 * MPL_SINGLE_STEP_3 Set to Protection Level 1.
 * Writing a one to this register sets MPL_SINGLE_STEP_3 to 1
 */
#define SPR_MPL_SINGLE_STEP_3_SET_1 0x0101

#define SPR_MPL_SINGLE_STEP_3_SET_1__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_3_SET_1__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_3_SET_1__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_3_SET_1__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_3_SET_1__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_3_SET_1__SET_FIELD 0,0


/*
 * MPL_SINGLE_STEP_3 Set to Protection Level 2.
 * Writing a one to this register sets MPL_SINGLE_STEP_3 to 2
 */
#define SPR_MPL_SINGLE_STEP_3_SET_2 0x0102

#define SPR_MPL_SINGLE_STEP_3_SET_2__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_3_SET_2__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_3_SET_2__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_3_SET_2__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_3_SET_2__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_3_SET_2__SET_FIELD 0,0


/*
 * MPL_SINGLE_STEP_3 Set to Protection Level 3.
 * Writing a one to this register sets MPL_SINGLE_STEP_3 to 3
 */
#define SPR_MPL_SINGLE_STEP_3_SET_3 0x0103

#define SPR_MPL_SINGLE_STEP_3_SET_3__SET_SHIFT 0
#define SPR_MPL_SINGLE_STEP_3_SET_3__SET_WIDTH 1
#define SPR_MPL_SINGLE_STEP_3_SET_3__SET_RESET_VAL 0
#define SPR_MPL_SINGLE_STEP_3_SET_3__SET_RMASK 0x1
#define SPR_MPL_SINGLE_STEP_3_SET_3__SET_MASK  0x1
#define SPR_MPL_SINGLE_STEP_3_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Software Interrupt 0.
 * This register specifies the minimum protection level associated with a
 * software interrupt 0.
 */
#define SPR_MPL_SWINT_0 0x0f04

#define SPR_MPL_SWINT_0__MPL_SHIFT 0
#define SPR_MPL_SWINT_0__MPL_WIDTH 2
#define SPR_MPL_SWINT_0__MPL_RESET_VAL 3
#define SPR_MPL_SWINT_0__MPL_RMASK 0x3
#define SPR_MPL_SWINT_0__MPL_MASK  0x3
#define SPR_MPL_SWINT_0__MPL_FIELD 0,1


/*
 * MPL_SWINT_0 Set to Protection Level 0.
 * Writing a one to this register sets MPL_SWINT_0 to 0
 */
#define SPR_MPL_SWINT_0_SET_0 0x0f00

#define SPR_MPL_SWINT_0_SET_0__SET_SHIFT 0
#define SPR_MPL_SWINT_0_SET_0__SET_WIDTH 1
#define SPR_MPL_SWINT_0_SET_0__SET_RESET_VAL 0
#define SPR_MPL_SWINT_0_SET_0__SET_RMASK 0x1
#define SPR_MPL_SWINT_0_SET_0__SET_MASK  0x1
#define SPR_MPL_SWINT_0_SET_0__SET_FIELD 0,0


/*
 * MPL_SWINT_0 Set to Protection Level 1.
 * Writing a one to this register sets MPL_SWINT_0 to 1
 */
#define SPR_MPL_SWINT_0_SET_1 0x0f01

#define SPR_MPL_SWINT_0_SET_1__SET_SHIFT 0
#define SPR_MPL_SWINT_0_SET_1__SET_WIDTH 1
#define SPR_MPL_SWINT_0_SET_1__SET_RESET_VAL 0
#define SPR_MPL_SWINT_0_SET_1__SET_RMASK 0x1
#define SPR_MPL_SWINT_0_SET_1__SET_MASK  0x1
#define SPR_MPL_SWINT_0_SET_1__SET_FIELD 0,0


/*
 * MPL_SWINT_0 Set to Protection Level 2.
 * Writing a one to this register sets MPL_SWINT_0 to 2
 */
#define SPR_MPL_SWINT_0_SET_2 0x0f02

#define SPR_MPL_SWINT_0_SET_2__SET_SHIFT 0
#define SPR_MPL_SWINT_0_SET_2__SET_WIDTH 1
#define SPR_MPL_SWINT_0_SET_2__SET_RESET_VAL 0
#define SPR_MPL_SWINT_0_SET_2__SET_RMASK 0x1
#define SPR_MPL_SWINT_0_SET_2__SET_MASK  0x1
#define SPR_MPL_SWINT_0_SET_2__SET_FIELD 0,0


/*
 * MPL_SWINT_0 Set to Protection Level 3.
 * Writing a one to this register sets MPL_SWINT_0 to 3
 */
#define SPR_MPL_SWINT_0_SET_3 0x0f03

#define SPR_MPL_SWINT_0_SET_3__SET_SHIFT 0
#define SPR_MPL_SWINT_0_SET_3__SET_WIDTH 1
#define SPR_MPL_SWINT_0_SET_3__SET_RESET_VAL 0
#define SPR_MPL_SWINT_0_SET_3__SET_RMASK 0x1
#define SPR_MPL_SWINT_0_SET_3__SET_MASK  0x1
#define SPR_MPL_SWINT_0_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Software Interrupt 1.
 * This register specifies the minimum protection level associated with a
 * software interrupt 1.
 */
#define SPR_MPL_SWINT_1 0x0e04

#define SPR_MPL_SWINT_1__MPL_SHIFT 0
#define SPR_MPL_SWINT_1__MPL_WIDTH 2
#define SPR_MPL_SWINT_1__MPL_RESET_VAL 3
#define SPR_MPL_SWINT_1__MPL_RMASK 0x3
#define SPR_MPL_SWINT_1__MPL_MASK  0x3
#define SPR_MPL_SWINT_1__MPL_FIELD 0,1


/*
 * MPL_SWINT_1 Set to Protection Level 0.
 * Writing a one to this register sets MPL_SWINT_1 to 0
 */
#define SPR_MPL_SWINT_1_SET_0 0x0e00

#define SPR_MPL_SWINT_1_SET_0__SET_SHIFT 0
#define SPR_MPL_SWINT_1_SET_0__SET_WIDTH 1
#define SPR_MPL_SWINT_1_SET_0__SET_RESET_VAL 0
#define SPR_MPL_SWINT_1_SET_0__SET_RMASK 0x1
#define SPR_MPL_SWINT_1_SET_0__SET_MASK  0x1
#define SPR_MPL_SWINT_1_SET_0__SET_FIELD 0,0


/*
 * MPL_SWINT_1 Set to Protection Level 1.
 * Writing a one to this register sets MPL_SWINT_1 to 1
 */
#define SPR_MPL_SWINT_1_SET_1 0x0e01

#define SPR_MPL_SWINT_1_SET_1__SET_SHIFT 0
#define SPR_MPL_SWINT_1_SET_1__SET_WIDTH 1
#define SPR_MPL_SWINT_1_SET_1__SET_RESET_VAL 0
#define SPR_MPL_SWINT_1_SET_1__SET_RMASK 0x1
#define SPR_MPL_SWINT_1_SET_1__SET_MASK  0x1
#define SPR_MPL_SWINT_1_SET_1__SET_FIELD 0,0


/*
 * MPL_SWINT_1 Set to Protection Level 2.
 * Writing a one to this register sets MPL_SWINT_1 to 2
 */
#define SPR_MPL_SWINT_1_SET_2 0x0e02

#define SPR_MPL_SWINT_1_SET_2__SET_SHIFT 0
#define SPR_MPL_SWINT_1_SET_2__SET_WIDTH 1
#define SPR_MPL_SWINT_1_SET_2__SET_RESET_VAL 0
#define SPR_MPL_SWINT_1_SET_2__SET_RMASK 0x1
#define SPR_MPL_SWINT_1_SET_2__SET_MASK  0x1
#define SPR_MPL_SWINT_1_SET_2__SET_FIELD 0,0


/*
 * MPL_SWINT_1 Set to Protection Level 3.
 * Writing a one to this register sets MPL_SWINT_1 to 3
 */
#define SPR_MPL_SWINT_1_SET_3 0x0e03

#define SPR_MPL_SWINT_1_SET_3__SET_SHIFT 0
#define SPR_MPL_SWINT_1_SET_3__SET_WIDTH 1
#define SPR_MPL_SWINT_1_SET_3__SET_RESET_VAL 0
#define SPR_MPL_SWINT_1_SET_3__SET_RMASK 0x1
#define SPR_MPL_SWINT_1_SET_3__SET_MASK  0x1
#define SPR_MPL_SWINT_1_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Software Interrupt 2.
 * This register specifies the minimum protection level associated with a
 * software interrupt 2.
 */
#define SPR_MPL_SWINT_2 0x0d04

#define SPR_MPL_SWINT_2__MPL_SHIFT 0
#define SPR_MPL_SWINT_2__MPL_WIDTH 2
#define SPR_MPL_SWINT_2__MPL_RESET_VAL 3
#define SPR_MPL_SWINT_2__MPL_RMASK 0x3
#define SPR_MPL_SWINT_2__MPL_MASK  0x3
#define SPR_MPL_SWINT_2__MPL_FIELD 0,1


/*
 * MPL_SWINT_2 Set to Protection Level 0.
 * Writing a one to this register sets MPL_SWINT_2 to 0
 */
#define SPR_MPL_SWINT_2_SET_0 0x0d00

#define SPR_MPL_SWINT_2_SET_0__SET_SHIFT 0
#define SPR_MPL_SWINT_2_SET_0__SET_WIDTH 1
#define SPR_MPL_SWINT_2_SET_0__SET_RESET_VAL 0
#define SPR_MPL_SWINT_2_SET_0__SET_RMASK 0x1
#define SPR_MPL_SWINT_2_SET_0__SET_MASK  0x1
#define SPR_MPL_SWINT_2_SET_0__SET_FIELD 0,0


/*
 * MPL_SWINT_2 Set to Protection Level 1.
 * Writing a one to this register sets MPL_SWINT_2 to 1
 */
#define SPR_MPL_SWINT_2_SET_1 0x0d01

#define SPR_MPL_SWINT_2_SET_1__SET_SHIFT 0
#define SPR_MPL_SWINT_2_SET_1__SET_WIDTH 1
#define SPR_MPL_SWINT_2_SET_1__SET_RESET_VAL 0
#define SPR_MPL_SWINT_2_SET_1__SET_RMASK 0x1
#define SPR_MPL_SWINT_2_SET_1__SET_MASK  0x1
#define SPR_MPL_SWINT_2_SET_1__SET_FIELD 0,0


/*
 * MPL_SWINT_2 Set to Protection Level 2.
 * Writing a one to this register sets MPL_SWINT_2 to 2
 */
#define SPR_MPL_SWINT_2_SET_2 0x0d02

#define SPR_MPL_SWINT_2_SET_2__SET_SHIFT 0
#define SPR_MPL_SWINT_2_SET_2__SET_WIDTH 1
#define SPR_MPL_SWINT_2_SET_2__SET_RESET_VAL 0
#define SPR_MPL_SWINT_2_SET_2__SET_RMASK 0x1
#define SPR_MPL_SWINT_2_SET_2__SET_MASK  0x1
#define SPR_MPL_SWINT_2_SET_2__SET_FIELD 0,0


/*
 * MPL_SWINT_2 Set to Protection Level 3.
 * Writing a one to this register sets MPL_SWINT_2 to 3
 */
#define SPR_MPL_SWINT_2_SET_3 0x0d03

#define SPR_MPL_SWINT_2_SET_3__SET_SHIFT 0
#define SPR_MPL_SWINT_2_SET_3__SET_WIDTH 1
#define SPR_MPL_SWINT_2_SET_3__SET_RESET_VAL 0
#define SPR_MPL_SWINT_2_SET_3__SET_RMASK 0x1
#define SPR_MPL_SWINT_2_SET_3__SET_MASK  0x1
#define SPR_MPL_SWINT_2_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Software Interrupt 3.
 * This register specifies the minimum protection level associated with a
 * software interrupt 3.
 */
#define SPR_MPL_SWINT_3 0x0c04

#define SPR_MPL_SWINT_3__MPL_SHIFT 0
#define SPR_MPL_SWINT_3__MPL_WIDTH 2
#define SPR_MPL_SWINT_3__MPL_RESET_VAL 3
#define SPR_MPL_SWINT_3__MPL_RMASK 0x3
#define SPR_MPL_SWINT_3__MPL_MASK  0x3
#define SPR_MPL_SWINT_3__MPL_FIELD 0,1


/*
 * MPL_SWINT_3 Set to Protection Level 0.
 * Writing a one to this register sets MPL_SWINT_3 to 0
 */
#define SPR_MPL_SWINT_3_SET_0 0x0c00

#define SPR_MPL_SWINT_3_SET_0__SET_SHIFT 0
#define SPR_MPL_SWINT_3_SET_0__SET_WIDTH 1
#define SPR_MPL_SWINT_3_SET_0__SET_RESET_VAL 0
#define SPR_MPL_SWINT_3_SET_0__SET_RMASK 0x1
#define SPR_MPL_SWINT_3_SET_0__SET_MASK  0x1
#define SPR_MPL_SWINT_3_SET_0__SET_FIELD 0,0


/*
 * MPL_SWINT_3 Set to Protection Level 1.
 * Writing a one to this register sets MPL_SWINT_3 to 1
 */
#define SPR_MPL_SWINT_3_SET_1 0x0c01

#define SPR_MPL_SWINT_3_SET_1__SET_SHIFT 0
#define SPR_MPL_SWINT_3_SET_1__SET_WIDTH 1
#define SPR_MPL_SWINT_3_SET_1__SET_RESET_VAL 0
#define SPR_MPL_SWINT_3_SET_1__SET_RMASK 0x1
#define SPR_MPL_SWINT_3_SET_1__SET_MASK  0x1
#define SPR_MPL_SWINT_3_SET_1__SET_FIELD 0,0


/*
 * MPL_SWINT_3 Set to Protection Level 2.
 * Writing a one to this register sets MPL_SWINT_3 to 2
 */
#define SPR_MPL_SWINT_3_SET_2 0x0c02

#define SPR_MPL_SWINT_3_SET_2__SET_SHIFT 0
#define SPR_MPL_SWINT_3_SET_2__SET_WIDTH 1
#define SPR_MPL_SWINT_3_SET_2__SET_RESET_VAL 0
#define SPR_MPL_SWINT_3_SET_2__SET_RMASK 0x1
#define SPR_MPL_SWINT_3_SET_2__SET_MASK  0x1
#define SPR_MPL_SWINT_3_SET_2__SET_FIELD 0,0


/*
 * MPL_SWINT_3 Set to Protection Level 3.
 * Writing a one to this register sets MPL_SWINT_3 to 3
 */
#define SPR_MPL_SWINT_3_SET_3 0x0c03

#define SPR_MPL_SWINT_3_SET_3__SET_SHIFT 0
#define SPR_MPL_SWINT_3_SET_3__SET_WIDTH 1
#define SPR_MPL_SWINT_3_SET_3__SET_RESET_VAL 0
#define SPR_MPL_SWINT_3_SET_3__SET_RMASK 0x1
#define SPR_MPL_SWINT_3_SET_3__SET_MASK  0x1
#define SPR_MPL_SWINT_3_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Tile Timer.
 * This register specifies the minimum protection level needed to
 * administratively access the tile timer and it serves as the protection
 * level that handles tile timer interrupt.
 */
#define SPR_MPL_TILE_TIMER 0x1604

#define SPR_MPL_TILE_TIMER__MPL_SHIFT 0
#define SPR_MPL_TILE_TIMER__MPL_WIDTH 2
#define SPR_MPL_TILE_TIMER__MPL_RESET_VAL 3
#define SPR_MPL_TILE_TIMER__MPL_RMASK 0x3
#define SPR_MPL_TILE_TIMER__MPL_MASK  0x3
#define SPR_MPL_TILE_TIMER__MPL_FIELD 0,1


/*
 * MPL_TILE_TIMER Set to Protection Level 0.
 * Writing a one to this register sets MPL_TILE_TIMER to 0
 */
#define SPR_MPL_TILE_TIMER_SET_0 0x1600

#define SPR_MPL_TILE_TIMER_SET_0__SET_SHIFT 0
#define SPR_MPL_TILE_TIMER_SET_0__SET_WIDTH 1
#define SPR_MPL_TILE_TIMER_SET_0__SET_RESET_VAL 0
#define SPR_MPL_TILE_TIMER_SET_0__SET_RMASK 0x1
#define SPR_MPL_TILE_TIMER_SET_0__SET_MASK  0x1
#define SPR_MPL_TILE_TIMER_SET_0__SET_FIELD 0,0


/*
 * MPL_TILE_TIMER Set to Protection Level 1.
 * Writing a one to this register sets MPL_TILE_TIMER to 1
 */
#define SPR_MPL_TILE_TIMER_SET_1 0x1601

#define SPR_MPL_TILE_TIMER_SET_1__SET_SHIFT 0
#define SPR_MPL_TILE_TIMER_SET_1__SET_WIDTH 1
#define SPR_MPL_TILE_TIMER_SET_1__SET_RESET_VAL 0
#define SPR_MPL_TILE_TIMER_SET_1__SET_RMASK 0x1
#define SPR_MPL_TILE_TIMER_SET_1__SET_MASK  0x1
#define SPR_MPL_TILE_TIMER_SET_1__SET_FIELD 0,0


/*
 * MPL_TILE_TIMER Set to Protection Level 2.
 * Writing a one to this register sets MPL_TILE_TIMER to 2
 */
#define SPR_MPL_TILE_TIMER_SET_2 0x1602

#define SPR_MPL_TILE_TIMER_SET_2__SET_SHIFT 0
#define SPR_MPL_TILE_TIMER_SET_2__SET_WIDTH 1
#define SPR_MPL_TILE_TIMER_SET_2__SET_RESET_VAL 0
#define SPR_MPL_TILE_TIMER_SET_2__SET_RMASK 0x1
#define SPR_MPL_TILE_TIMER_SET_2__SET_MASK  0x1
#define SPR_MPL_TILE_TIMER_SET_2__SET_FIELD 0,0


/*
 * MPL_TILE_TIMER Set to Protection Level 3.
 * Writing a one to this register sets MPL_TILE_TIMER to 3
 */
#define SPR_MPL_TILE_TIMER_SET_3 0x1603

#define SPR_MPL_TILE_TIMER_SET_3__SET_SHIFT 0
#define SPR_MPL_TILE_TIMER_SET_3__SET_WIDTH 1
#define SPR_MPL_TILE_TIMER_SET_3__SET_RESET_VAL 0
#define SPR_MPL_TILE_TIMER_SET_3__SET_RMASK 0x1
#define SPR_MPL_TILE_TIMER_SET_3__SET_MASK  0x1
#define SPR_MPL_TILE_TIMER_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for a User Dynamic Network Access Violation.
 * This register specifies the minimum protection level needed to
 * administratively access user dynamic network control state and it serves
 * as the protection level to handle illegal user dynamic network accesses.
 */
#define SPR_MPL_UDN_ACCESS 0x0b04

#define SPR_MPL_UDN_ACCESS__MPL_SHIFT 0
#define SPR_MPL_UDN_ACCESS__MPL_WIDTH 2
#define SPR_MPL_UDN_ACCESS__MPL_RESET_VAL 3
#define SPR_MPL_UDN_ACCESS__MPL_RMASK 0x3
#define SPR_MPL_UDN_ACCESS__MPL_MASK  0x3
#define SPR_MPL_UDN_ACCESS__MPL_FIELD 0,1


/*
 * MPL_UDN_ACCESS Set to Protection Level 0.
 * Writing a one to this register sets MPL_UDN_ACCESS to 0
 */
#define SPR_MPL_UDN_ACCESS_SET_0 0x0b00

#define SPR_MPL_UDN_ACCESS_SET_0__SET_SHIFT 0
#define SPR_MPL_UDN_ACCESS_SET_0__SET_WIDTH 1
#define SPR_MPL_UDN_ACCESS_SET_0__SET_RESET_VAL 0
#define SPR_MPL_UDN_ACCESS_SET_0__SET_RMASK 0x1
#define SPR_MPL_UDN_ACCESS_SET_0__SET_MASK  0x1
#define SPR_MPL_UDN_ACCESS_SET_0__SET_FIELD 0,0


/*
 * MPL_UDN_ACCESS Set to Protection Level 1.
 * Writing a one to this register sets MPL_UDN_ACCESS to 1
 */
#define SPR_MPL_UDN_ACCESS_SET_1 0x0b01

#define SPR_MPL_UDN_ACCESS_SET_1__SET_SHIFT 0
#define SPR_MPL_UDN_ACCESS_SET_1__SET_WIDTH 1
#define SPR_MPL_UDN_ACCESS_SET_1__SET_RESET_VAL 0
#define SPR_MPL_UDN_ACCESS_SET_1__SET_RMASK 0x1
#define SPR_MPL_UDN_ACCESS_SET_1__SET_MASK  0x1
#define SPR_MPL_UDN_ACCESS_SET_1__SET_FIELD 0,0


/*
 * MPL_UDN_ACCESS Set to Protection Level 2.
 * Writing a one to this register sets MPL_UDN_ACCESS to 2
 */
#define SPR_MPL_UDN_ACCESS_SET_2 0x0b02

#define SPR_MPL_UDN_ACCESS_SET_2__SET_SHIFT 0
#define SPR_MPL_UDN_ACCESS_SET_2__SET_WIDTH 1
#define SPR_MPL_UDN_ACCESS_SET_2__SET_RESET_VAL 0
#define SPR_MPL_UDN_ACCESS_SET_2__SET_RMASK 0x1
#define SPR_MPL_UDN_ACCESS_SET_2__SET_MASK  0x1
#define SPR_MPL_UDN_ACCESS_SET_2__SET_FIELD 0,0


/*
 * MPL_UDN_ACCESS Set to Protection Level 3.
 * Writing a one to this register sets MPL_UDN_ACCESS to 3
 */
#define SPR_MPL_UDN_ACCESS_SET_3 0x0b03

#define SPR_MPL_UDN_ACCESS_SET_3__SET_SHIFT 0
#define SPR_MPL_UDN_ACCESS_SET_3__SET_WIDTH 1
#define SPR_MPL_UDN_ACCESS_SET_3__SET_RESET_VAL 0
#define SPR_MPL_UDN_ACCESS_SET_3__SET_RMASK 0x1
#define SPR_MPL_UDN_ACCESS_SET_3__SET_MASK  0x1
#define SPR_MPL_UDN_ACCESS_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for User Dynamic Network Available.
 * This register specifies the protection level that handles user dynamic
 * network available interrupts.
 */
#define SPR_MPL_UDN_AVAIL 0x1b04

#define SPR_MPL_UDN_AVAIL__MPL_SHIFT 0
#define SPR_MPL_UDN_AVAIL__MPL_WIDTH 2
#define SPR_MPL_UDN_AVAIL__MPL_RESET_VAL 3
#define SPR_MPL_UDN_AVAIL__MPL_RMASK 0x3
#define SPR_MPL_UDN_AVAIL__MPL_MASK  0x3
#define SPR_MPL_UDN_AVAIL__MPL_FIELD 0,1


/*
 * MPL_UDN_AVAIL Set to Protection Level 0.
 * Writing a one to this register sets MPL_UDN_AVAIL to 0
 */
#define SPR_MPL_UDN_AVAIL_SET_0 0x1b00

#define SPR_MPL_UDN_AVAIL_SET_0__SET_SHIFT 0
#define SPR_MPL_UDN_AVAIL_SET_0__SET_WIDTH 1
#define SPR_MPL_UDN_AVAIL_SET_0__SET_RESET_VAL 0
#define SPR_MPL_UDN_AVAIL_SET_0__SET_RMASK 0x1
#define SPR_MPL_UDN_AVAIL_SET_0__SET_MASK  0x1
#define SPR_MPL_UDN_AVAIL_SET_0__SET_FIELD 0,0


/*
 * MPL_UDN_AVAIL Set to Protection Level 1.
 * Writing a one to this register sets MPL_UDN_AVAIL to 1
 */
#define SPR_MPL_UDN_AVAIL_SET_1 0x1b01

#define SPR_MPL_UDN_AVAIL_SET_1__SET_SHIFT 0
#define SPR_MPL_UDN_AVAIL_SET_1__SET_WIDTH 1
#define SPR_MPL_UDN_AVAIL_SET_1__SET_RESET_VAL 0
#define SPR_MPL_UDN_AVAIL_SET_1__SET_RMASK 0x1
#define SPR_MPL_UDN_AVAIL_SET_1__SET_MASK  0x1
#define SPR_MPL_UDN_AVAIL_SET_1__SET_FIELD 0,0


/*
 * MPL_UDN_AVAIL Set to Protection Level 2.
 * Writing a one to this register sets MPL_UDN_AVAIL to 2
 */
#define SPR_MPL_UDN_AVAIL_SET_2 0x1b02

#define SPR_MPL_UDN_AVAIL_SET_2__SET_SHIFT 0
#define SPR_MPL_UDN_AVAIL_SET_2__SET_WIDTH 1
#define SPR_MPL_UDN_AVAIL_SET_2__SET_RESET_VAL 0
#define SPR_MPL_UDN_AVAIL_SET_2__SET_RMASK 0x1
#define SPR_MPL_UDN_AVAIL_SET_2__SET_MASK  0x1
#define SPR_MPL_UDN_AVAIL_SET_2__SET_FIELD 0,0


/*
 * MPL_UDN_AVAIL Set to Protection Level 3.
 * Writing a one to this register sets MPL_UDN_AVAIL to 3
 */
#define SPR_MPL_UDN_AVAIL_SET_3 0x1b03

#define SPR_MPL_UDN_AVAIL_SET_3__SET_SHIFT 0
#define SPR_MPL_UDN_AVAIL_SET_3__SET_WIDTH 1
#define SPR_MPL_UDN_AVAIL_SET_3__SET_RESET_VAL 0
#define SPR_MPL_UDN_AVAIL_SET_3__SET_RMASK 0x1
#define SPR_MPL_UDN_AVAIL_SET_3__SET_MASK  0x1
#define SPR_MPL_UDN_AVAIL_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for User Dynamic Network Complete Interrupt.
 * This register specifies the minimum protection level associated with a
 * user dynamic network complete interrupt.
 */
#define SPR_MPL_UDN_COMPLETE 0x0604

#define SPR_MPL_UDN_COMPLETE__MPL_SHIFT 0
#define SPR_MPL_UDN_COMPLETE__MPL_WIDTH 2
#define SPR_MPL_UDN_COMPLETE__MPL_RESET_VAL 3
#define SPR_MPL_UDN_COMPLETE__MPL_RMASK 0x3
#define SPR_MPL_UDN_COMPLETE__MPL_MASK  0x3
#define SPR_MPL_UDN_COMPLETE__MPL_FIELD 0,1


/*
 * MPL_UDN_COMPLETE Set to Protection Level 0.
 * Writing a one to this register sets MPL_UDN_COMPLETE to 0
 */
#define SPR_MPL_UDN_COMPLETE_SET_0 0x0600

#define SPR_MPL_UDN_COMPLETE_SET_0__SET_SHIFT 0
#define SPR_MPL_UDN_COMPLETE_SET_0__SET_WIDTH 1
#define SPR_MPL_UDN_COMPLETE_SET_0__SET_RESET_VAL 0
#define SPR_MPL_UDN_COMPLETE_SET_0__SET_RMASK 0x1
#define SPR_MPL_UDN_COMPLETE_SET_0__SET_MASK  0x1
#define SPR_MPL_UDN_COMPLETE_SET_0__SET_FIELD 0,0


/*
 * MPL_UDN_COMPLETE Set to Protection Level 1.
 * Writing a one to this register sets MPL_UDN_COMPLETE to 1
 */
#define SPR_MPL_UDN_COMPLETE_SET_1 0x0601

#define SPR_MPL_UDN_COMPLETE_SET_1__SET_SHIFT 0
#define SPR_MPL_UDN_COMPLETE_SET_1__SET_WIDTH 1
#define SPR_MPL_UDN_COMPLETE_SET_1__SET_RESET_VAL 0
#define SPR_MPL_UDN_COMPLETE_SET_1__SET_RMASK 0x1
#define SPR_MPL_UDN_COMPLETE_SET_1__SET_MASK  0x1
#define SPR_MPL_UDN_COMPLETE_SET_1__SET_FIELD 0,0


/*
 * MPL_UDN_COMPLETE Set to Protection Level 2.
 * Writing a one to this register sets MPL_UDN_COMPLETE to 2
 */
#define SPR_MPL_UDN_COMPLETE_SET_2 0x0602

#define SPR_MPL_UDN_COMPLETE_SET_2__SET_SHIFT 0
#define SPR_MPL_UDN_COMPLETE_SET_2__SET_WIDTH 1
#define SPR_MPL_UDN_COMPLETE_SET_2__SET_RESET_VAL 0
#define SPR_MPL_UDN_COMPLETE_SET_2__SET_RMASK 0x1
#define SPR_MPL_UDN_COMPLETE_SET_2__SET_MASK  0x1
#define SPR_MPL_UDN_COMPLETE_SET_2__SET_FIELD 0,0


/*
 * MPL_UDN_COMPLETE Set to Protection Level 3.
 * Writing a one to this register sets MPL_UDN_COMPLETE to 3
 */
#define SPR_MPL_UDN_COMPLETE_SET_3 0x0603

#define SPR_MPL_UDN_COMPLETE_SET_3__SET_SHIFT 0
#define SPR_MPL_UDN_COMPLETE_SET_3__SET_WIDTH 1
#define SPR_MPL_UDN_COMPLETE_SET_3__SET_RESET_VAL 0
#define SPR_MPL_UDN_COMPLETE_SET_3__SET_RMASK 0x1
#define SPR_MPL_UDN_COMPLETE_SET_3__SET_MASK  0x1
#define SPR_MPL_UDN_COMPLETE_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for User Dynamic Network Firewall Violation.
 * This register specifies the minimum protection level needed to
 * administratively access the user dynamic network firewall controls and it
 * serves as the protection level that handles user dynamic network firewall
 * violation interrupts.
 */
#define SPR_MPL_UDN_FIREWALL 0x1504

#define SPR_MPL_UDN_FIREWALL__MPL_SHIFT 0
#define SPR_MPL_UDN_FIREWALL__MPL_WIDTH 2
#define SPR_MPL_UDN_FIREWALL__MPL_RESET_VAL 3
#define SPR_MPL_UDN_FIREWALL__MPL_RMASK 0x3
#define SPR_MPL_UDN_FIREWALL__MPL_MASK  0x3
#define SPR_MPL_UDN_FIREWALL__MPL_FIELD 0,1


/*
 * MPL_UDN_FIREWALL Set to Protection Level 0.
 * Writing a one to this register sets MPL_UDN_FIREWALL to 0
 */
#define SPR_MPL_UDN_FIREWALL_SET_0 0x1500

#define SPR_MPL_UDN_FIREWALL_SET_0__SET_SHIFT 0
#define SPR_MPL_UDN_FIREWALL_SET_0__SET_WIDTH 1
#define SPR_MPL_UDN_FIREWALL_SET_0__SET_RESET_VAL 0
#define SPR_MPL_UDN_FIREWALL_SET_0__SET_RMASK 0x1
#define SPR_MPL_UDN_FIREWALL_SET_0__SET_MASK  0x1
#define SPR_MPL_UDN_FIREWALL_SET_0__SET_FIELD 0,0


/*
 * MPL_UDN_FIREWALL Set to Protection Level 1.
 * Writing a one to this register sets MPL_UDN_FIREWALL to 1
 */
#define SPR_MPL_UDN_FIREWALL_SET_1 0x1501

#define SPR_MPL_UDN_FIREWALL_SET_1__SET_SHIFT 0
#define SPR_MPL_UDN_FIREWALL_SET_1__SET_WIDTH 1
#define SPR_MPL_UDN_FIREWALL_SET_1__SET_RESET_VAL 0
#define SPR_MPL_UDN_FIREWALL_SET_1__SET_RMASK 0x1
#define SPR_MPL_UDN_FIREWALL_SET_1__SET_MASK  0x1
#define SPR_MPL_UDN_FIREWALL_SET_1__SET_FIELD 0,0


/*
 * MPL_UDN_FIREWALL Set to Protection Level 2.
 * Writing a one to this register sets MPL_UDN_FIREWALL to 2
 */
#define SPR_MPL_UDN_FIREWALL_SET_2 0x1502

#define SPR_MPL_UDN_FIREWALL_SET_2__SET_SHIFT 0
#define SPR_MPL_UDN_FIREWALL_SET_2__SET_WIDTH 1
#define SPR_MPL_UDN_FIREWALL_SET_2__SET_RESET_VAL 0
#define SPR_MPL_UDN_FIREWALL_SET_2__SET_RMASK 0x1
#define SPR_MPL_UDN_FIREWALL_SET_2__SET_MASK  0x1
#define SPR_MPL_UDN_FIREWALL_SET_2__SET_FIELD 0,0


/*
 * MPL_UDN_FIREWALL Set to Protection Level 3.
 * Writing a one to this register sets MPL_UDN_FIREWALL to 3
 */
#define SPR_MPL_UDN_FIREWALL_SET_3 0x1503

#define SPR_MPL_UDN_FIREWALL_SET_3__SET_SHIFT 0
#define SPR_MPL_UDN_FIREWALL_SET_3__SET_WIDTH 1
#define SPR_MPL_UDN_FIREWALL_SET_3__SET_RESET_VAL 0
#define SPR_MPL_UDN_FIREWALL_SET_3__SET_RMASK 0x1
#define SPR_MPL_UDN_FIREWALL_SET_3__SET_MASK  0x1
#define SPR_MPL_UDN_FIREWALL_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for User Dynamic Network Timer.
 * This register specifies the minimum protection level needed to
 * administratively access the user dynamic network controls and it serves as
 * the protection level that handles user dynamic network timer interrupts.
 */
#define SPR_MPL_UDN_TIMER 0x1904

#define SPR_MPL_UDN_TIMER__MPL_SHIFT 0
#define SPR_MPL_UDN_TIMER__MPL_WIDTH 2
#define SPR_MPL_UDN_TIMER__MPL_RESET_VAL 3
#define SPR_MPL_UDN_TIMER__MPL_RMASK 0x3
#define SPR_MPL_UDN_TIMER__MPL_MASK  0x3
#define SPR_MPL_UDN_TIMER__MPL_FIELD 0,1


/*
 * MPL_UDN_TIMER Set to Protection Level 0.
 * Writing a one to this register sets MPL_UDN_TIMER to 0
 */
#define SPR_MPL_UDN_TIMER_SET_0 0x1900

#define SPR_MPL_UDN_TIMER_SET_0__SET_SHIFT 0
#define SPR_MPL_UDN_TIMER_SET_0__SET_WIDTH 1
#define SPR_MPL_UDN_TIMER_SET_0__SET_RESET_VAL 0
#define SPR_MPL_UDN_TIMER_SET_0__SET_RMASK 0x1
#define SPR_MPL_UDN_TIMER_SET_0__SET_MASK  0x1
#define SPR_MPL_UDN_TIMER_SET_0__SET_FIELD 0,0


/*
 * MPL_UDN_TIMER Set to Protection Level 1.
 * Writing a one to this register sets MPL_UDN_TIMER to 1
 */
#define SPR_MPL_UDN_TIMER_SET_1 0x1901

#define SPR_MPL_UDN_TIMER_SET_1__SET_SHIFT 0
#define SPR_MPL_UDN_TIMER_SET_1__SET_WIDTH 1
#define SPR_MPL_UDN_TIMER_SET_1__SET_RESET_VAL 0
#define SPR_MPL_UDN_TIMER_SET_1__SET_RMASK 0x1
#define SPR_MPL_UDN_TIMER_SET_1__SET_MASK  0x1
#define SPR_MPL_UDN_TIMER_SET_1__SET_FIELD 0,0


/*
 * MPL_UDN_TIMER Set to Protection Level 2.
 * Writing a one to this register sets MPL_UDN_TIMER to 2
 */
#define SPR_MPL_UDN_TIMER_SET_2 0x1902

#define SPR_MPL_UDN_TIMER_SET_2__SET_SHIFT 0
#define SPR_MPL_UDN_TIMER_SET_2__SET_WIDTH 1
#define SPR_MPL_UDN_TIMER_SET_2__SET_RESET_VAL 0
#define SPR_MPL_UDN_TIMER_SET_2__SET_RMASK 0x1
#define SPR_MPL_UDN_TIMER_SET_2__SET_MASK  0x1
#define SPR_MPL_UDN_TIMER_SET_2__SET_FIELD 0,0


/*
 * MPL_UDN_TIMER Set to Protection Level 3.
 * Writing a one to this register sets MPL_UDN_TIMER to 3
 */
#define SPR_MPL_UDN_TIMER_SET_3 0x1903

#define SPR_MPL_UDN_TIMER_SET_3__SET_SHIFT 0
#define SPR_MPL_UDN_TIMER_SET_3__SET_WIDTH 1
#define SPR_MPL_UDN_TIMER_SET_3__SET_RESET_VAL 0
#define SPR_MPL_UDN_TIMER_SET_3__SET_RMASK 0x1
#define SPR_MPL_UDN_TIMER_SET_3__SET_MASK  0x1
#define SPR_MPL_UDN_TIMER_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for Unaligned Data Reference Interrupt.
 * This register specifies the minimum protection level associated with a
 * unaligned data reference interrupt.
 */
#define SPR_MPL_UNALIGN_DATA 0x1104

#define SPR_MPL_UNALIGN_DATA__MPL_SHIFT 0
#define SPR_MPL_UNALIGN_DATA__MPL_WIDTH 2
#define SPR_MPL_UNALIGN_DATA__MPL_RESET_VAL 3
#define SPR_MPL_UNALIGN_DATA__MPL_RMASK 0x3
#define SPR_MPL_UNALIGN_DATA__MPL_MASK  0x3
#define SPR_MPL_UNALIGN_DATA__MPL_FIELD 0,1


/*
 * MPL_UNALIGN_DATA Set to Protection Level 0.
 * Writing a one to this register sets MPL_UNALIGN_DATA to 0
 */
#define SPR_MPL_UNALIGN_DATA_SET_0 0x1100

#define SPR_MPL_UNALIGN_DATA_SET_0__SET_SHIFT 0
#define SPR_MPL_UNALIGN_DATA_SET_0__SET_WIDTH 1
#define SPR_MPL_UNALIGN_DATA_SET_0__SET_RESET_VAL 0
#define SPR_MPL_UNALIGN_DATA_SET_0__SET_RMASK 0x1
#define SPR_MPL_UNALIGN_DATA_SET_0__SET_MASK  0x1
#define SPR_MPL_UNALIGN_DATA_SET_0__SET_FIELD 0,0


/*
 * MPL_UNALIGN_DATA Set to Protection Level 1.
 * Writing a one to this register sets MPL_UNALIGN_DATA to 1
 */
#define SPR_MPL_UNALIGN_DATA_SET_1 0x1101

#define SPR_MPL_UNALIGN_DATA_SET_1__SET_SHIFT 0
#define SPR_MPL_UNALIGN_DATA_SET_1__SET_WIDTH 1
#define SPR_MPL_UNALIGN_DATA_SET_1__SET_RESET_VAL 0
#define SPR_MPL_UNALIGN_DATA_SET_1__SET_RMASK 0x1
#define SPR_MPL_UNALIGN_DATA_SET_1__SET_MASK  0x1
#define SPR_MPL_UNALIGN_DATA_SET_1__SET_FIELD 0,0


/*
 * MPL_UNALIGN_DATA Set to Protection Level 2.
 * Writing a one to this register sets MPL_UNALIGN_DATA to 2
 */
#define SPR_MPL_UNALIGN_DATA_SET_2 0x1102

#define SPR_MPL_UNALIGN_DATA_SET_2__SET_SHIFT 0
#define SPR_MPL_UNALIGN_DATA_SET_2__SET_WIDTH 1
#define SPR_MPL_UNALIGN_DATA_SET_2__SET_RESET_VAL 0
#define SPR_MPL_UNALIGN_DATA_SET_2__SET_RMASK 0x1
#define SPR_MPL_UNALIGN_DATA_SET_2__SET_MASK  0x1
#define SPR_MPL_UNALIGN_DATA_SET_2__SET_FIELD 0,0


/*
 * MPL_UNALIGN_DATA Set to Protection Level 3.
 * Writing a one to this register sets MPL_UNALIGN_DATA to 3
 */
#define SPR_MPL_UNALIGN_DATA_SET_3 0x1103

#define SPR_MPL_UNALIGN_DATA_SET_3__SET_SHIFT 0
#define SPR_MPL_UNALIGN_DATA_SET_3__SET_WIDTH 1
#define SPR_MPL_UNALIGN_DATA_SET_3__SET_RESET_VAL 0
#define SPR_MPL_UNALIGN_DATA_SET_3__SET_RMASK 0x1
#define SPR_MPL_UNALIGN_DATA_SET_3__SET_MASK  0x1
#define SPR_MPL_UNALIGN_DATA_SET_3__SET_FIELD 0,0


/*
 * Minimum Protection Level for World Access.
 * This register specifies the protection level needed to administratively
 * access the world level controls.
 */
#define SPR_MPL_WORLD_ACCESS 0x2704

#define SPR_MPL_WORLD_ACCESS__MPL_SHIFT 0
#define SPR_MPL_WORLD_ACCESS__MPL_WIDTH 2
#define SPR_MPL_WORLD_ACCESS__MPL_RESET_VAL 3
#define SPR_MPL_WORLD_ACCESS__MPL_RMASK 0x3
#define SPR_MPL_WORLD_ACCESS__MPL_MASK  0x3
#define SPR_MPL_WORLD_ACCESS__MPL_FIELD 0,1


/*
 * MPL_WORLD_ACCESS Set to Protection Level 0.
 * Writing a one to this register sets MPL_WORLD_ACCESS to 0
 */
#define SPR_MPL_WORLD_ACCESS_SET_0 0x2700

#define SPR_MPL_WORLD_ACCESS_SET_0__SET_SHIFT 0
#define SPR_MPL_WORLD_ACCESS_SET_0__SET_WIDTH 1
#define SPR_MPL_WORLD_ACCESS_SET_0__SET_RESET_VAL 0
#define SPR_MPL_WORLD_ACCESS_SET_0__SET_RMASK 0x1
#define SPR_MPL_WORLD_ACCESS_SET_0__SET_MASK  0x1
#define SPR_MPL_WORLD_ACCESS_SET_0__SET_FIELD 0,0


/*
 * MPL_WORLD_ACCESS Set to Protection Level 1.
 * Writing a one to this register sets MPL_WORLD_ACCESS to 1
 */
#define SPR_MPL_WORLD_ACCESS_SET_1 0x2701

#define SPR_MPL_WORLD_ACCESS_SET_1__SET_SHIFT 0
#define SPR_MPL_WORLD_ACCESS_SET_1__SET_WIDTH 1
#define SPR_MPL_WORLD_ACCESS_SET_1__SET_RESET_VAL 0
#define SPR_MPL_WORLD_ACCESS_SET_1__SET_RMASK 0x1
#define SPR_MPL_WORLD_ACCESS_SET_1__SET_MASK  0x1
#define SPR_MPL_WORLD_ACCESS_SET_1__SET_FIELD 0,0


/*
 * MPL_WORLD_ACCESS Set to Protection Level 2.
 * Writing a one to this register sets MPL_WORLD_ACCESS to 2
 */
#define SPR_MPL_WORLD_ACCESS_SET_2 0x2702

#define SPR_MPL_WORLD_ACCESS_SET_2__SET_SHIFT 0
#define SPR_MPL_WORLD_ACCESS_SET_2__SET_WIDTH 1
#define SPR_MPL_WORLD_ACCESS_SET_2__SET_RESET_VAL 0
#define SPR_MPL_WORLD_ACCESS_SET_2__SET_RMASK 0x1
#define SPR_MPL_WORLD_ACCESS_SET_2__SET_MASK  0x1
#define SPR_MPL_WORLD_ACCESS_SET_2__SET_FIELD 0,0


/*
 * MPL_WORLD_ACCESS Set to Protection Level 3.
 * Writing a one to this register sets MPL_WORLD_ACCESS to 3
 */
#define SPR_MPL_WORLD_ACCESS_SET_3 0x2703

#define SPR_MPL_WORLD_ACCESS_SET_3__SET_SHIFT 0
#define SPR_MPL_WORLD_ACCESS_SET_3__SET_WIDTH 1
#define SPR_MPL_WORLD_ACCESS_SET_3__SET_RESET_VAL 0
#define SPR_MPL_WORLD_ACCESS_SET_3__SET_RMASK 0x1
#define SPR_MPL_WORLD_ACCESS_SET_3__SET_MASK  0x1
#define SPR_MPL_WORLD_ACCESS_SET_3__SET_FIELD 0,0


/*
 * Data TLB Number of Entries.
 * This register specifies how many data TLB entries there are.
 */
#define SPR_NUMBER_DTLB 0x128e

#define SPR_NUMBER_DTLB__NUM_SHIFT 0
#define SPR_NUMBER_DTLB__NUM_WIDTH 6
#define SPR_NUMBER_DTLB__NUM_RESET_VAL 0
#define SPR_NUMBER_DTLB__NUM_RMASK 0x3f
#define SPR_NUMBER_DTLB__NUM_MASK  0x3f
#define SPR_NUMBER_DTLB__NUM_FIELD 0,5


/*
 * Instruction TLB Number of Entries.
 * This register specifies how many instruction TLB entries there are.
 */
#define SPR_NUMBER_ITLB 0x078b

#define SPR_NUMBER_ITLB__NUM_SHIFT 0
#define SPR_NUMBER_ITLB__NUM_WIDTH 5
#define SPR_NUMBER_ITLB__NUM_RESET_VAL 0
#define SPR_NUMBER_ITLB__NUM_RMASK 0x1f
#define SPR_NUMBER_ITLB__NUM_MASK  0x1f
#define SPR_NUMBER_ITLB__NUM_FIELD 0,4


/*
 * Pass Magic Register.
 * A magic register that is used to pass information to the test system.
 * PASS/FAIL/DONE registers all share the same storage.
 */
#define SPR_PASS 0x2709

#define SPR_PASS__PASS_SHIFT 0
#define SPR_PASS__PASS_WIDTH 64
#define SPR_PASS__PASS_RESET_VAL 0
#define SPR_PASS__PASS_RMASK _64bit(0xffffffffffffffff)
#define SPR_PASS__PASS_MASK  _64bit(0xffffffffffffffff)
#define SPR_PASS__PASS_FIELD 0,63


/*
 * Performance Counter-0.
 * This register is a 32-bit performance counter.  Increment is controlled by
 * the PERF_COUNT_CTL register.
 */
#define SPR_PERF_COUNT_0 0x2005

#define SPR_PERF_COUNT_0__PERF_COUNT_0_SHIFT 0
#define SPR_PERF_COUNT_0__PERF_COUNT_0_WIDTH 32
#define SPR_PERF_COUNT_0__PERF_COUNT_0_RESET_VAL 0
#define SPR_PERF_COUNT_0__PERF_COUNT_0_RMASK 0xffffffff
#define SPR_PERF_COUNT_0__PERF_COUNT_0_MASK  0xffffffff
#define SPR_PERF_COUNT_0__PERF_COUNT_0_FIELD 0,31


/*
 * Performance Counter-1.
 * This register is a 32-bit performance counter.  Increment is controlled by
 * the PERF_COUNT_CTL register.
 */
#define SPR_PERF_COUNT_1 0x2006

#define SPR_PERF_COUNT_1__PERF_COUNT_1_SHIFT 0
#define SPR_PERF_COUNT_1__PERF_COUNT_1_WIDTH 32
#define SPR_PERF_COUNT_1__PERF_COUNT_1_RESET_VAL 0
#define SPR_PERF_COUNT_1__PERF_COUNT_1_RMASK 0xffffffff
#define SPR_PERF_COUNT_1__PERF_COUNT_1_MASK  0xffffffff
#define SPR_PERF_COUNT_1__PERF_COUNT_1_FIELD 0,31


/*
 * Performance Counter Control.
 * Controls selection of events used for performance counters and diagnostic
 * trace.  The SEL field selects a specific event within each box, and the
 * BOX field selects which boxes event is used.  The event is masked by the
 * PL MASK; using a mask of 0xf will disable the event completely.  Event 0
 * is used for PERF_COUNT_0 and Trigger 0; Event 1 is used for PERF_COUNT_1
 * and Trigger 1.
 */
#define SPR_PERF_COUNT_CTL 0x2007

#define SPR_PERF_COUNT_CTL__COUNT_0_SEL_SHIFT 0
#define SPR_PERF_COUNT_CTL__COUNT_0_SEL_WIDTH 6
#define SPR_PERF_COUNT_CTL__COUNT_0_SEL_RESET_VAL 0
#define SPR_PERF_COUNT_CTL__COUNT_0_SEL_RMASK 0x3f
#define SPR_PERF_COUNT_CTL__COUNT_0_SEL_MASK  0x3f
#define SPR_PERF_COUNT_CTL__COUNT_0_SEL_FIELD 0,5

#define SPR_PERF_COUNT_CTL__COUNT_0_BOX_SHIFT 6
#define SPR_PERF_COUNT_CTL__COUNT_0_BOX_WIDTH 3
#define SPR_PERF_COUNT_CTL__COUNT_0_BOX_RESET_VAL 0
#define SPR_PERF_COUNT_CTL__COUNT_0_BOX_RMASK 0x7
#define SPR_PERF_COUNT_CTL__COUNT_0_BOX_MASK  0x1c0
#define SPR_PERF_COUNT_CTL__COUNT_0_BOX_FIELD 6,8
#define SPR_PERF_COUNT_CTL__COUNT_0_BOX_VAL_NONE 0x0
#define SPR_PERF_COUNT_CTL__COUNT_0_BOX_VAL_MBOX 0x1
#define SPR_PERF_COUNT_CTL__COUNT_0_BOX_VAL_CBOX 0x2
#define SPR_PERF_COUNT_CTL__COUNT_0_BOX_VAL_SBOX 0x3
#define SPR_PERF_COUNT_CTL__COUNT_0_BOX_VAL_NETWORK 0x4
#define SPR_PERF_COUNT_CTL__COUNT_0_BOX_VAL_BCST 0x5
#define SPR_PERF_COUNT_CTL__COUNT_0_BOX_VAL_TOP 0x6
#define SPR_PERF_COUNT_CTL__COUNT_0_BOX_VAL_SPCL 0x7

#define SPR_PERF_COUNT_CTL__COUNT_0_MASK_SHIFT 10
#define SPR_PERF_COUNT_CTL__COUNT_0_MASK_WIDTH 4
#define SPR_PERF_COUNT_CTL__COUNT_0_MASK_RESET_VAL 15
#define SPR_PERF_COUNT_CTL__COUNT_0_MASK_RMASK 0xf
#define SPR_PERF_COUNT_CTL__COUNT_0_MASK_MASK  0x3c00
#define SPR_PERF_COUNT_CTL__COUNT_0_MASK_FIELD 10,13

#define SPR_PERF_COUNT_CTL__COUNT_1_SEL_SHIFT 16
#define SPR_PERF_COUNT_CTL__COUNT_1_SEL_WIDTH 6
#define SPR_PERF_COUNT_CTL__COUNT_1_SEL_RESET_VAL 0
#define SPR_PERF_COUNT_CTL__COUNT_1_SEL_RMASK 0x3f
#define SPR_PERF_COUNT_CTL__COUNT_1_SEL_MASK  0x3f0000
#define SPR_PERF_COUNT_CTL__COUNT_1_SEL_FIELD 16,21

#define SPR_PERF_COUNT_CTL__COUNT_1_BOX_SHIFT 22
#define SPR_PERF_COUNT_CTL__COUNT_1_BOX_WIDTH 3
#define SPR_PERF_COUNT_CTL__COUNT_1_BOX_RESET_VAL 0
#define SPR_PERF_COUNT_CTL__COUNT_1_BOX_RMASK 0x7
#define SPR_PERF_COUNT_CTL__COUNT_1_BOX_MASK  0x1c00000
#define SPR_PERF_COUNT_CTL__COUNT_1_BOX_FIELD 22,24
#define SPR_PERF_COUNT_CTL__COUNT_1_BOX_VAL_NONE 0x0
#define SPR_PERF_COUNT_CTL__COUNT_1_BOX_VAL_MBOX 0x1
#define SPR_PERF_COUNT_CTL__COUNT_1_BOX_VAL_CBOX 0x2
#define SPR_PERF_COUNT_CTL__COUNT_1_BOX_VAL_SBOX 0x3
#define SPR_PERF_COUNT_CTL__COUNT_1_BOX_VAL_NETWORK 0x4
#define SPR_PERF_COUNT_CTL__COUNT_1_BOX_VAL_BCST 0x5
#define SPR_PERF_COUNT_CTL__COUNT_1_BOX_VAL_TOP 0x6
#define SPR_PERF_COUNT_CTL__COUNT_1_BOX_VAL_SPCL 0x7

#define SPR_PERF_COUNT_CTL__COUNT_1_MASK_SHIFT 26
#define SPR_PERF_COUNT_CTL__COUNT_1_MASK_WIDTH 4
#define SPR_PERF_COUNT_CTL__COUNT_1_MASK_RESET_VAL 15
#define SPR_PERF_COUNT_CTL__COUNT_1_MASK_RMASK 0xf
#define SPR_PERF_COUNT_CTL__COUNT_1_MASK_MASK  0x3c000000
#define SPR_PERF_COUNT_CTL__COUNT_1_MASK_FIELD 26,29


/*
 * Performance Counter Control.
 * Provides selection of which ports participate in performance counter
 * events.  If multiple selected ports' events fire simultaneously, only one
 * event will be counted.
 */
#define SPR_PERF_COUNT_DN_CTL 0x2008

#define SPR_PERF_COUNT_DN_CTL__UDN_EVT_PORT_SEL_SHIFT 0
#define SPR_PERF_COUNT_DN_CTL__UDN_EVT_PORT_SEL_WIDTH 5
#define SPR_PERF_COUNT_DN_CTL__UDN_EVT_PORT_SEL_RESET_VAL 0
#define SPR_PERF_COUNT_DN_CTL__UDN_EVT_PORT_SEL_RMASK 0x1f
#define SPR_PERF_COUNT_DN_CTL__UDN_EVT_PORT_SEL_MASK  0x1f
#define SPR_PERF_COUNT_DN_CTL__UDN_EVT_PORT_SEL_FIELD 0,4

#define SPR_PERF_COUNT_DN_CTL__IDN_EVT_PORT_SEL_SHIFT 5
#define SPR_PERF_COUNT_DN_CTL__IDN_EVT_PORT_SEL_WIDTH 5
#define SPR_PERF_COUNT_DN_CTL__IDN_EVT_PORT_SEL_RESET_VAL 0
#define SPR_PERF_COUNT_DN_CTL__IDN_EVT_PORT_SEL_RMASK 0x1f
#define SPR_PERF_COUNT_DN_CTL__IDN_EVT_PORT_SEL_MASK  0x3e0
#define SPR_PERF_COUNT_DN_CTL__IDN_EVT_PORT_SEL_FIELD 5,9

#define SPR_PERF_COUNT_DN_CTL__QDN_EVT_PORT_SEL_SHIFT 10
#define SPR_PERF_COUNT_DN_CTL__QDN_EVT_PORT_SEL_WIDTH 5
#define SPR_PERF_COUNT_DN_CTL__QDN_EVT_PORT_SEL_RESET_VAL 0
#define SPR_PERF_COUNT_DN_CTL__QDN_EVT_PORT_SEL_RMASK 0x1f
#define SPR_PERF_COUNT_DN_CTL__QDN_EVT_PORT_SEL_MASK  0x7c00
#define SPR_PERF_COUNT_DN_CTL__QDN_EVT_PORT_SEL_FIELD 10,14

#define SPR_PERF_COUNT_DN_CTL__SDN_EVT_PORT_SEL_SHIFT 15
#define SPR_PERF_COUNT_DN_CTL__SDN_EVT_PORT_SEL_WIDTH 5
#define SPR_PERF_COUNT_DN_CTL__SDN_EVT_PORT_SEL_RESET_VAL 0
#define SPR_PERF_COUNT_DN_CTL__SDN_EVT_PORT_SEL_RMASK 0x1f
#define SPR_PERF_COUNT_DN_CTL__SDN_EVT_PORT_SEL_MASK  0xf8000
#define SPR_PERF_COUNT_DN_CTL__SDN_EVT_PORT_SEL_FIELD 15,19

#define SPR_PERF_COUNT_DN_CTL__RDN_EVT_PORT_SEL_SHIFT 20
#define SPR_PERF_COUNT_DN_CTL__RDN_EVT_PORT_SEL_WIDTH 5
#define SPR_PERF_COUNT_DN_CTL__RDN_EVT_PORT_SEL_RESET_VAL 0
#define SPR_PERF_COUNT_DN_CTL__RDN_EVT_PORT_SEL_RMASK 0x1f
#define SPR_PERF_COUNT_DN_CTL__RDN_EVT_PORT_SEL_MASK  0x1f00000
#define SPR_PERF_COUNT_DN_CTL__RDN_EVT_PORT_SEL_FIELD 20,24


/*
 * Performance Counter Protection Levels.
 * Prevent performance counter from counting events at the associated
 * protection levels.  The associated bit must be clear for a performance
 * counter to track events at that protection level, regardless of the
 * COUNT_MASK bit.
 */
#define SPR_PERF_COUNT_PLS 0x261e

#define SPR_PERF_COUNT_PLS__MASK_SHIFT 0
#define SPR_PERF_COUNT_PLS__MASK_WIDTH 4
#define SPR_PERF_COUNT_PLS__MASK_RESET_VAL 15
#define SPR_PERF_COUNT_PLS__MASK_RMASK 0xf
#define SPR_PERF_COUNT_PLS__MASK_MASK  0xf
#define SPR_PERF_COUNT_PLS__MASK_FIELD 0,3

#define SPR_PERF_COUNT_PLS__AUX_MASK_SHIFT 4
#define SPR_PERF_COUNT_PLS__AUX_MASK_WIDTH 4
#define SPR_PERF_COUNT_PLS__AUX_MASK_RESET_VAL 15
#define SPR_PERF_COUNT_PLS__AUX_MASK_RMASK 0xf
#define SPR_PERF_COUNT_PLS__AUX_MASK_MASK  0xf0
#define SPR_PERF_COUNT_PLS__AUX_MASK_FIELD 4,7


/*
 * Performance Counter Status.
 * Provides current overflow status of each performance counter.  When
 * written with a one, the status bit is cleared for the corresponding counter
 */
#define SPR_PERF_COUNT_STS 0x2009

#define SPR_PERF_COUNT_STS__OVERFLOW_SHIFT 0
#define SPR_PERF_COUNT_STS__OVERFLOW_WIDTH 2
#define SPR_PERF_COUNT_STS__OVERFLOW_RESET_VAL 0
#define SPR_PERF_COUNT_STS__OVERFLOW_RMASK 0x3
#define SPR_PERF_COUNT_STS__OVERFLOW_MASK  0x3
#define SPR_PERF_COUNT_STS__OVERFLOW_FIELD 0,1


/*
 * Processor Status Bits.
 * Contains bits pertaining to the status of the tile.
 */
#define SPR_PROC_STATUS 0x2784

#define SPR_PROC_STATUS__SATURATE_SHIFT 0
#define SPR_PROC_STATUS__SATURATE_WIDTH 1
#define SPR_PROC_STATUS__SATURATE_RESET_VAL 0
#define SPR_PROC_STATUS__SATURATE_RMASK 0x1
#define SPR_PROC_STATUS__SATURATE_MASK  0x1
#define SPR_PROC_STATUS__SATURATE_FIELD 0,0


/*
 * Pseudo Random Number Modification.
 * This register provides a 64 bit LFSR which can be used as a pseudo-random
 * number.  The value is changed either after each read, or every cycle,
 * based on the setting of SBOX_CONFIG PRN_MODE bit.  The generator
 * polynomial is 2^64 + 2^63 + 2^61 + 2^60 + 1.  Access at this index is
 * read-only; the register can be written at PSEUDO_RANDOM_NUMBER_MODIFY
 * index.
 */
#define SPR_PSEUDO_RANDOM_NUMBER 0x270a

#define SPR_PSEUDO_RANDOM_NUMBER__PSEUDO_RANDOM_NUMBER_SHIFT 0
#define SPR_PSEUDO_RANDOM_NUMBER__PSEUDO_RANDOM_NUMBER_WIDTH 64
#define SPR_PSEUDO_RANDOM_NUMBER__PSEUDO_RANDOM_NUMBER_RESET_VAL 0
#define SPR_PSEUDO_RANDOM_NUMBER__PSEUDO_RANDOM_NUMBER_RMASK _64bit(0xffffffffffffffff)
#define SPR_PSEUDO_RANDOM_NUMBER__PSEUDO_RANDOM_NUMBER_MASK  _64bit(0xffffffffffffffff)
#define SPR_PSEUDO_RANDOM_NUMBER__PSEUDO_RANDOM_NUMBER_FIELD 0,63


/*
 * Pseudo Random Number.
 * This register provided a 64 bit LFSR which can be used as a pseudo-random
 * number.  The value is changed either after each read, or every cycle,
 * based on the setting of SBOX_CONFIG PRN_MODE bit.  A new seed value can be
 * written to the register; a seed of 0 will not generate any new values.
 * The generator polynomial is 2^64 + 2^63 + 2^61 + 2^60 + 1.  Index
 * PSEUDO_RANDOM_NUMBER is an alias index providing read-only access to this
 * register.
 */
#define SPR_PSEUDO_RANDOM_NUMBER_MODIFY 0x261f

#define SPR_PSEUDO_RANDOM_NUMBER_MODIFY__PSEUDO_RANDOM_NUMBER_MODIFY_SHIFT 0
#define SPR_PSEUDO_RANDOM_NUMBER_MODIFY__PSEUDO_RANDOM_NUMBER_MODIFY_WIDTH 64
#define SPR_PSEUDO_RANDOM_NUMBER_MODIFY__PSEUDO_RANDOM_NUMBER_MODIFY_RESET_VAL 0
#define SPR_PSEUDO_RANDOM_NUMBER_MODIFY__PSEUDO_RANDOM_NUMBER_MODIFY_RMASK _64bit(0xffffffffffffffff)
#define SPR_PSEUDO_RANDOM_NUMBER_MODIFY__PSEUDO_RANDOM_NUMBER_MODIFY_MASK  _64bit(0xffffffffffffffff)
#define SPR_PSEUDO_RANDOM_NUMBER_MODIFY__PSEUDO_RANDOM_NUMBER_MODIFY_FIELD 0,63


/*
 * Diag Quiesce Control.
 * This register controls functions related to quiescing the Tile.
 */
#define SPR_QUIESCE_CTL 0x2620

#define SPR_QUIESCE_CTL__II_QUIESCE_REQUEST_SHIFT 0
#define SPR_QUIESCE_CTL__II_QUIESCE_REQUEST_WIDTH 1
#define SPR_QUIESCE_CTL__II_QUIESCE_REQUEST_RESET_VAL 0
#define SPR_QUIESCE_CTL__II_QUIESCE_REQUEST_RMASK 0x1
#define SPR_QUIESCE_CTL__II_QUIESCE_REQUEST_MASK  0x1
#define SPR_QUIESCE_CTL__II_QUIESCE_REQUEST_FIELD 0,0

#define SPR_QUIESCE_CTL__SET_II_QR_SHIFT 1
#define SPR_QUIESCE_CTL__SET_II_QR_WIDTH 1
#define SPR_QUIESCE_CTL__SET_II_QR_RESET_VAL 0
#define SPR_QUIESCE_CTL__SET_II_QR_RMASK 0x1
#define SPR_QUIESCE_CTL__SET_II_QR_MASK  0x2
#define SPR_QUIESCE_CTL__SET_II_QR_FIELD 1,1

#define SPR_QUIESCE_CTL__CLR_II_QR_SHIFT 2
#define SPR_QUIESCE_CTL__CLR_II_QR_WIDTH 1
#define SPR_QUIESCE_CTL__CLR_II_QR_RESET_VAL 0
#define SPR_QUIESCE_CTL__CLR_II_QR_RMASK 0x1
#define SPR_QUIESCE_CTL__CLR_II_QR_MASK  0x4
#define SPR_QUIESCE_CTL__CLR_II_QR_FIELD 2,2

#define SPR_QUIESCE_CTL__LOCAL_II_QR_ENABLE_SHIFT 3
#define SPR_QUIESCE_CTL__LOCAL_II_QR_ENABLE_WIDTH 1
#define SPR_QUIESCE_CTL__LOCAL_II_QR_ENABLE_RESET_VAL 1
#define SPR_QUIESCE_CTL__LOCAL_II_QR_ENABLE_RMASK 0x1
#define SPR_QUIESCE_CTL__LOCAL_II_QR_ENABLE_MASK  0x8
#define SPR_QUIESCE_CTL__LOCAL_II_QR_ENABLE_FIELD 3,3

#define SPR_QUIESCE_CTL__BCST_IN_II_QR_ENABLE_SHIFT 4
#define SPR_QUIESCE_CTL__BCST_IN_II_QR_ENABLE_WIDTH 4
#define SPR_QUIESCE_CTL__BCST_IN_II_QR_ENABLE_RESET_VAL 0
#define SPR_QUIESCE_CTL__BCST_IN_II_QR_ENABLE_RMASK 0xf
#define SPR_QUIESCE_CTL__BCST_IN_II_QR_ENABLE_MASK  0xf0
#define SPR_QUIESCE_CTL__BCST_IN_II_QR_ENABLE_FIELD 4,7

#define SPR_QUIESCE_CTL__BCST_OUT_II_QR_ENABLE_SHIFT 8
#define SPR_QUIESCE_CTL__BCST_OUT_II_QR_ENABLE_WIDTH 4
#define SPR_QUIESCE_CTL__BCST_OUT_II_QR_ENABLE_RESET_VAL 0
#define SPR_QUIESCE_CTL__BCST_OUT_II_QR_ENABLE_RMASK 0xf
#define SPR_QUIESCE_CTL__BCST_OUT_II_QR_ENABLE_MASK  0xf00
#define SPR_QUIESCE_CTL__BCST_OUT_II_QR_ENABLE_FIELD 8,11

#define SPR_QUIESCE_CTL__PERF_EVENT_II_QR_ENABLE_0_SHIFT 12
#define SPR_QUIESCE_CTL__PERF_EVENT_II_QR_ENABLE_0_WIDTH 1
#define SPR_QUIESCE_CTL__PERF_EVENT_II_QR_ENABLE_0_RESET_VAL 0
#define SPR_QUIESCE_CTL__PERF_EVENT_II_QR_ENABLE_0_RMASK 0x1
#define SPR_QUIESCE_CTL__PERF_EVENT_II_QR_ENABLE_0_MASK  0x1000
#define SPR_QUIESCE_CTL__PERF_EVENT_II_QR_ENABLE_0_FIELD 12,12

#define SPR_QUIESCE_CTL__PERF_EVENT_II_QR_ENABLE_1_SHIFT 13
#define SPR_QUIESCE_CTL__PERF_EVENT_II_QR_ENABLE_1_WIDTH 1
#define SPR_QUIESCE_CTL__PERF_EVENT_II_QR_ENABLE_1_RESET_VAL 0
#define SPR_QUIESCE_CTL__PERF_EVENT_II_QR_ENABLE_1_RMASK 0x1
#define SPR_QUIESCE_CTL__PERF_EVENT_II_QR_ENABLE_1_MASK  0x2000
#define SPR_QUIESCE_CTL__PERF_EVENT_II_QR_ENABLE_1_FIELD 13,13

#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_II_QR_ENABLE_0_SHIFT 14
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_II_QR_ENABLE_0_WIDTH 1
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_II_QR_ENABLE_0_RESET_VAL 0
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_II_QR_ENABLE_0_RMASK 0x1
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_II_QR_ENABLE_0_MASK  0x4000
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_II_QR_ENABLE_0_FIELD 14,14

#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_II_QR_ENABLE_1_SHIFT 15
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_II_QR_ENABLE_1_WIDTH 1
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_II_QR_ENABLE_1_RESET_VAL 0
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_II_QR_ENABLE_1_RMASK 0x1
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_II_QR_ENABLE_1_MASK  0x8000
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_II_QR_ENABLE_1_FIELD 15,15

#define SPR_QUIESCE_CTL__CT_QUIESCE_REQUEST_SHIFT 32
#define SPR_QUIESCE_CTL__CT_QUIESCE_REQUEST_WIDTH 1
#define SPR_QUIESCE_CTL__CT_QUIESCE_REQUEST_RESET_VAL 0
#define SPR_QUIESCE_CTL__CT_QUIESCE_REQUEST_RMASK 0x1
#define SPR_QUIESCE_CTL__CT_QUIESCE_REQUEST_MASK  _64bit(0x100000000)
#define SPR_QUIESCE_CTL__CT_QUIESCE_REQUEST_FIELD 32,32

#define SPR_QUIESCE_CTL__SET_CT_QR_SHIFT 33
#define SPR_QUIESCE_CTL__SET_CT_QR_WIDTH 1
#define SPR_QUIESCE_CTL__SET_CT_QR_RESET_VAL 0
#define SPR_QUIESCE_CTL__SET_CT_QR_RMASK 0x1
#define SPR_QUIESCE_CTL__SET_CT_QR_MASK  _64bit(0x200000000)
#define SPR_QUIESCE_CTL__SET_CT_QR_FIELD 33,33

#define SPR_QUIESCE_CTL__CLR_CT_QR_SHIFT 34
#define SPR_QUIESCE_CTL__CLR_CT_QR_WIDTH 1
#define SPR_QUIESCE_CTL__CLR_CT_QR_RESET_VAL 0
#define SPR_QUIESCE_CTL__CLR_CT_QR_RMASK 0x1
#define SPR_QUIESCE_CTL__CLR_CT_QR_MASK  _64bit(0x400000000)
#define SPR_QUIESCE_CTL__CLR_CT_QR_FIELD 34,34

#define SPR_QUIESCE_CTL__LOCAL_CT_QR_ENABLE_SHIFT 35
#define SPR_QUIESCE_CTL__LOCAL_CT_QR_ENABLE_WIDTH 1
#define SPR_QUIESCE_CTL__LOCAL_CT_QR_ENABLE_RESET_VAL 1
#define SPR_QUIESCE_CTL__LOCAL_CT_QR_ENABLE_RMASK 0x1
#define SPR_QUIESCE_CTL__LOCAL_CT_QR_ENABLE_MASK  _64bit(0x800000000)
#define SPR_QUIESCE_CTL__LOCAL_CT_QR_ENABLE_FIELD 35,35

#define SPR_QUIESCE_CTL__BCST_IN_CT_QR_ENABLE_SHIFT 36
#define SPR_QUIESCE_CTL__BCST_IN_CT_QR_ENABLE_WIDTH 4
#define SPR_QUIESCE_CTL__BCST_IN_CT_QR_ENABLE_RESET_VAL 0
#define SPR_QUIESCE_CTL__BCST_IN_CT_QR_ENABLE_RMASK 0xf
#define SPR_QUIESCE_CTL__BCST_IN_CT_QR_ENABLE_MASK  _64bit(0xf000000000)
#define SPR_QUIESCE_CTL__BCST_IN_CT_QR_ENABLE_FIELD 36,39

#define SPR_QUIESCE_CTL__BCST_OUT_CT_QR_ENABLE_SHIFT 40
#define SPR_QUIESCE_CTL__BCST_OUT_CT_QR_ENABLE_WIDTH 4
#define SPR_QUIESCE_CTL__BCST_OUT_CT_QR_ENABLE_RESET_VAL 0
#define SPR_QUIESCE_CTL__BCST_OUT_CT_QR_ENABLE_RMASK 0xf
#define SPR_QUIESCE_CTL__BCST_OUT_CT_QR_ENABLE_MASK  _64bit(0xf0000000000)
#define SPR_QUIESCE_CTL__BCST_OUT_CT_QR_ENABLE_FIELD 40,43

#define SPR_QUIESCE_CTL__PERF_EVENT_CT_QR_ENABLE_0_SHIFT 44
#define SPR_QUIESCE_CTL__PERF_EVENT_CT_QR_ENABLE_0_WIDTH 1
#define SPR_QUIESCE_CTL__PERF_EVENT_CT_QR_ENABLE_0_RESET_VAL 0
#define SPR_QUIESCE_CTL__PERF_EVENT_CT_QR_ENABLE_0_RMASK 0x1
#define SPR_QUIESCE_CTL__PERF_EVENT_CT_QR_ENABLE_0_MASK  _64bit(0x100000000000)
#define SPR_QUIESCE_CTL__PERF_EVENT_CT_QR_ENABLE_0_FIELD 44,44

#define SPR_QUIESCE_CTL__PERF_EVENT_CT_QR_ENABLE_1_SHIFT 45
#define SPR_QUIESCE_CTL__PERF_EVENT_CT_QR_ENABLE_1_WIDTH 1
#define SPR_QUIESCE_CTL__PERF_EVENT_CT_QR_ENABLE_1_RESET_VAL 0
#define SPR_QUIESCE_CTL__PERF_EVENT_CT_QR_ENABLE_1_RMASK 0x1
#define SPR_QUIESCE_CTL__PERF_EVENT_CT_QR_ENABLE_1_MASK  _64bit(0x200000000000)
#define SPR_QUIESCE_CTL__PERF_EVENT_CT_QR_ENABLE_1_FIELD 45,45

#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_CT_QR_ENABLE_0_SHIFT 46
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_CT_QR_ENABLE_0_WIDTH 1
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_CT_QR_ENABLE_0_RESET_VAL 0
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_CT_QR_ENABLE_0_RMASK 0x1
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_CT_QR_ENABLE_0_MASK  _64bit(0x400000000000)
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_CT_QR_ENABLE_0_FIELD 46,46

#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_CT_QR_ENABLE_1_SHIFT 47
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_CT_QR_ENABLE_1_WIDTH 1
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_CT_QR_ENABLE_1_RESET_VAL 0
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_CT_QR_ENABLE_1_RMASK 0x1
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_CT_QR_ENABLE_1_MASK  _64bit(0x800000000000)
#define SPR_QUIESCE_CTL__AUX_PERF_EVENT_CT_QR_ENABLE_1_FIELD 47,47


/*
 * Data TLB Replacement Index.
 * This register specifies which data TLB entry should be replace by the
 * random replacement algorithm.
 */
#define SPR_REPLACEMENT_DTLB 0x128f

#define SPR_REPLACEMENT_DTLB__INDEX_SHIFT 0
#define SPR_REPLACEMENT_DTLB__INDEX_WIDTH 5
#define SPR_REPLACEMENT_DTLB__INDEX_RESET_VAL 0
#define SPR_REPLACEMENT_DTLB__INDEX_RMASK 0x1f
#define SPR_REPLACEMENT_DTLB__INDEX_MASK  0x1f
#define SPR_REPLACEMENT_DTLB__INDEX_FIELD 0,4


/*
 * Instruction TLB Replacement Index.
 * This register specifies which instruction TLB entry should be replace by
 * the random replacement algorithm.
 */
#define SPR_REPLACEMENT_ITLB 0x078c

#define SPR_REPLACEMENT_ITLB__INDEX_SHIFT 0
#define SPR_REPLACEMENT_ITLB__INDEX_WIDTH 4
#define SPR_REPLACEMENT_ITLB__INDEX_RESET_VAL 0
#define SPR_REPLACEMENT_ITLB__INDEX_RMASK 0xf
#define SPR_REPLACEMENT_ITLB__INDEX_MASK  0xf
#define SPR_REPLACEMENT_ITLB__INDEX_FIELD 0,3


/*
 * Rshim Location.
 * This read-only register identifies the (x,y) mesh coordinates of the Rshim.
 */
#define SPR_RSHIM_COORD 0x2621

#define SPR_RSHIM_COORD__Y_COORD_SHIFT 7
#define SPR_RSHIM_COORD__Y_COORD_WIDTH 4
#define SPR_RSHIM_COORD__Y_COORD_RESET_VAL 0
#define SPR_RSHIM_COORD__Y_COORD_RMASK 0xf
#define SPR_RSHIM_COORD__Y_COORD_MASK  0x780
#define SPR_RSHIM_COORD__Y_COORD_FIELD 7,10

#define SPR_RSHIM_COORD__X_COORD_SHIFT 18
#define SPR_RSHIM_COORD__X_COORD_WIDTH 4
#define SPR_RSHIM_COORD__X_COORD_RESET_VAL 0
#define SPR_RSHIM_COORD__X_COORD_RMASK 0xf
#define SPR_RSHIM_COORD__X_COORD_MASK  0x3c0000
#define SPR_RSHIM_COORD__X_COORD_FIELD 18,21


/*
 * SBOX Configuration.
 * This register indicates the configuration of the SBOX.
 */
#define SPR_SBOX_CONFIG 0x2622

#define SPR_SBOX_CONFIG__PF_LIMIT_SHIFT 0
#define SPR_SBOX_CONFIG__PF_LIMIT_WIDTH 2
#define SPR_SBOX_CONFIG__PF_LIMIT_RESET_VAL 0
#define SPR_SBOX_CONFIG__PF_LIMIT_RMASK 0x3
#define SPR_SBOX_CONFIG__PF_LIMIT_MASK  0x3
#define SPR_SBOX_CONFIG__PF_LIMIT_FIELD 0,1

#define SPR_SBOX_CONFIG__PF_L2_LIMIT_SHIFT 2
#define SPR_SBOX_CONFIG__PF_L2_LIMIT_WIDTH 2
#define SPR_SBOX_CONFIG__PF_L2_LIMIT_RESET_VAL 0
#define SPR_SBOX_CONFIG__PF_L2_LIMIT_RMASK 0x3
#define SPR_SBOX_CONFIG__PF_L2_LIMIT_MASK  0xc
#define SPR_SBOX_CONFIG__PF_L2_LIMIT_FIELD 2,3

#define SPR_SBOX_CONFIG__FORCE_DRAIN_SHIFT 4
#define SPR_SBOX_CONFIG__FORCE_DRAIN_WIDTH 1
#define SPR_SBOX_CONFIG__FORCE_DRAIN_RESET_VAL 0
#define SPR_SBOX_CONFIG__FORCE_DRAIN_RMASK 0x1
#define SPR_SBOX_CONFIG__FORCE_DRAIN_MASK  0x10
#define SPR_SBOX_CONFIG__FORCE_DRAIN_FIELD 4,4

#define SPR_SBOX_CONFIG__L1I_TAG_PARITY_ENABLE_SHIFT 5
#define SPR_SBOX_CONFIG__L1I_TAG_PARITY_ENABLE_WIDTH 1
#define SPR_SBOX_CONFIG__L1I_TAG_PARITY_ENABLE_RESET_VAL 0
#define SPR_SBOX_CONFIG__L1I_TAG_PARITY_ENABLE_RMASK 0x1
#define SPR_SBOX_CONFIG__L1I_TAG_PARITY_ENABLE_MASK  0x20
#define SPR_SBOX_CONFIG__L1I_TAG_PARITY_ENABLE_FIELD 5,5

#define SPR_SBOX_CONFIG__L1I_DATA_PARITY_ENABLE_SHIFT 6
#define SPR_SBOX_CONFIG__L1I_DATA_PARITY_ENABLE_WIDTH 1
#define SPR_SBOX_CONFIG__L1I_DATA_PARITY_ENABLE_RESET_VAL 0
#define SPR_SBOX_CONFIG__L1I_DATA_PARITY_ENABLE_RMASK 0x1
#define SPR_SBOX_CONFIG__L1I_DATA_PARITY_ENABLE_MASK  0x40
#define SPR_SBOX_CONFIG__L1I_DATA_PARITY_ENABLE_FIELD 6,6

#define SPR_SBOX_CONFIG__PRN_MODE_SHIFT 11
#define SPR_SBOX_CONFIG__PRN_MODE_WIDTH 1
#define SPR_SBOX_CONFIG__PRN_MODE_RESET_VAL 0
#define SPR_SBOX_CONFIG__PRN_MODE_RMASK 0x1
#define SPR_SBOX_CONFIG__PRN_MODE_MASK  0x800
#define SPR_SBOX_CONFIG__PRN_MODE_FIELD 11,11

#define SPR_SBOX_CONFIG__DPF_ENABLE_SHIFT 12
#define SPR_SBOX_CONFIG__DPF_ENABLE_WIDTH 1
#define SPR_SBOX_CONFIG__DPF_ENABLE_RESET_VAL 0
#define SPR_SBOX_CONFIG__DPF_ENABLE_RMASK 0x1
#define SPR_SBOX_CONFIG__DPF_ENABLE_MASK  0x1000
#define SPR_SBOX_CONFIG__DPF_ENABLE_FIELD 12,12


/*
 * SBOX Error.
 * A parity error has occurred in the L1 ICache, or an ITLB usage error has
 * occurred.  The error status bits are each cleared by writing a 1 to it.
 * The INDEX field is read only.
 */
#define SPR_SBOX_ERROR 0x000a

#define SPR_SBOX_ERROR__INDEX_SHIFT 0
#define SPR_SBOX_ERROR__INDEX_WIDTH 11
#define SPR_SBOX_ERROR__INDEX_RESET_VAL 0
#define SPR_SBOX_ERROR__INDEX_RMASK 0x7ff
#define SPR_SBOX_ERROR__INDEX_MASK  0x7ff
#define SPR_SBOX_ERROR__INDEX_FIELD 0,10

#define SPR_SBOX_ERROR__DATA_WAY_0_PARITY_SHIFT 25
#define SPR_SBOX_ERROR__DATA_WAY_0_PARITY_WIDTH 1
#define SPR_SBOX_ERROR__DATA_WAY_0_PARITY_RESET_VAL 0
#define SPR_SBOX_ERROR__DATA_WAY_0_PARITY_RMASK 0x1
#define SPR_SBOX_ERROR__DATA_WAY_0_PARITY_MASK  0x2000000
#define SPR_SBOX_ERROR__DATA_WAY_0_PARITY_FIELD 25,25

#define SPR_SBOX_ERROR__DATA_WAY_1_PARITY_SHIFT 26
#define SPR_SBOX_ERROR__DATA_WAY_1_PARITY_WIDTH 1
#define SPR_SBOX_ERROR__DATA_WAY_1_PARITY_RESET_VAL 0
#define SPR_SBOX_ERROR__DATA_WAY_1_PARITY_RMASK 0x1
#define SPR_SBOX_ERROR__DATA_WAY_1_PARITY_MASK  0x4000000
#define SPR_SBOX_ERROR__DATA_WAY_1_PARITY_FIELD 26,26

#define SPR_SBOX_ERROR__TAG_WAY_0_PARITY_SHIFT 27
#define SPR_SBOX_ERROR__TAG_WAY_0_PARITY_WIDTH 1
#define SPR_SBOX_ERROR__TAG_WAY_0_PARITY_RESET_VAL 0
#define SPR_SBOX_ERROR__TAG_WAY_0_PARITY_RMASK 0x1
#define SPR_SBOX_ERROR__TAG_WAY_0_PARITY_MASK  0x8000000
#define SPR_SBOX_ERROR__TAG_WAY_0_PARITY_FIELD 27,27

#define SPR_SBOX_ERROR__TAG_WAY_1_PARITY_SHIFT 28
#define SPR_SBOX_ERROR__TAG_WAY_1_PARITY_WIDTH 1
#define SPR_SBOX_ERROR__TAG_WAY_1_PARITY_RESET_VAL 0
#define SPR_SBOX_ERROR__TAG_WAY_1_PARITY_RMASK 0x1
#define SPR_SBOX_ERROR__TAG_WAY_1_PARITY_MASK  0x10000000
#define SPR_SBOX_ERROR__TAG_WAY_1_PARITY_FIELD 28,28

#define SPR_SBOX_ERROR__ITLB_MULTI_MATCH_SHIFT 29
#define SPR_SBOX_ERROR__ITLB_MULTI_MATCH_WIDTH 1
#define SPR_SBOX_ERROR__ITLB_MULTI_MATCH_RESET_VAL 0
#define SPR_SBOX_ERROR__ITLB_MULTI_MATCH_RMASK 0x1
#define SPR_SBOX_ERROR__ITLB_MULTI_MATCH_MASK  0x20000000
#define SPR_SBOX_ERROR__ITLB_MULTI_MATCH_FIELD 29,29

#define SPR_SBOX_ERROR__ILLEGAL_ITLB_ENTRY_SHIFT 30
#define SPR_SBOX_ERROR__ILLEGAL_ITLB_ENTRY_WIDTH 1
#define SPR_SBOX_ERROR__ILLEGAL_ITLB_ENTRY_RESET_VAL 0
#define SPR_SBOX_ERROR__ILLEGAL_ITLB_ENTRY_RMASK 0x1
#define SPR_SBOX_ERROR__ILLEGAL_ITLB_ENTRY_MASK  0x40000000
#define SPR_SBOX_ERROR__ILLEGAL_ITLB_ENTRY_FIELD 30,30

#define SPR_SBOX_ERROR__OVERFLOW_SHIFT 62
#define SPR_SBOX_ERROR__OVERFLOW_WIDTH 1
#define SPR_SBOX_ERROR__OVERFLOW_RESET_VAL 0
#define SPR_SBOX_ERROR__OVERFLOW_RMASK 0x1
#define SPR_SBOX_ERROR__OVERFLOW_MASK  _64bit(0x4000000000000000)
#define SPR_SBOX_ERROR__OVERFLOW_FIELD 62,62

#define SPR_SBOX_ERROR__L1_I_SHIFT 63
#define SPR_SBOX_ERROR__L1_I_WIDTH 1
#define SPR_SBOX_ERROR__L1_I_RESET_VAL 0
#define SPR_SBOX_ERROR__L1_I_RMASK 0x1
#define SPR_SBOX_ERROR__L1_I_MASK  _64bit(0x8000000000000000)
#define SPR_SBOX_ERROR__L1_I_FIELD 63,63


/*
 * Simulator Control Pseudo Register.
 * A magic register that is used to control the simulator.
 */
#define SPR_SIM_CONTROL 0x2785

#define SPR_SIM_CONTROL__OPERATOR_SHIFT 0
#define SPR_SIM_CONTROL__OPERATOR_WIDTH 8
#define SPR_SIM_CONTROL__OPERATOR_RESET_VAL 0
#define SPR_SIM_CONTROL__OPERATOR_RMASK 0xff
#define SPR_SIM_CONTROL__OPERATOR_MASK  0xff
#define SPR_SIM_CONTROL__OPERATOR_FIELD 0,7

#define SPR_SIM_CONTROL__PARAM_SHIFT 8
#define SPR_SIM_CONTROL__PARAM_WIDTH 24
#define SPR_SIM_CONTROL__PARAM_RESET_VAL 0
#define SPR_SIM_CONTROL__PARAM_RMASK 0xffffff
#define SPR_SIM_CONTROL__PARAM_MASK  0xffffff00
#define SPR_SIM_CONTROL__PARAM_FIELD 8,31


/*
 * Simulator Socket Pseudo Register.
 * A magic register that is used to communicate over a special socket out of
 * the simulator.
 */
#define SPR_SIM_SOCKET 0x2786

#define SPR_SIM_SOCKET__SIM_SOCKET_SHIFT 0
#define SPR_SIM_SOCKET__SIM_SOCKET_WIDTH 32
#define SPR_SIM_SOCKET__SIM_SOCKET_RESET_VAL 0
#define SPR_SIM_SOCKET__SIM_SOCKET_RMASK 0xffffffff
#define SPR_SIM_SOCKET__SIM_SOCKET_MASK  0xffffffff
#define SPR_SIM_SOCKET__SIM_SOCKET_FIELD 0,31


/*
 * Single Step Interrupt Control 0.
 * This register has the control and status for Single Step Interrupt 0.
 */
#define SPR_SINGLE_STEP_CONTROL_0 0x0405

#define SPR_SINGLE_STEP_CONTROL_0__CANCELED_SHIFT 0
#define SPR_SINGLE_STEP_CONTROL_0__CANCELED_WIDTH 1
#define SPR_SINGLE_STEP_CONTROL_0__CANCELED_RESET_VAL 0
#define SPR_SINGLE_STEP_CONTROL_0__CANCELED_RMASK 0x1
#define SPR_SINGLE_STEP_CONTROL_0__CANCELED_MASK  0x1
#define SPR_SINGLE_STEP_CONTROL_0__CANCELED_FIELD 0,0

#define SPR_SINGLE_STEP_CONTROL_0__INHIBIT_SHIFT 1
#define SPR_SINGLE_STEP_CONTROL_0__INHIBIT_WIDTH 1
#define SPR_SINGLE_STEP_CONTROL_0__INHIBIT_RESET_VAL 0
#define SPR_SINGLE_STEP_CONTROL_0__INHIBIT_RMASK 0x1
#define SPR_SINGLE_STEP_CONTROL_0__INHIBIT_MASK  0x2
#define SPR_SINGLE_STEP_CONTROL_0__INHIBIT_FIELD 1,1


/*
 * Single Step Interrupt Control 1.
 * This register has the control and status for Single Step Interrupt 1.
 */
#define SPR_SINGLE_STEP_CONTROL_1 0x0305

#define SPR_SINGLE_STEP_CONTROL_1__CANCELED_SHIFT 0
#define SPR_SINGLE_STEP_CONTROL_1__CANCELED_WIDTH 1
#define SPR_SINGLE_STEP_CONTROL_1__CANCELED_RESET_VAL 0
#define SPR_SINGLE_STEP_CONTROL_1__CANCELED_RMASK 0x1
#define SPR_SINGLE_STEP_CONTROL_1__CANCELED_MASK  0x1
#define SPR_SINGLE_STEP_CONTROL_1__CANCELED_FIELD 0,0

#define SPR_SINGLE_STEP_CONTROL_1__INHIBIT_SHIFT 1
#define SPR_SINGLE_STEP_CONTROL_1__INHIBIT_WIDTH 1
#define SPR_SINGLE_STEP_CONTROL_1__INHIBIT_RESET_VAL 0
#define SPR_SINGLE_STEP_CONTROL_1__INHIBIT_RMASK 0x1
#define SPR_SINGLE_STEP_CONTROL_1__INHIBIT_MASK  0x2
#define SPR_SINGLE_STEP_CONTROL_1__INHIBIT_FIELD 1,1


/*
 * Single Step Interrupt Control 2.
 * This register has the control and status for Single Step Interrupt 2.
 */
#define SPR_SINGLE_STEP_CONTROL_2 0x0205

#define SPR_SINGLE_STEP_CONTROL_2__CANCELED_SHIFT 0
#define SPR_SINGLE_STEP_CONTROL_2__CANCELED_WIDTH 1
#define SPR_SINGLE_STEP_CONTROL_2__CANCELED_RESET_VAL 0
#define SPR_SINGLE_STEP_CONTROL_2__CANCELED_RMASK 0x1
#define SPR_SINGLE_STEP_CONTROL_2__CANCELED_MASK  0x1
#define SPR_SINGLE_STEP_CONTROL_2__CANCELED_FIELD 0,0

#define SPR_SINGLE_STEP_CONTROL_2__INHIBIT_SHIFT 1
#define SPR_SINGLE_STEP_CONTROL_2__INHIBIT_WIDTH 1
#define SPR_SINGLE_STEP_CONTROL_2__INHIBIT_RESET_VAL 0
#define SPR_SINGLE_STEP_CONTROL_2__INHIBIT_RMASK 0x1
#define SPR_SINGLE_STEP_CONTROL_2__INHIBIT_MASK  0x2
#define SPR_SINGLE_STEP_CONTROL_2__INHIBIT_FIELD 1,1


/*
 * Single Step Interrupt Control 3.
 * This register has the control and status for Single Step Interrupt 3.
 */
#define SPR_SINGLE_STEP_CONTROL_3 0x0105

#define SPR_SINGLE_STEP_CONTROL_3__CANCELED_SHIFT 0
#define SPR_SINGLE_STEP_CONTROL_3__CANCELED_WIDTH 1
#define SPR_SINGLE_STEP_CONTROL_3__CANCELED_RESET_VAL 0
#define SPR_SINGLE_STEP_CONTROL_3__CANCELED_RMASK 0x1
#define SPR_SINGLE_STEP_CONTROL_3__CANCELED_MASK  0x1
#define SPR_SINGLE_STEP_CONTROL_3__CANCELED_FIELD 0,0

#define SPR_SINGLE_STEP_CONTROL_3__INHIBIT_SHIFT 1
#define SPR_SINGLE_STEP_CONTROL_3__INHIBIT_WIDTH 1
#define SPR_SINGLE_STEP_CONTROL_3__INHIBIT_RESET_VAL 0
#define SPR_SINGLE_STEP_CONTROL_3__INHIBIT_RMASK 0x1
#define SPR_SINGLE_STEP_CONTROL_3__INHIBIT_MASK  0x2
#define SPR_SINGLE_STEP_CONTROL_3__INHIBIT_FIELD 1,1


/*
 * Single Step Interrupt Enable 0 PL 0.
 * This register enables Single Step Interrupt 0 for protection level 0.
 */
#define SPR_SINGLE_STEP_EN_0_0 0x250a

#define SPR_SINGLE_STEP_EN_0_0__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_0_0__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_0_0__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_0_0__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_0_0__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_0_0__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 0 PL 1.
 * This register enables Single Step Interrupt 0 for protection level 1.
 */
#define SPR_SINGLE_STEP_EN_0_1 0x240a

#define SPR_SINGLE_STEP_EN_0_1__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_0_1__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_0_1__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_0_1__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_0_1__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_0_1__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 0 PL 2.
 * This register enables Single Step Interrupt 0 for protection level 2.
 */
#define SPR_SINGLE_STEP_EN_0_2 0x230a

#define SPR_SINGLE_STEP_EN_0_2__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_0_2__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_0_2__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_0_2__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_0_2__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_0_2__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 0 PL 3.
 * This register enables Single Step Interrupt 0 for protection level 3.
 */
#define SPR_SINGLE_STEP_EN_0_3 0x220a

#define SPR_SINGLE_STEP_EN_0_3__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_0_3__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_0_3__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_0_3__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_0_3__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_0_3__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 1 PL 0.
 * This register enables Single Step Interrupt 1 for protection level 0.
 */
#define SPR_SINGLE_STEP_EN_1_0 0x250b

#define SPR_SINGLE_STEP_EN_1_0__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_1_0__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_1_0__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_1_0__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_1_0__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_1_0__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 1 PL 1.
 * This register enables Single Step Interrupt 1 for protection level 1.
 */
#define SPR_SINGLE_STEP_EN_1_1 0x240b

#define SPR_SINGLE_STEP_EN_1_1__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_1_1__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_1_1__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_1_1__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_1_1__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_1_1__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 1 PL 2.
 * This register enables Single Step Interrupt 1 for protection level 2.
 */
#define SPR_SINGLE_STEP_EN_1_2 0x230b

#define SPR_SINGLE_STEP_EN_1_2__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_1_2__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_1_2__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_1_2__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_1_2__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_1_2__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 1 PL 3.
 * This register enables Single Step Interrupt 1 for protection level 3.
 */
#define SPR_SINGLE_STEP_EN_1_3 0x220b

#define SPR_SINGLE_STEP_EN_1_3__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_1_3__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_1_3__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_1_3__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_1_3__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_1_3__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 2 PL 0.
 * This register enables Single Step Interrupt 2 for protection level 0.
 */
#define SPR_SINGLE_STEP_EN_2_0 0x250c

#define SPR_SINGLE_STEP_EN_2_0__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_2_0__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_2_0__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_2_0__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_2_0__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_2_0__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 2 PL 1.
 * This register enables Single Step Interrupt 2 for protection level 1.
 */
#define SPR_SINGLE_STEP_EN_2_1 0x240c

#define SPR_SINGLE_STEP_EN_2_1__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_2_1__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_2_1__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_2_1__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_2_1__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_2_1__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 2 PL 2.
 * This register enables Single Step Interrupt 2 for protection level 2.
 */
#define SPR_SINGLE_STEP_EN_2_2 0x230c

#define SPR_SINGLE_STEP_EN_2_2__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_2_2__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_2_2__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_2_2__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_2_2__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_2_2__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 2 PL 3.
 * This register enables Single Step Interrupt 2 for protection level 3.
 */
#define SPR_SINGLE_STEP_EN_2_3 0x220c

#define SPR_SINGLE_STEP_EN_2_3__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_2_3__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_2_3__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_2_3__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_2_3__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_2_3__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 3 PL 0.
 * This register enables Single Step Interrupt 3 for protection level 0.
 */
#define SPR_SINGLE_STEP_EN_3_0 0x250d

#define SPR_SINGLE_STEP_EN_3_0__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_3_0__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_3_0__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_3_0__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_3_0__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_3_0__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 3 PL 1.
 * This register enables Single Step Interrupt 3 for protection level 1.
 */
#define SPR_SINGLE_STEP_EN_3_1 0x240d

#define SPR_SINGLE_STEP_EN_3_1__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_3_1__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_3_1__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_3_1__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_3_1__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_3_1__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 3 PL 2.
 * This register enables Single Step Interrupt 3 for protection level 2.
 */
#define SPR_SINGLE_STEP_EN_3_2 0x230d

#define SPR_SINGLE_STEP_EN_3_2__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_3_2__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_3_2__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_3_2__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_3_2__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_3_2__PL_FIELD 0,3


/*
 * Single Step Interrupt Enable 3 PL 3.
 * This register enables Single Step Interrupt 3 for protection level 3.
 */
#define SPR_SINGLE_STEP_EN_3_3 0x220d

#define SPR_SINGLE_STEP_EN_3_3__PL_SHIFT 0
#define SPR_SINGLE_STEP_EN_3_3__PL_WIDTH 4
#define SPR_SINGLE_STEP_EN_3_3__PL_RESET_VAL 0
#define SPR_SINGLE_STEP_EN_3_3__PL_RMASK 0xf
#define SPR_SINGLE_STEP_EN_3_3__PL_MASK  0xf
#define SPR_SINGLE_STEP_EN_3_3__PL_FIELD 0,3


/*
 * Saturate Status Bits.
 * Contains the Processor Saturate Status Bit.
 */
#define SPR_STATUS_SATURATE 0x2787

#define SPR_STATUS_SATURATE__STATUS_SATURATE_SHIFT 0
#define SPR_STATUS_SATURATE__STATUS_SATURATE_WIDTH 1
#define SPR_STATUS_SATURATE__STATUS_SATURATE_RESET_VAL 0
#define SPR_STATUS_SATURATE__STATUS_SATURATE_RMASK 0x1
#define SPR_STATUS_SATURATE__STATUS_SATURATE_MASK  0x1
#define SPR_STATUS_SATURATE__STATUS_SATURATE_FIELD 0,0


/*
 * System Save Register Level 0 Entry 0.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_0_0 0x2582

#define SPR_SYSTEM_SAVE_0_0__SYSTEM_SAVE_0_0_SHIFT 0
#define SPR_SYSTEM_SAVE_0_0__SYSTEM_SAVE_0_0_WIDTH 64
#define SPR_SYSTEM_SAVE_0_0__SYSTEM_SAVE_0_0_RESET_VAL 0
#define SPR_SYSTEM_SAVE_0_0__SYSTEM_SAVE_0_0_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_0_0__SYSTEM_SAVE_0_0_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_0_0__SYSTEM_SAVE_0_0_FIELD 0,63


/*
 * System Save Register Level 0 Entry 1.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_0_1 0x2583

#define SPR_SYSTEM_SAVE_0_1__SYSTEM_SAVE_0_1_SHIFT 0
#define SPR_SYSTEM_SAVE_0_1__SYSTEM_SAVE_0_1_WIDTH 64
#define SPR_SYSTEM_SAVE_0_1__SYSTEM_SAVE_0_1_RESET_VAL 0
#define SPR_SYSTEM_SAVE_0_1__SYSTEM_SAVE_0_1_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_0_1__SYSTEM_SAVE_0_1_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_0_1__SYSTEM_SAVE_0_1_FIELD 0,63


/*
 * System Save Register Level 0 Entry 2.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_0_2 0x2584

#define SPR_SYSTEM_SAVE_0_2__SYSTEM_SAVE_0_2_SHIFT 0
#define SPR_SYSTEM_SAVE_0_2__SYSTEM_SAVE_0_2_WIDTH 64
#define SPR_SYSTEM_SAVE_0_2__SYSTEM_SAVE_0_2_RESET_VAL 0
#define SPR_SYSTEM_SAVE_0_2__SYSTEM_SAVE_0_2_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_0_2__SYSTEM_SAVE_0_2_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_0_2__SYSTEM_SAVE_0_2_FIELD 0,63


/*
 * System Save Register Level 0 Entry 3.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_0_3 0x2585

#define SPR_SYSTEM_SAVE_0_3__SYSTEM_SAVE_0_3_SHIFT 0
#define SPR_SYSTEM_SAVE_0_3__SYSTEM_SAVE_0_3_WIDTH 64
#define SPR_SYSTEM_SAVE_0_3__SYSTEM_SAVE_0_3_RESET_VAL 0
#define SPR_SYSTEM_SAVE_0_3__SYSTEM_SAVE_0_3_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_0_3__SYSTEM_SAVE_0_3_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_0_3__SYSTEM_SAVE_0_3_FIELD 0,63


/*
 * System Save Register Level 1 Entry 0.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_1_0 0x2482

#define SPR_SYSTEM_SAVE_1_0__SYSTEM_SAVE_1_0_SHIFT 0
#define SPR_SYSTEM_SAVE_1_0__SYSTEM_SAVE_1_0_WIDTH 64
#define SPR_SYSTEM_SAVE_1_0__SYSTEM_SAVE_1_0_RESET_VAL 0
#define SPR_SYSTEM_SAVE_1_0__SYSTEM_SAVE_1_0_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_1_0__SYSTEM_SAVE_1_0_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_1_0__SYSTEM_SAVE_1_0_FIELD 0,63


/*
 * System Save Register Level 1 Entry 1.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_1_1 0x2483

#define SPR_SYSTEM_SAVE_1_1__SYSTEM_SAVE_1_1_SHIFT 0
#define SPR_SYSTEM_SAVE_1_1__SYSTEM_SAVE_1_1_WIDTH 64
#define SPR_SYSTEM_SAVE_1_1__SYSTEM_SAVE_1_1_RESET_VAL 0
#define SPR_SYSTEM_SAVE_1_1__SYSTEM_SAVE_1_1_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_1_1__SYSTEM_SAVE_1_1_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_1_1__SYSTEM_SAVE_1_1_FIELD 0,63


/*
 * System Save Register Level 1 Entry 2.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_1_2 0x2484

#define SPR_SYSTEM_SAVE_1_2__SYSTEM_SAVE_1_2_SHIFT 0
#define SPR_SYSTEM_SAVE_1_2__SYSTEM_SAVE_1_2_WIDTH 64
#define SPR_SYSTEM_SAVE_1_2__SYSTEM_SAVE_1_2_RESET_VAL 0
#define SPR_SYSTEM_SAVE_1_2__SYSTEM_SAVE_1_2_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_1_2__SYSTEM_SAVE_1_2_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_1_2__SYSTEM_SAVE_1_2_FIELD 0,63


/*
 * System Save Register Level 1 Entry 3.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_1_3 0x2485

#define SPR_SYSTEM_SAVE_1_3__SYSTEM_SAVE_1_3_SHIFT 0
#define SPR_SYSTEM_SAVE_1_3__SYSTEM_SAVE_1_3_WIDTH 64
#define SPR_SYSTEM_SAVE_1_3__SYSTEM_SAVE_1_3_RESET_VAL 0
#define SPR_SYSTEM_SAVE_1_3__SYSTEM_SAVE_1_3_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_1_3__SYSTEM_SAVE_1_3_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_1_3__SYSTEM_SAVE_1_3_FIELD 0,63


/*
 * System Save Register Level 2 Entry 0.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_2_0 0x2382

#define SPR_SYSTEM_SAVE_2_0__SYSTEM_SAVE_2_0_SHIFT 0
#define SPR_SYSTEM_SAVE_2_0__SYSTEM_SAVE_2_0_WIDTH 64
#define SPR_SYSTEM_SAVE_2_0__SYSTEM_SAVE_2_0_RESET_VAL 0
#define SPR_SYSTEM_SAVE_2_0__SYSTEM_SAVE_2_0_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_2_0__SYSTEM_SAVE_2_0_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_2_0__SYSTEM_SAVE_2_0_FIELD 0,63


/*
 * System Save Register Level 2 Entry 1.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_2_1 0x2383

#define SPR_SYSTEM_SAVE_2_1__SYSTEM_SAVE_2_1_SHIFT 0
#define SPR_SYSTEM_SAVE_2_1__SYSTEM_SAVE_2_1_WIDTH 64
#define SPR_SYSTEM_SAVE_2_1__SYSTEM_SAVE_2_1_RESET_VAL 0
#define SPR_SYSTEM_SAVE_2_1__SYSTEM_SAVE_2_1_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_2_1__SYSTEM_SAVE_2_1_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_2_1__SYSTEM_SAVE_2_1_FIELD 0,63


/*
 * System Save Register Level 2 Entry 2.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_2_2 0x2384

#define SPR_SYSTEM_SAVE_2_2__SYSTEM_SAVE_2_2_SHIFT 0
#define SPR_SYSTEM_SAVE_2_2__SYSTEM_SAVE_2_2_WIDTH 64
#define SPR_SYSTEM_SAVE_2_2__SYSTEM_SAVE_2_2_RESET_VAL 0
#define SPR_SYSTEM_SAVE_2_2__SYSTEM_SAVE_2_2_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_2_2__SYSTEM_SAVE_2_2_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_2_2__SYSTEM_SAVE_2_2_FIELD 0,63


/*
 * System Save Register Level 2 Entry 3.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_2_3 0x2385

#define SPR_SYSTEM_SAVE_2_3__SYSTEM_SAVE_2_3_SHIFT 0
#define SPR_SYSTEM_SAVE_2_3__SYSTEM_SAVE_2_3_WIDTH 64
#define SPR_SYSTEM_SAVE_2_3__SYSTEM_SAVE_2_3_RESET_VAL 0
#define SPR_SYSTEM_SAVE_2_3__SYSTEM_SAVE_2_3_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_2_3__SYSTEM_SAVE_2_3_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_2_3__SYSTEM_SAVE_2_3_FIELD 0,63


/*
 * System Save Register Level 3 Entry 0.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_3_0 0x2282

#define SPR_SYSTEM_SAVE_3_0__SYSTEM_SAVE_3_0_SHIFT 0
#define SPR_SYSTEM_SAVE_3_0__SYSTEM_SAVE_3_0_WIDTH 64
#define SPR_SYSTEM_SAVE_3_0__SYSTEM_SAVE_3_0_RESET_VAL 0
#define SPR_SYSTEM_SAVE_3_0__SYSTEM_SAVE_3_0_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_3_0__SYSTEM_SAVE_3_0_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_3_0__SYSTEM_SAVE_3_0_FIELD 0,63


/*
 * System Save Register Level 3 Entry 1.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_3_1 0x2283

#define SPR_SYSTEM_SAVE_3_1__SYSTEM_SAVE_3_1_SHIFT 0
#define SPR_SYSTEM_SAVE_3_1__SYSTEM_SAVE_3_1_WIDTH 64
#define SPR_SYSTEM_SAVE_3_1__SYSTEM_SAVE_3_1_RESET_VAL 0
#define SPR_SYSTEM_SAVE_3_1__SYSTEM_SAVE_3_1_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_3_1__SYSTEM_SAVE_3_1_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_3_1__SYSTEM_SAVE_3_1_FIELD 0,63


/*
 * System Save Register Level 3 Entry 2.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_3_2 0x2284

#define SPR_SYSTEM_SAVE_3_2__SYSTEM_SAVE_3_2_SHIFT 0
#define SPR_SYSTEM_SAVE_3_2__SYSTEM_SAVE_3_2_WIDTH 64
#define SPR_SYSTEM_SAVE_3_2__SYSTEM_SAVE_3_2_RESET_VAL 0
#define SPR_SYSTEM_SAVE_3_2__SYSTEM_SAVE_3_2_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_3_2__SYSTEM_SAVE_3_2_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_3_2__SYSTEM_SAVE_3_2_FIELD 0,63


/*
 * System Save Register Level 3 Entry 3.
 * This register is used to save system state for interrupt critical sections.
 */
#define SPR_SYSTEM_SAVE_3_3 0x2285

#define SPR_SYSTEM_SAVE_3_3__SYSTEM_SAVE_3_3_SHIFT 0
#define SPR_SYSTEM_SAVE_3_3__SYSTEM_SAVE_3_3_WIDTH 64
#define SPR_SYSTEM_SAVE_3_3__SYSTEM_SAVE_3_3_RESET_VAL 0
#define SPR_SYSTEM_SAVE_3_3__SYSTEM_SAVE_3_3_RMASK _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_3_3__SYSTEM_SAVE_3_3_MASK  _64bit(0xffffffffffffffff)
#define SPR_SYSTEM_SAVE_3_3__SYSTEM_SAVE_3_3_FIELD 0,63


/*
 * Tile Coordinate.
 * This register contains the (x,y) coordinates of the tile
 */
#define SPR_TILE_COORD 0x270b

#define SPR_TILE_COORD__Y_COORD_SHIFT 7
#define SPR_TILE_COORD__Y_COORD_WIDTH 4
#define SPR_TILE_COORD__Y_COORD_RESET_VAL 0
#define SPR_TILE_COORD__Y_COORD_RMASK 0xf
#define SPR_TILE_COORD__Y_COORD_MASK  0x780
#define SPR_TILE_COORD__Y_COORD_FIELD 7,10

#define SPR_TILE_COORD__X_COORD_SHIFT 18
#define SPR_TILE_COORD__X_COORD_WIDTH 4
#define SPR_TILE_COORD__X_COORD_RESET_VAL 0
#define SPR_TILE_COORD__X_COORD_RMASK 0xf
#define SPR_TILE_COORD__X_COORD_MASK  0x3c0000
#define SPR_TILE_COORD__X_COORD_FIELD 18,21


/*
 * Tile Cache Retry Fifo HWM.
 * This register specifies the cache retry fifo HWM in the main processor
 * stall decision.
 */
#define SPR_TILE_RTF_HWM 0x270c

#define SPR_TILE_RTF_HWM__TILE_RTF_HWM_SHIFT 0
#define SPR_TILE_RTF_HWM__TILE_RTF_HWM_WIDTH 4
#define SPR_TILE_RTF_HWM__TILE_RTF_HWM_RESET_VAL 14
#define SPR_TILE_RTF_HWM__TILE_RTF_HWM_RMASK 0xf
#define SPR_TILE_RTF_HWM__TILE_RTF_HWM_MASK  0xf
#define SPR_TILE_RTF_HWM__TILE_RTF_HWM_FIELD 0,3


/*
 * Tile Timer Control.
 * This register contains a 32-bit down counter and a bit that signifies that
 * the counter has reached zero.  There is a disable bit which stops the
 * counter from counting.  When the counter wraps from zero to (2**32) - 1,
 * the interrupt is fired. The counter counts either core clock or REFCLK as
 * selected in SBOX_CONFIG.
 */
#define SPR_TILE_TIMER_CONTROL 0x1605

#define SPR_TILE_TIMER_CONTROL__COUNT_SHIFT 0
#define SPR_TILE_TIMER_CONTROL__COUNT_WIDTH 32
#define SPR_TILE_TIMER_CONTROL__COUNT_RESET_VAL 0
#define SPR_TILE_TIMER_CONTROL__COUNT_RMASK 0xffffffff
#define SPR_TILE_TIMER_CONTROL__COUNT_MASK  0xffffffff
#define SPR_TILE_TIMER_CONTROL__COUNT_FIELD 0,31

#define SPR_TILE_TIMER_CONTROL__DISABLE_SHIFT 62
#define SPR_TILE_TIMER_CONTROL__DISABLE_WIDTH 1
#define SPR_TILE_TIMER_CONTROL__DISABLE_RESET_VAL 1
#define SPR_TILE_TIMER_CONTROL__DISABLE_RMASK 0x1
#define SPR_TILE_TIMER_CONTROL__DISABLE_MASK  _64bit(0x4000000000000000)
#define SPR_TILE_TIMER_CONTROL__DISABLE_FIELD 62,62

#define SPR_TILE_TIMER_CONTROL__UNDERFLOW_SHIFT 63
#define SPR_TILE_TIMER_CONTROL__UNDERFLOW_WIDTH 1
#define SPR_TILE_TIMER_CONTROL__UNDERFLOW_RESET_VAL 0
#define SPR_TILE_TIMER_CONTROL__UNDERFLOW_RMASK 0x1
#define SPR_TILE_TIMER_CONTROL__UNDERFLOW_MASK  _64bit(0x8000000000000000)
#define SPR_TILE_TIMER_CONTROL__UNDERFLOW_FIELD 63,63


/*
 * User Dynamic Network Available Enables.
 * This register controls whether a particular UDN input port signals the UDN
 * available interrupt when data is available.
 */
#define SPR_UDN_AVAIL_EN 0x1b05

#define SPR_UDN_AVAIL_EN__EN_0_SHIFT 0
#define SPR_UDN_AVAIL_EN__EN_0_WIDTH 1
#define SPR_UDN_AVAIL_EN__EN_0_RESET_VAL 0
#define SPR_UDN_AVAIL_EN__EN_0_RMASK 0x1
#define SPR_UDN_AVAIL_EN__EN_0_MASK  0x1
#define SPR_UDN_AVAIL_EN__EN_0_FIELD 0,0

#define SPR_UDN_AVAIL_EN__EN_1_SHIFT 1
#define SPR_UDN_AVAIL_EN__EN_1_WIDTH 1
#define SPR_UDN_AVAIL_EN__EN_1_RESET_VAL 0
#define SPR_UDN_AVAIL_EN__EN_1_RMASK 0x1
#define SPR_UDN_AVAIL_EN__EN_1_MASK  0x2
#define SPR_UDN_AVAIL_EN__EN_1_FIELD 1,1

#define SPR_UDN_AVAIL_EN__EN_2_SHIFT 2
#define SPR_UDN_AVAIL_EN__EN_2_WIDTH 1
#define SPR_UDN_AVAIL_EN__EN_2_RESET_VAL 0
#define SPR_UDN_AVAIL_EN__EN_2_RMASK 0x1
#define SPR_UDN_AVAIL_EN__EN_2_MASK  0x4
#define SPR_UDN_AVAIL_EN__EN_2_FIELD 2,2

#define SPR_UDN_AVAIL_EN__EN_3_SHIFT 3
#define SPR_UDN_AVAIL_EN__EN_3_WIDTH 1
#define SPR_UDN_AVAIL_EN__EN_3_RESET_VAL 0
#define SPR_UDN_AVAIL_EN__EN_3_RMASK 0x1
#define SPR_UDN_AVAIL_EN__EN_3_MASK  0x8
#define SPR_UDN_AVAIL_EN__EN_3_FIELD 3,3


/*
 * UDN Complete Interrupt Pending.
 * This register has the status of UDN Complete Interrupt.
 */
#define SPR_UDN_COMPLETE_PENDING 0x0605

#define SPR_UDN_COMPLETE_PENDING__PENDING_SHIFT 0
#define SPR_UDN_COMPLETE_PENDING__PENDING_WIDTH 1
#define SPR_UDN_COMPLETE_PENDING__PENDING_RESET_VAL 0
#define SPR_UDN_COMPLETE_PENDING__PENDING_RMASK 0x1
#define SPR_UDN_COMPLETE_PENDING__PENDING_MASK  0x1
#define SPR_UDN_COMPLETE_PENDING__PENDING_FIELD 0,0


/*
 * User Dynamic Network Data Available.
 * This register contains bit fields which indicate that data is available on
 * particular User Dynamic Network demultiplexor ports and whether or not
 * that data is the last data word of a packet.
 */
#define SPR_UDN_DATA_AVAIL 0x0b80

#define SPR_UDN_DATA_AVAIL__AVAIL_0_SHIFT 0
#define SPR_UDN_DATA_AVAIL__AVAIL_0_WIDTH 1
#define SPR_UDN_DATA_AVAIL__AVAIL_0_RESET_VAL 0
#define SPR_UDN_DATA_AVAIL__AVAIL_0_RMASK 0x1
#define SPR_UDN_DATA_AVAIL__AVAIL_0_MASK  0x1
#define SPR_UDN_DATA_AVAIL__AVAIL_0_FIELD 0,0

#define SPR_UDN_DATA_AVAIL__AVAIL_1_SHIFT 1
#define SPR_UDN_DATA_AVAIL__AVAIL_1_WIDTH 1
#define SPR_UDN_DATA_AVAIL__AVAIL_1_RESET_VAL 0
#define SPR_UDN_DATA_AVAIL__AVAIL_1_RMASK 0x1
#define SPR_UDN_DATA_AVAIL__AVAIL_1_MASK  0x2
#define SPR_UDN_DATA_AVAIL__AVAIL_1_FIELD 1,1

#define SPR_UDN_DATA_AVAIL__AVAIL_2_SHIFT 2
#define SPR_UDN_DATA_AVAIL__AVAIL_2_WIDTH 1
#define SPR_UDN_DATA_AVAIL__AVAIL_2_RESET_VAL 0
#define SPR_UDN_DATA_AVAIL__AVAIL_2_RMASK 0x1
#define SPR_UDN_DATA_AVAIL__AVAIL_2_MASK  0x4
#define SPR_UDN_DATA_AVAIL__AVAIL_2_FIELD 2,2

#define SPR_UDN_DATA_AVAIL__AVAIL_3_SHIFT 3
#define SPR_UDN_DATA_AVAIL__AVAIL_3_WIDTH 1
#define SPR_UDN_DATA_AVAIL__AVAIL_3_RESET_VAL 0
#define SPR_UDN_DATA_AVAIL__AVAIL_3_RMASK 0x1
#define SPR_UDN_DATA_AVAIL__AVAIL_3_MASK  0x8
#define SPR_UDN_DATA_AVAIL__AVAIL_3_FIELD 3,3

#define SPR_UDN_DATA_AVAIL__EOP_0_SHIFT 4
#define SPR_UDN_DATA_AVAIL__EOP_0_WIDTH 1
#define SPR_UDN_DATA_AVAIL__EOP_0_RESET_VAL 0
#define SPR_UDN_DATA_AVAIL__EOP_0_RMASK 0x1
#define SPR_UDN_DATA_AVAIL__EOP_0_MASK  0x10
#define SPR_UDN_DATA_AVAIL__EOP_0_FIELD 4,4

#define SPR_UDN_DATA_AVAIL__EOP_1_SHIFT 5
#define SPR_UDN_DATA_AVAIL__EOP_1_WIDTH 1
#define SPR_UDN_DATA_AVAIL__EOP_1_RESET_VAL 0
#define SPR_UDN_DATA_AVAIL__EOP_1_RMASK 0x1
#define SPR_UDN_DATA_AVAIL__EOP_1_MASK  0x20
#define SPR_UDN_DATA_AVAIL__EOP_1_FIELD 5,5

#define SPR_UDN_DATA_AVAIL__EOP_2_SHIFT 6
#define SPR_UDN_DATA_AVAIL__EOP_2_WIDTH 1
#define SPR_UDN_DATA_AVAIL__EOP_2_RESET_VAL 0
#define SPR_UDN_DATA_AVAIL__EOP_2_RMASK 0x1
#define SPR_UDN_DATA_AVAIL__EOP_2_MASK  0x40
#define SPR_UDN_DATA_AVAIL__EOP_2_FIELD 6,6

#define SPR_UDN_DATA_AVAIL__EOP_3_SHIFT 7
#define SPR_UDN_DATA_AVAIL__EOP_3_WIDTH 1
#define SPR_UDN_DATA_AVAIL__EOP_3_RESET_VAL 0
#define SPR_UDN_DATA_AVAIL__EOP_3_RMASK 0x1
#define SPR_UDN_DATA_AVAIL__EOP_3_MASK  0x80
#define SPR_UDN_DATA_AVAIL__EOP_3_FIELD 7,7


/*
 * UDN Deadlock Counter.
 * Used to save/restore current state of deadlock down-counter.
 */
#define SPR_UDN_DEADLOCK_COUNT 0x1905

#define SPR_UDN_DEADLOCK_COUNT__UDN_DEADLOCK_COUNT_SHIFT 0
#define SPR_UDN_DEADLOCK_COUNT__UDN_DEADLOCK_COUNT_WIDTH 16
#define SPR_UDN_DEADLOCK_COUNT__UDN_DEADLOCK_COUNT_RESET_VAL 0
#define SPR_UDN_DEADLOCK_COUNT__UDN_DEADLOCK_COUNT_RMASK 0xffff
#define SPR_UDN_DEADLOCK_COUNT__UDN_DEADLOCK_COUNT_MASK  0xffff
#define SPR_UDN_DEADLOCK_COUNT__UDN_DEADLOCK_COUNT_FIELD 0,15


/*
 * UDN Deadlock Timeout.
 * Number of 16-cycle intervals to wait before asserting the deadlock
 * interrupt when data is stalled in the demux logic's dequeueing buffer.
 */
#define SPR_UDN_DEADLOCK_TIMEOUT 0x1906

#define SPR_UDN_DEADLOCK_TIMEOUT__UDN_DEADLOCK_TIMEOUT_SHIFT 0
#define SPR_UDN_DEADLOCK_TIMEOUT__UDN_DEADLOCK_TIMEOUT_WIDTH 16
#define SPR_UDN_DEADLOCK_TIMEOUT__UDN_DEADLOCK_TIMEOUT_RESET_VAL 0
#define SPR_UDN_DEADLOCK_TIMEOUT__UDN_DEADLOCK_TIMEOUT_RMASK 0xffff
#define SPR_UDN_DEADLOCK_TIMEOUT__UDN_DEADLOCK_TIMEOUT_MASK  0xffff
#define SPR_UDN_DEADLOCK_TIMEOUT__UDN_DEADLOCK_TIMEOUT_FIELD 0,15


/*
 * UDN Demux buffer threshold.
 * Number 1-word slices the UDN is allowed to consume in the demux buffer.
 * If the sum of IDN and UDN thresholds exceeds 249, the IDN and UDN networks
 * may compete for buffer entries and the UDN may starve the IDN, or the IDN
 * may starve the UDN. A value of 0 is interpreted as a value of 250.
 */
#define SPR_UDN_DEMUX_BUF_THRESH 0x2623

#define SPR_UDN_DEMUX_BUF_THRESH__UDN_DEMUX_BUF_THRESH_SHIFT 0
#define SPR_UDN_DEMUX_BUF_THRESH__UDN_DEMUX_BUF_THRESH_WIDTH 8
#define SPR_UDN_DEMUX_BUF_THRESH__UDN_DEMUX_BUF_THRESH_RESET_VAL 128
#define SPR_UDN_DEMUX_BUF_THRESH__UDN_DEMUX_BUF_THRESH_RMASK 0xff
#define SPR_UDN_DEMUX_BUF_THRESH__UDN_DEMUX_BUF_THRESH_MASK  0xff
#define SPR_UDN_DEMUX_BUF_THRESH__UDN_DEMUX_BUF_THRESH_FIELD 0,7


/*
 * User Dynamic Network Demultiplexor Count 0.
 * This register contains the number of words that have been received for
 * channel 0 of the User Dynamic Network
 */
#define SPR_UDN_DEMUX_COUNT_0 0x0b05

#define SPR_UDN_DEMUX_COUNT_0__UDN_DEMUX_COUNT_0_SHIFT 0
#define SPR_UDN_DEMUX_COUNT_0__UDN_DEMUX_COUNT_0_WIDTH 9
#define SPR_UDN_DEMUX_COUNT_0__UDN_DEMUX_COUNT_0_RESET_VAL 0
#define SPR_UDN_DEMUX_COUNT_0__UDN_DEMUX_COUNT_0_RMASK 0x1ff
#define SPR_UDN_DEMUX_COUNT_0__UDN_DEMUX_COUNT_0_MASK  0x1ff
#define SPR_UDN_DEMUX_COUNT_0__UDN_DEMUX_COUNT_0_FIELD 0,8


/*
 * User Dynamic Network Demultiplexor Count 1.
 * This register contains the number of words that have been received for
 * channel 1 of the User Dynamic Network
 */
#define SPR_UDN_DEMUX_COUNT_1 0x0b06

#define SPR_UDN_DEMUX_COUNT_1__UDN_DEMUX_COUNT_1_SHIFT 0
#define SPR_UDN_DEMUX_COUNT_1__UDN_DEMUX_COUNT_1_WIDTH 9
#define SPR_UDN_DEMUX_COUNT_1__UDN_DEMUX_COUNT_1_RESET_VAL 0
#define SPR_UDN_DEMUX_COUNT_1__UDN_DEMUX_COUNT_1_RMASK 0x1ff
#define SPR_UDN_DEMUX_COUNT_1__UDN_DEMUX_COUNT_1_MASK  0x1ff
#define SPR_UDN_DEMUX_COUNT_1__UDN_DEMUX_COUNT_1_FIELD 0,8


/*
 * User Dynamic Network Demultiplexor Count 2.
 * This register contains the number of words that have been received for
 * channel 2 of the User Dynamic Network
 */
#define SPR_UDN_DEMUX_COUNT_2 0x0b07

#define SPR_UDN_DEMUX_COUNT_2__UDN_DEMUX_COUNT_2_SHIFT 0
#define SPR_UDN_DEMUX_COUNT_2__UDN_DEMUX_COUNT_2_WIDTH 9
#define SPR_UDN_DEMUX_COUNT_2__UDN_DEMUX_COUNT_2_RESET_VAL 0
#define SPR_UDN_DEMUX_COUNT_2__UDN_DEMUX_COUNT_2_RMASK 0x1ff
#define SPR_UDN_DEMUX_COUNT_2__UDN_DEMUX_COUNT_2_MASK  0x1ff
#define SPR_UDN_DEMUX_COUNT_2__UDN_DEMUX_COUNT_2_FIELD 0,8


/*
 * User Dynamic Network Demultiplexor Count 3.
 * This register contains the number of words that have been received for
 * channel 3 of the User Dynamic Network
 */
#define SPR_UDN_DEMUX_COUNT_3 0x0b08

#define SPR_UDN_DEMUX_COUNT_3__UDN_DEMUX_COUNT_3_SHIFT 0
#define SPR_UDN_DEMUX_COUNT_3__UDN_DEMUX_COUNT_3_WIDTH 9
#define SPR_UDN_DEMUX_COUNT_3__UDN_DEMUX_COUNT_3_RESET_VAL 0
#define SPR_UDN_DEMUX_COUNT_3__UDN_DEMUX_COUNT_3_RMASK 0x1ff
#define SPR_UDN_DEMUX_COUNT_3__UDN_DEMUX_COUNT_3_MASK  0x1ff
#define SPR_UDN_DEMUX_COUNT_3__UDN_DEMUX_COUNT_3_FIELD 0,8


/*
 * UDN Direction Protect.
 * Prevent packets from a particular network port
 */
#define SPR_UDN_DIRECTION_PROTECT 0x1505

#define SPR_UDN_DIRECTION_PROTECT__N_PROTECT_SHIFT 0
#define SPR_UDN_DIRECTION_PROTECT__N_PROTECT_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__N_PROTECT_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__N_PROTECT_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__N_PROTECT_MASK  0x1
#define SPR_UDN_DIRECTION_PROTECT__N_PROTECT_FIELD 0,0

#define SPR_UDN_DIRECTION_PROTECT__E_PROTECT_SHIFT 1
#define SPR_UDN_DIRECTION_PROTECT__E_PROTECT_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__E_PROTECT_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__E_PROTECT_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__E_PROTECT_MASK  0x2
#define SPR_UDN_DIRECTION_PROTECT__E_PROTECT_FIELD 1,1

#define SPR_UDN_DIRECTION_PROTECT__S_PROTECT_SHIFT 2
#define SPR_UDN_DIRECTION_PROTECT__S_PROTECT_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__S_PROTECT_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__S_PROTECT_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__S_PROTECT_MASK  0x4
#define SPR_UDN_DIRECTION_PROTECT__S_PROTECT_FIELD 2,2

#define SPR_UDN_DIRECTION_PROTECT__W_PROTECT_SHIFT 3
#define SPR_UDN_DIRECTION_PROTECT__W_PROTECT_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__W_PROTECT_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__W_PROTECT_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__W_PROTECT_MASK  0x8
#define SPR_UDN_DIRECTION_PROTECT__W_PROTECT_FIELD 3,3

#define SPR_UDN_DIRECTION_PROTECT__C_PROTECT_SHIFT 4
#define SPR_UDN_DIRECTION_PROTECT__C_PROTECT_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__C_PROTECT_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__C_PROTECT_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__C_PROTECT_MASK  0x10
#define SPR_UDN_DIRECTION_PROTECT__C_PROTECT_FIELD 4,4

#define SPR_UDN_DIRECTION_PROTECT__N_DROP_SHIFT 5
#define SPR_UDN_DIRECTION_PROTECT__N_DROP_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__N_DROP_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__N_DROP_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__N_DROP_MASK  0x20
#define SPR_UDN_DIRECTION_PROTECT__N_DROP_FIELD 5,5

#define SPR_UDN_DIRECTION_PROTECT__E_DROP_SHIFT 6
#define SPR_UDN_DIRECTION_PROTECT__E_DROP_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__E_DROP_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__E_DROP_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__E_DROP_MASK  0x40
#define SPR_UDN_DIRECTION_PROTECT__E_DROP_FIELD 6,6

#define SPR_UDN_DIRECTION_PROTECT__S_DROP_SHIFT 7
#define SPR_UDN_DIRECTION_PROTECT__S_DROP_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__S_DROP_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__S_DROP_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__S_DROP_MASK  0x80
#define SPR_UDN_DIRECTION_PROTECT__S_DROP_FIELD 7,7

#define SPR_UDN_DIRECTION_PROTECT__W_DROP_SHIFT 8
#define SPR_UDN_DIRECTION_PROTECT__W_DROP_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__W_DROP_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__W_DROP_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__W_DROP_MASK  0x100
#define SPR_UDN_DIRECTION_PROTECT__W_DROP_FIELD 8,8

#define SPR_UDN_DIRECTION_PROTECT__C_DROP_SHIFT 9
#define SPR_UDN_DIRECTION_PROTECT__C_DROP_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__C_DROP_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__C_DROP_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__C_DROP_MASK  0x200
#define SPR_UDN_DIRECTION_PROTECT__C_DROP_FIELD 9,9

#define SPR_UDN_DIRECTION_PROTECT__N_SRC_VIOLATE_SHIFT 16
#define SPR_UDN_DIRECTION_PROTECT__N_SRC_VIOLATE_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__N_SRC_VIOLATE_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__N_SRC_VIOLATE_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__N_SRC_VIOLATE_MASK  0x10000
#define SPR_UDN_DIRECTION_PROTECT__N_SRC_VIOLATE_FIELD 16,16

#define SPR_UDN_DIRECTION_PROTECT__E_SRC_VIOLATE_SHIFT 17
#define SPR_UDN_DIRECTION_PROTECT__E_SRC_VIOLATE_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__E_SRC_VIOLATE_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__E_SRC_VIOLATE_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__E_SRC_VIOLATE_MASK  0x20000
#define SPR_UDN_DIRECTION_PROTECT__E_SRC_VIOLATE_FIELD 17,17

#define SPR_UDN_DIRECTION_PROTECT__S_SRC_VIOLATE_SHIFT 18
#define SPR_UDN_DIRECTION_PROTECT__S_SRC_VIOLATE_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__S_SRC_VIOLATE_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__S_SRC_VIOLATE_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__S_SRC_VIOLATE_MASK  0x40000
#define SPR_UDN_DIRECTION_PROTECT__S_SRC_VIOLATE_FIELD 18,18

#define SPR_UDN_DIRECTION_PROTECT__W_SRC_VIOLATE_SHIFT 19
#define SPR_UDN_DIRECTION_PROTECT__W_SRC_VIOLATE_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__W_SRC_VIOLATE_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__W_SRC_VIOLATE_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__W_SRC_VIOLATE_MASK  0x80000
#define SPR_UDN_DIRECTION_PROTECT__W_SRC_VIOLATE_FIELD 19,19

#define SPR_UDN_DIRECTION_PROTECT__M_SRC_VIOLATE_SHIFT 20
#define SPR_UDN_DIRECTION_PROTECT__M_SRC_VIOLATE_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__M_SRC_VIOLATE_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__M_SRC_VIOLATE_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__M_SRC_VIOLATE_MASK  0x100000
#define SPR_UDN_DIRECTION_PROTECT__M_SRC_VIOLATE_FIELD 20,20

#define SPR_UDN_DIRECTION_PROTECT__N_DEST_VIOLATE_SHIFT 24
#define SPR_UDN_DIRECTION_PROTECT__N_DEST_VIOLATE_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__N_DEST_VIOLATE_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__N_DEST_VIOLATE_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__N_DEST_VIOLATE_MASK  0x1000000
#define SPR_UDN_DIRECTION_PROTECT__N_DEST_VIOLATE_FIELD 24,24

#define SPR_UDN_DIRECTION_PROTECT__E_DEST_VIOLATE_SHIFT 25
#define SPR_UDN_DIRECTION_PROTECT__E_DEST_VIOLATE_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__E_DEST_VIOLATE_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__E_DEST_VIOLATE_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__E_DEST_VIOLATE_MASK  0x2000000
#define SPR_UDN_DIRECTION_PROTECT__E_DEST_VIOLATE_FIELD 25,25

#define SPR_UDN_DIRECTION_PROTECT__S_DEST_VIOLATE_SHIFT 26
#define SPR_UDN_DIRECTION_PROTECT__S_DEST_VIOLATE_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__S_DEST_VIOLATE_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__S_DEST_VIOLATE_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__S_DEST_VIOLATE_MASK  0x4000000
#define SPR_UDN_DIRECTION_PROTECT__S_DEST_VIOLATE_FIELD 26,26

#define SPR_UDN_DIRECTION_PROTECT__W_DEST_VIOLATE_SHIFT 27
#define SPR_UDN_DIRECTION_PROTECT__W_DEST_VIOLATE_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__W_DEST_VIOLATE_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__W_DEST_VIOLATE_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__W_DEST_VIOLATE_MASK  0x8000000
#define SPR_UDN_DIRECTION_PROTECT__W_DEST_VIOLATE_FIELD 27,27

#define SPR_UDN_DIRECTION_PROTECT__C_DEST_VIOLATE_SHIFT 28
#define SPR_UDN_DIRECTION_PROTECT__C_DEST_VIOLATE_WIDTH 1
#define SPR_UDN_DIRECTION_PROTECT__C_DEST_VIOLATE_RESET_VAL 0
#define SPR_UDN_DIRECTION_PROTECT__C_DEST_VIOLATE_RMASK 0x1
#define SPR_UDN_DIRECTION_PROTECT__C_DEST_VIOLATE_MASK  0x10000000
#define SPR_UDN_DIRECTION_PROTECT__C_DEST_VIOLATE_FIELD 28,28


/*
 * UDN Flush Egress.
 * When written, the udn egress buffer is flushed.
 */
#define SPR_UDN_FLUSH_EGRESS 0x0b09

#define SPR_UDN_FLUSH_EGRESS__UDN_FLUSH_EGRESS_SHIFT 0
#define SPR_UDN_FLUSH_EGRESS__UDN_FLUSH_EGRESS_WIDTH 64
#define SPR_UDN_FLUSH_EGRESS__UDN_FLUSH_EGRESS_RESET_VAL 0
#define SPR_UDN_FLUSH_EGRESS__UDN_FLUSH_EGRESS_RMASK _64bit(0xffffffffffffffff)
#define SPR_UDN_FLUSH_EGRESS__UDN_FLUSH_EGRESS_MASK  _64bit(0xffffffffffffffff)
#define SPR_UDN_FLUSH_EGRESS__UDN_FLUSH_EGRESS_FIELD 0,63


/*
 * UDN Words Pending.
 * Number of words remaining in packet being sent into network from main
 * processor.  UDN complete interrupt is signaled when this reaches 0 (if
 * enabled).
 */
#define SPR_UDN_PENDING 0x0b0a

#define SPR_UDN_PENDING__UDN_PENDING_SHIFT 0
#define SPR_UDN_PENDING__UDN_PENDING_WIDTH 8
#define SPR_UDN_PENDING__UDN_PENDING_RESET_VAL 0
#define SPR_UDN_PENDING__UDN_PENDING_RMASK 0xff
#define SPR_UDN_PENDING__UDN_PENDING_MASK  0xff
#define SPR_UDN_PENDING__UDN_PENDING_FIELD 0,7


/*
 * UDN Route Order.
 * This register specifies x-y or y-x routing for the UDN.
 */
#define SPR_UDN_ROUTE_ORDER 0x0b0b

#define SPR_UDN_ROUTE_ORDER__ROUTE_X_FIRST_SHIFT 0
#define SPR_UDN_ROUTE_ORDER__ROUTE_X_FIRST_WIDTH 1
#define SPR_UDN_ROUTE_ORDER__ROUTE_X_FIRST_RESET_VAL 0
#define SPR_UDN_ROUTE_ORDER__ROUTE_X_FIRST_RMASK 0x1
#define SPR_UDN_ROUTE_ORDER__ROUTE_X_FIRST_MASK  0x1
#define SPR_UDN_ROUTE_ORDER__ROUTE_X_FIRST_FIELD 0,0


/*
 * UDN Switch Point Fifo Count.
 * Number of valid entries in the switch input buffer from each direction.
 */
#define SPR_UDN_SP_FIFO_CNT 0x0b0c

#define SPR_UDN_SP_FIFO_CNT__N_FIFO_CNT_SHIFT 0
#define SPR_UDN_SP_FIFO_CNT__N_FIFO_CNT_WIDTH 2
#define SPR_UDN_SP_FIFO_CNT__N_FIFO_CNT_RESET_VAL 0
#define SPR_UDN_SP_FIFO_CNT__N_FIFO_CNT_RMASK 0x3
#define SPR_UDN_SP_FIFO_CNT__N_FIFO_CNT_MASK  0x3
#define SPR_UDN_SP_FIFO_CNT__N_FIFO_CNT_FIELD 0,1

#define SPR_UDN_SP_FIFO_CNT__S_FIFO_CNT_SHIFT 2
#define SPR_UDN_SP_FIFO_CNT__S_FIFO_CNT_WIDTH 2
#define SPR_UDN_SP_FIFO_CNT__S_FIFO_CNT_RESET_VAL 0
#define SPR_UDN_SP_FIFO_CNT__S_FIFO_CNT_RMASK 0x3
#define SPR_UDN_SP_FIFO_CNT__S_FIFO_CNT_MASK  0xc
#define SPR_UDN_SP_FIFO_CNT__S_FIFO_CNT_FIELD 2,3

#define SPR_UDN_SP_FIFO_CNT__E_FIFO_CNT_SHIFT 4
#define SPR_UDN_SP_FIFO_CNT__E_FIFO_CNT_WIDTH 2
#define SPR_UDN_SP_FIFO_CNT__E_FIFO_CNT_RESET_VAL 0
#define SPR_UDN_SP_FIFO_CNT__E_FIFO_CNT_RMASK 0x3
#define SPR_UDN_SP_FIFO_CNT__E_FIFO_CNT_MASK  0x30
#define SPR_UDN_SP_FIFO_CNT__E_FIFO_CNT_FIELD 4,5

#define SPR_UDN_SP_FIFO_CNT__W_FIFO_CNT_SHIFT 6
#define SPR_UDN_SP_FIFO_CNT__W_FIFO_CNT_WIDTH 2
#define SPR_UDN_SP_FIFO_CNT__W_FIFO_CNT_RESET_VAL 0
#define SPR_UDN_SP_FIFO_CNT__W_FIFO_CNT_RMASK 0x3
#define SPR_UDN_SP_FIFO_CNT__W_FIFO_CNT_MASK  0xc0
#define SPR_UDN_SP_FIFO_CNT__W_FIFO_CNT_FIELD 6,7

#define SPR_UDN_SP_FIFO_CNT__C_FIFO_CNT_SHIFT 8
#define SPR_UDN_SP_FIFO_CNT__C_FIFO_CNT_WIDTH 4
#define SPR_UDN_SP_FIFO_CNT__C_FIFO_CNT_RESET_VAL 0
#define SPR_UDN_SP_FIFO_CNT__C_FIFO_CNT_RMASK 0xf
#define SPR_UDN_SP_FIFO_CNT__C_FIFO_CNT_MASK  0xf00
#define SPR_UDN_SP_FIFO_CNT__C_FIFO_CNT_FIELD 8,11


/*
 * Watch Mask Register.
 * This bit is a mask for the comparison of data selected by DIAG_MUX_CTL to
 * WATCH_VAL.  Asserted bits will not be compared to WATCH_VAL.
 */
#define SPR_WATCH_MASK 0x200a

#define SPR_WATCH_MASK__WATCH_MASK_SHIFT 0
#define SPR_WATCH_MASK__WATCH_MASK_WIDTH 64
#define SPR_WATCH_MASK__WATCH_MASK_RESET_VAL 0
#define SPR_WATCH_MASK__WATCH_MASK_RMASK _64bit(0xffffffffffffffff)
#define SPR_WATCH_MASK__WATCH_MASK_MASK  _64bit(0xffffffffffffffff)
#define SPR_WATCH_MASK__WATCH_MASK_FIELD 0,63


/*
 * Watch Value Register.
 * Used to match against the data selected by DIAG_MUX_CTL.  When match
 * occurs, event is asserted and can be selected via PERF_COUNT_CTL to be
 * used for performance count, trace data trigger, or broadcast.
 */
#define SPR_WATCH_VAL 0x200b

#define SPR_WATCH_VAL__WATCH_VAL_SHIFT 0
#define SPR_WATCH_VAL__WATCH_VAL_WIDTH 64
#define SPR_WATCH_VAL__WATCH_VAL_RESET_VAL 0
#define SPR_WATCH_VAL__WATCH_VAL_RMASK _64bit(0xffffffffffffffff)
#define SPR_WATCH_VAL__WATCH_VAL_MASK  _64bit(0xffffffffffffffff)
#define SPR_WATCH_VAL__WATCH_VAL_FIELD 0,63


/*
 * Data TLB Wired Entries.
 * This register is used to specify how many data TLB entries are wired down
 * and should not be replaced by the random replacement algorithm. An update
 * to the register must be followed by changing the REPLACEMENT_DTLB value.
 */
#define SPR_WIRED_DTLB 0x1290

#define SPR_WIRED_DTLB__INDEX_SHIFT 0
#define SPR_WIRED_DTLB__INDEX_WIDTH 5
#define SPR_WIRED_DTLB__INDEX_RESET_VAL 0
#define SPR_WIRED_DTLB__INDEX_RMASK 0x1f
#define SPR_WIRED_DTLB__INDEX_MASK  0x1f
#define SPR_WIRED_DTLB__INDEX_FIELD 0,4


/*
 * Instruction TLB Wired Entries.
 * This register is used to specify how many instruction TLB entries are
 * wired down and should not be replaced by the random replacement algorithm.
 * An update to the register must be followed by changing the
 * REPLACEMENT_ITLB value.
 */
#define SPR_WIRED_ITLB 0x078d

#define SPR_WIRED_ITLB__INDEX_SHIFT 0
#define SPR_WIRED_ITLB__INDEX_WIDTH 4
#define SPR_WIRED_ITLB__INDEX_RESET_VAL 0
#define SPR_WIRED_ITLB__INDEX_RMASK 0xf
#define SPR_WIRED_ITLB__INDEX_MASK  0xf
#define SPR_WIRED_ITLB__INDEX_FIELD 0,3


/*
 * XDN Core Starvation Count.
 * This register specifies the number of cycles the Core may be starved
 * before the starvation logic is triggered and the core is forced to go.
 */
#define SPR_XDN_CORE_STARVATION_COUNT 0x2624

#define SPR_XDN_CORE_STARVATION_COUNT__XDN_CORE_STARVATION_COUNT_SHIFT 0
#define SPR_XDN_CORE_STARVATION_COUNT__XDN_CORE_STARVATION_COUNT_WIDTH 10
#define SPR_XDN_CORE_STARVATION_COUNT__XDN_CORE_STARVATION_COUNT_RESET_VAL 100
#define SPR_XDN_CORE_STARVATION_COUNT__XDN_CORE_STARVATION_COUNT_RMASK 0x3ff
#define SPR_XDN_CORE_STARVATION_COUNT__XDN_CORE_STARVATION_COUNT_MASK  0x3ff
#define SPR_XDN_CORE_STARVATION_COUNT__XDN_CORE_STARVATION_COUNT_FIELD 0,9


/*
 * XDN Demultiplexor Error.
 * A parity error has occurred with the XDN demultiplexor.
 */
#define SPR_XDN_DEMUX_ERROR 0x000b

#define SPR_XDN_DEMUX_ERROR__ERROR_ENTRY_SHIFT 0
#define SPR_XDN_DEMUX_ERROR__ERROR_ENTRY_WIDTH 8
#define SPR_XDN_DEMUX_ERROR__ERROR_ENTRY_RESET_VAL 0
#define SPR_XDN_DEMUX_ERROR__ERROR_ENTRY_RMASK 0xff
#define SPR_XDN_DEMUX_ERROR__ERROR_ENTRY_MASK  0xff
#define SPR_XDN_DEMUX_ERROR__ERROR_ENTRY_FIELD 0,7

#define SPR_XDN_DEMUX_ERROR__XDN_DEMUX_ERROR_OVERFLOW_SHIFT 30
#define SPR_XDN_DEMUX_ERROR__XDN_DEMUX_ERROR_OVERFLOW_WIDTH 1
#define SPR_XDN_DEMUX_ERROR__XDN_DEMUX_ERROR_OVERFLOW_RESET_VAL 0
#define SPR_XDN_DEMUX_ERROR__XDN_DEMUX_ERROR_OVERFLOW_RMASK 0x1
#define SPR_XDN_DEMUX_ERROR__XDN_DEMUX_ERROR_OVERFLOW_MASK  0x40000000
#define SPR_XDN_DEMUX_ERROR__XDN_DEMUX_ERROR_OVERFLOW_FIELD 30,30

#define SPR_XDN_DEMUX_ERROR__XDN_DEMUX_ERROR_PENDING_SHIFT 31
#define SPR_XDN_DEMUX_ERROR__XDN_DEMUX_ERROR_PENDING_WIDTH 1
#define SPR_XDN_DEMUX_ERROR__XDN_DEMUX_ERROR_PENDING_RESET_VAL 0
#define SPR_XDN_DEMUX_ERROR__XDN_DEMUX_ERROR_PENDING_RMASK 0x1
#define SPR_XDN_DEMUX_ERROR__XDN_DEMUX_ERROR_PENDING_MASK  0x80000000
#define SPR_XDN_DEMUX_ERROR__XDN_DEMUX_ERROR_PENDING_FIELD 31,31


/*
 * XDN Round Robin Arbitration Control.
 * This register specifies which networks use round-robin arbitration on the
 * switch points. Default is to use Network Priority Arbitration (NPA), a
 * policy that gives priority to packets in the network over packets from the
 * core.
 */
#define SPR_XDN_ROUND_ROBIN_ARB_CTL 0x2625

#define SPR_XDN_ROUND_ROBIN_ARB_CTL__QDN_RRA_EN_SHIFT 0
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__QDN_RRA_EN_WIDTH 1
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__QDN_RRA_EN_RESET_VAL 0
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__QDN_RRA_EN_RMASK 0x1
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__QDN_RRA_EN_MASK  0x1
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__QDN_RRA_EN_FIELD 0,0

#define SPR_XDN_ROUND_ROBIN_ARB_CTL__RDN_RRA_EN_SHIFT 1
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__RDN_RRA_EN_WIDTH 1
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__RDN_RRA_EN_RESET_VAL 0
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__RDN_RRA_EN_RMASK 0x1
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__RDN_RRA_EN_MASK  0x2
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__RDN_RRA_EN_FIELD 1,1

#define SPR_XDN_ROUND_ROBIN_ARB_CTL__SDN_RRA_EN_SHIFT 2
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__SDN_RRA_EN_WIDTH 1
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__SDN_RRA_EN_RESET_VAL 0
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__SDN_RRA_EN_RMASK 0x1
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__SDN_RRA_EN_MASK  0x4
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__SDN_RRA_EN_FIELD 2,2

#define SPR_XDN_ROUND_ROBIN_ARB_CTL__IDN_RRA_EN_SHIFT 3
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__IDN_RRA_EN_WIDTH 1
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__IDN_RRA_EN_RESET_VAL 0
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__IDN_RRA_EN_RMASK 0x1
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__IDN_RRA_EN_MASK  0x8
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__IDN_RRA_EN_FIELD 3,3

#define SPR_XDN_ROUND_ROBIN_ARB_CTL__UDN_RRA_EN_SHIFT 4
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__UDN_RRA_EN_WIDTH 1
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__UDN_RRA_EN_RESET_VAL 0
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__UDN_RRA_EN_RMASK 0x1
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__UDN_RRA_EN_MASK  0x10
#define SPR_XDN_ROUND_ROBIN_ARB_CTL__UDN_RRA_EN_FIELD 4,4

#endif /* !defined(__DOXYGEN__) */

