OUTPUT_ARCH(tile)
STARTUP(start.o)

PROVIDE(_hv_init = 0);
PROVIDE(_hv_inquire_asid = 0);
PROVIDE(_hv_install_context = 0);
PROVIDE(intrpt_start = 0);
PROVIDE(_hv_inquire_topology = 0);
PROVIDE(__per_cpu_offset = 0);
PROVIDE(smp_topology = 0);
PROVIDE(boot_sp = 0);
PROVIDE(boot_pc = 0);

/*
PROVIDE(hardware_init_hook = 0);
PROVIDE(software_init_hook = 0);
PROVIDE(software_term_hook = 0);
*/

PHDRS
{
  /*intrpt PT_LOAD;*/
  text PT_LOAD;
  data PT_LOAD;
}

SECTIONS
{
    . = 0x20000;
    .text :
    {
        __text = . ;
        *(.head.text)
        *(.text)
        *(.text.*)
        *(.glue_7t)
        *(.glue_7)
    } : text
    _etext = .	;
    PROVIDE (etext = .)	;
    .rodata : {
		*(.rodata)
		*(.rodata.*)
	} : text

    . = ALIGN(4);
    __idata_start = . ;
    .data   :  AT(__idata_start)
    {
        __data_start = . ;
        *(.init.data)
        *(.data)
        *(.data.*)
    } : data
    __idata_end = __idata_start + SIZEOF(.data);
    _edata  =  . ;
    PROVIDE (edata = .);
    . = ALIGN(4);
    __bss_start = .	;
    .bss       :
    {
      *(.bss)
      *(COMMON)
   . = ALIGN(32 / 8);
    } : data
    __bss_end = .;
     _end = .		;

    PROVIDE (end = .)	;
    .comment 0 : { *(.comment) }

  /* DWARF debug sections.
     Symbols in the DWARF debugging sections are relative to
     the beginning of the section so we begin them at 0.  */

  /* DWARF 1 */
  .debug          0 : { *(.debug) }
  .line           0 : { *(.line) }

  /* GNU DWARF 1 extensions */
  .debug_srcinfo  0 : { *(.debug_srcinfo) }
  .debug_sfnames  0 : { *(.debug_sfnames) }

  /* DWARF 1.1 and DWARF 2 */
  .debug_aranges  0 : { *(.debug_aranges) }
  .debug_pubnames 0 : { *(.debug_pubnames) }

  /* DWARF 2 */
  .debug_info     0 : { *(.debug_info) }
  .debug_abbrev   0 : { *(.debug_abbrev) }
  .debug_line     0 : { *(.debug_line) }
  .debug_frame    0 : { *(.debug_frame) }
  .debug_str      0 : { *(.debug_str) }
  .debug_loc      0 : { *(.debug_loc) }
  .debug_macinfo  0 : { *(.debug_macinfo) }

  /* SGI/MIPS DWARF 2 extensions */
  .debug_weaknames 0 : { *(.debug_weaknames) }
  .debug_funcnames 0 : { *(.debug_funcnames) }
  .debug_typenames 0 : { *(.debug_typenames) }
  .debug_varnames  0 : { *(.debug_varnames) }

  /DISCARD/ : { *(*) }
}
