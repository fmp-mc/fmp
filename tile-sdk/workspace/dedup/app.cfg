#include "app.h"

INCLUDE("target_timer.cfg");
INCLUDE("syssvc/syslog.cfg");
INCLUDE("syssvc/banner.cfg");
INCLUDE("syssvc/my_serial.cfg");
INCLUDE("syssvc/logtask.cfg");
INCLUDE("target_ipi.cfg");
INCLUDE("parsec-helper.cfg");
INCLUDE("posix.cfg");
//INCLUDE("loadbalancer.cfg");

CLASS(TCL_1){
	CRE_TSK(MAIN_TASK1, { TA_ACT, 1, main_task, MAIN_PRIORITY, STACK_SIZE * 10, NULL });
}

#if 0
/* [[[cog
import cog, pass0
for i in range(1, pass0.core_number + 1):
    cog.outl('CLASS(TCL_%d){' % i);
    cog.outl('CRE_CYC(CYC_PTHREAD_RR_{0}, {{ TA_STA, 0, cyc_pthread_rr, 100, 1 }});'.format(i))
    cog.outl('}');
]]] */
CLASS(TCL_1){
CRE_CYC(CYC_PTHREAD_RR_1, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_2){
CRE_CYC(CYC_PTHREAD_RR_2, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_3){
CRE_CYC(CYC_PTHREAD_RR_3, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_4){
CRE_CYC(CYC_PTHREAD_RR_4, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_5){
CRE_CYC(CYC_PTHREAD_RR_5, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_6){
CRE_CYC(CYC_PTHREAD_RR_6, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_7){
CRE_CYC(CYC_PTHREAD_RR_7, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_8){
CRE_CYC(CYC_PTHREAD_RR_8, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_9){
CRE_CYC(CYC_PTHREAD_RR_9, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_10){
CRE_CYC(CYC_PTHREAD_RR_10, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_11){
CRE_CYC(CYC_PTHREAD_RR_11, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_12){
CRE_CYC(CYC_PTHREAD_RR_12, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_13){
CRE_CYC(CYC_PTHREAD_RR_13, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_14){
CRE_CYC(CYC_PTHREAD_RR_14, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_15){
CRE_CYC(CYC_PTHREAD_RR_15, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_16){
CRE_CYC(CYC_PTHREAD_RR_16, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_17){
CRE_CYC(CYC_PTHREAD_RR_17, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_18){
CRE_CYC(CYC_PTHREAD_RR_18, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_19){
CRE_CYC(CYC_PTHREAD_RR_19, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_20){
CRE_CYC(CYC_PTHREAD_RR_20, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_21){
CRE_CYC(CYC_PTHREAD_RR_21, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_22){
CRE_CYC(CYC_PTHREAD_RR_22, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_23){
CRE_CYC(CYC_PTHREAD_RR_23, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_24){
CRE_CYC(CYC_PTHREAD_RR_24, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_25){
CRE_CYC(CYC_PTHREAD_RR_25, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_26){
CRE_CYC(CYC_PTHREAD_RR_26, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_27){
CRE_CYC(CYC_PTHREAD_RR_27, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_28){
CRE_CYC(CYC_PTHREAD_RR_28, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_29){
CRE_CYC(CYC_PTHREAD_RR_29, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_30){
CRE_CYC(CYC_PTHREAD_RR_30, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_31){
CRE_CYC(CYC_PTHREAD_RR_31, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_32){
CRE_CYC(CYC_PTHREAD_RR_32, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_33){
CRE_CYC(CYC_PTHREAD_RR_33, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_34){
CRE_CYC(CYC_PTHREAD_RR_34, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_35){
CRE_CYC(CYC_PTHREAD_RR_35, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_36){
CRE_CYC(CYC_PTHREAD_RR_36, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_37){
CRE_CYC(CYC_PTHREAD_RR_37, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_38){
CRE_CYC(CYC_PTHREAD_RR_38, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_39){
CRE_CYC(CYC_PTHREAD_RR_39, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_40){
CRE_CYC(CYC_PTHREAD_RR_40, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_41){
CRE_CYC(CYC_PTHREAD_RR_41, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_42){
CRE_CYC(CYC_PTHREAD_RR_42, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_43){
CRE_CYC(CYC_PTHREAD_RR_43, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_44){
CRE_CYC(CYC_PTHREAD_RR_44, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_45){
CRE_CYC(CYC_PTHREAD_RR_45, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_46){
CRE_CYC(CYC_PTHREAD_RR_46, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_47){
CRE_CYC(CYC_PTHREAD_RR_47, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_48){
CRE_CYC(CYC_PTHREAD_RR_48, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_49){
CRE_CYC(CYC_PTHREAD_RR_49, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_50){
CRE_CYC(CYC_PTHREAD_RR_50, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_51){
CRE_CYC(CYC_PTHREAD_RR_51, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_52){
CRE_CYC(CYC_PTHREAD_RR_52, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_53){
CRE_CYC(CYC_PTHREAD_RR_53, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_54){
CRE_CYC(CYC_PTHREAD_RR_54, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_55){
CRE_CYC(CYC_PTHREAD_RR_55, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_56){
CRE_CYC(CYC_PTHREAD_RR_56, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_57){
CRE_CYC(CYC_PTHREAD_RR_57, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_58){
CRE_CYC(CYC_PTHREAD_RR_58, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_59){
CRE_CYC(CYC_PTHREAD_RR_59, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_60){
CRE_CYC(CYC_PTHREAD_RR_60, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_61){
CRE_CYC(CYC_PTHREAD_RR_61, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_62){
CRE_CYC(CYC_PTHREAD_RR_62, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_63){
CRE_CYC(CYC_PTHREAD_RR_63, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_64){
CRE_CYC(CYC_PTHREAD_RR_64, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_65){
CRE_CYC(CYC_PTHREAD_RR_65, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_66){
CRE_CYC(CYC_PTHREAD_RR_66, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_67){
CRE_CYC(CYC_PTHREAD_RR_67, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_68){
CRE_CYC(CYC_PTHREAD_RR_68, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_69){
CRE_CYC(CYC_PTHREAD_RR_69, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_70){
CRE_CYC(CYC_PTHREAD_RR_70, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_71){
CRE_CYC(CYC_PTHREAD_RR_71, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
CLASS(TCL_72){
CRE_CYC(CYC_PTHREAD_RR_72, { TA_STA, 0, cyc_pthread_rr, 100, 1 });
}
/* [[[end]]] */
#endif

